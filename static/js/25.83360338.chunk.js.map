{"version":3,"sources":["Store/Actions/CorporateActions/CorporateAction.js","Components/Forms/StudentCmp/StudentAuthenticationCmp.js","Pages/Forms/Student/StudentAuthentication.js"],"names":["ResetRdrAction","dispatch","type","actionTypes","payload","undefined","APIStatus","val","GetCountryCodeAction","Axios","get","then","res","resp","data","catch","err","JSON","stringify","toast","error","parse","message","SignupAction","model","history","URL","formData","FormData","key","append","post","localStorage","removeItem","setItem","success","push","response","errors","StudentSignupAction","VerifyOtpAction","MobileVerified","emailVerified","ResendOtpAction","GetCategoryListAction","SaveCoprorateData","step","CreatePaymentAction","token","getItem","header","headers","sessionStorage","orderID","ValidatePaymentAction","messages","forEach","referenceObject","StudentAuthenticationCmp","emailOtp","otp","handlerChange","handleSubmit","resend","otpErr","otp2Err","className","onSubmit","name","onChange","value","placeholder","required","href","onClick","StudentAuthentication","props","useState","setOtp","setEmailOtp","setErrors","useDispatch","stakeholder","platformUID","otpType","event","target","test","length","preState","preventDefault","mobileModel","email","phone","phoneNumber","phoneOtp"],"mappings":"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","file":"static/js/25.83360338.chunk.js","sourcesContent":["\nimport Axios from '../../../utils/axios';\nimport { toast } from 'react-toastify';\nimport * as actionTypes from './actionTypes';\n\n\n\n// RESET ALL REDUCERES\nexport const ResetRdrAction = () => {\n    return (dispatch) => {\n        dispatch({\n            type: actionTypes.RESET,\n            payload: undefined\n        })\n    }\n}\n\nexport const APISuccess = () => {\n    return (dispatch) => {\n        dispatch({\n            type: actionTypes.SUCCESS,\n            payload: true\n        })\n    }\n}\nexport const APIStatus = (val) => {\n    return (dispatch) => {\n        dispatch({ type: actionTypes.APISTATUS, payload: val });\n    }\n}\n\nexport const APIError = () => {\n    return (dispatch) => {\n        dispatch({\n            type: actionTypes.ERROR,\n            payload: true\n        })\n    }\n}\n\n\nexport const GetCountryCodeAction = () => {\n    return (dispatch) => {\n        const URL = \"http://restcountries.eu/rest/v2/all?fields=name;flag;callingCodes;\";\n        Axios.get(URL)\n            .then((res) => {\n                let resp = res.data;\n                dispatch({ type: actionTypes.COUNTRYCODES, payload: resp });\n            })\n            .catch((err) => {\n                const val = JSON.stringify(err);\n                toast.error(JSON.parse(val).message);\n            })\n    }\n}\n\n// REGISTER (CORPORATE & UNIVERSITY)\nexport const SignupAction = (model, history, type) => {\n    return (dispatch) => {\n        // const URL = \"/o/signUp/Corporate\";\n        let URL;\n        if (type === 'Corporate') {\n            URL = \"/o/signUp/Corporate\";\n        } else if (type === 'University') {\n            URL = \"/o/signUp/University\";\n        }\n        let formData = new FormData();\n        for (const key in model) {\n            formData.append(key, model[key]);\n        }\n        dispatch(APIStatus(true));\n        dispatch({ type: actionTypes.CORPORATE, payload: model });\n        Axios.post(URL, formData)\n            .then((res) => {\n                let resp = res.data;\n                localStorage.removeItem('imgpath');\n                localStorage.setItem('regStatus', JSON.stringify(resp));\n                localStorage.setItem('steps', 3);\n                dispatch({ type: actionTypes.STEPS, payload: 3 });\n                dispatch(APIStatus(false));\n                toast.success(resp.message);\n                history.push('/register/authentication');\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\n// REGISTER (STUDENT)\nexport const StudentSignupAction = (model, history, type) => {\n    return (dispatch) => {\n        const URL = \"/o/signUp/Student\";\n        let formData = new FormData();\n        for (const key in model) {\n            formData.append(key, model[key]);\n        }\n        dispatch(APIStatus(true));\n        dispatch({ type: actionTypes.CORPORATE, payload: model });\n        Axios.post(URL, formData)\n            .then((res) => {\n                let resp = res.data;\n                localStorage.removeItem('imgpath');\n                localStorage.setItem('regStatus', JSON.stringify(resp));\n                localStorage.setItem('steps', 3);\n                dispatch({ type: actionTypes.STEPS, payload: 3 });\n                dispatch(APIStatus(false));\n                toast.success(resp.message);\n                history.push('/register/studentAuthentication');\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\n// LOGIN\nexport const LoginUserAction = (model, history) => {\n    return (dispatch) => {\n        const URL = \"/o/login\";\n        let formData = new FormData();\n        formData.append('stakeholder', model.stakeholder);\n        formData.append('userID', model.userID);\n        formData.append('password', model.password);\n        dispatch(APIStatus(true));\n        Axios.post(URL, formData)\n            .then((res) => {\n                let resp = res.data;\n                localStorage.setItem('token', resp.token);\n                dispatch(APIStatus(false));\n                toast.success(\"Login successful\");\n                if (resp.redirectURL === '/dashboard') {\n                    history.push('/dashboard');\n                } else {\n                    history.push('/register/payment');\n                }\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\n// VERIFY OTP\nexport const VerifyOtpAction = (model, type, history) => {\n    return (dispatch) => {\n        // const URL = \"/verifyMobile\";\n        const URL = \"/o/verifyOTP\";\n        // if (type === 1) {\n        //     URL = \"/o/verifyMobile\"\n        // } else {\n        //     URL = \"/o/verifyEmail\"\n        // }\n        let formData = new FormData();\n        for (const key in model) {\n            formData.append(key, model[key]);\n        }\n        dispatch(APIStatus(true));\n        Axios.post(URL, formData)\n            .then((res) => {\n                let resp = res.data;\n                dispatch(APIStatus(false));\n                if (resp?.MobileVerified && resp?.emailVerified) {\n                    toast.success('OTP verification successful');\n                    history.push('/register/completed');\n                } else {\n                    toast.error('OTP verification failed');\n                }\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\n// RESEND OTP\nexport const ResendOtpAction = (model) => {\n    return (dispatch) => {\n        const URL = \"/o/resendOtp\";\n        let formData = new FormData();\n        for (const key in model) {\n            formData.append(key, model[key]);\n        }\n        dispatch(APIStatus(true));\n        Axios.post(URL, formData)\n            .then((res) => {\n                let resp = res.data;\n                toast.success(resp.message);\n                dispatch(APIStatus(false));\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\nexport const GetCategoryListAction = (type) => {\n    return (dispatch) => {\n        // const URL = \"/u/lut/?lutList=corporateType&lutList=corporateCategory&lutList=corporateIndustry\";\n        let URL;\n        if (type === 'Corporate') {\n            URL = \"/u/lut/?lutList=corporateType&lutList=corporateCategory&lutList=corporateIndustry\"\n        } else if (type === 'University') {\n            URL = \"/u/lut/?lutList=universityCategory\"\n        }\n        Axios.get(URL)\n            .then((res) => {\n                let resp = res.data;\n                dispatch({ type: actionTypes.CATEGOTYLIST, payload: resp });\n            })\n            .catch((err) => {\n                const val = JSON.stringify(err);\n                toast.error(JSON.parse(val).message);\n            })\n    }\n}\n\nexport const SaveCoprorateData = (data, step) => {\n    return (dispatch) => {\n        localStorage.setItem('steps', step);\n        dispatch({ type: actionTypes.CORPORATE, payload: data });\n        dispatch({ type: actionTypes.STEPS, payload: step });\n    }\n}\n\n\n// CREATE PAYMENT\nexport const CreatePaymentAction = (model) => {\n    return (dispatch) => {\n        const URL = \"/pg/createPayment\";\n        let formData = new FormData();\n        for (const key in model) {\n            formData.append(key, model[key]);\n        }\n        // formData.append('payType', val);\n        // formData.append('payType', 'REG_FEE');\n        dispatch(APIStatus(true));\n        const token = localStorage.getItem('token');\n        const header = {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                // 'Content-Type': 'application/json'\n            }\n        }\n        Axios.post(URL, formData, header)\n            .then((res) => {\n                let resp = res.data;\n                sessionStorage.setItem('orderID', resp.orderID);\n                dispatch({ type: actionTypes.PAYMENTORDER, payload: resp });\n                dispatch(APIStatus(false));\n                // toast.success(resp.message);\n                // history.push('/register/completed');\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\n// VALIDATE PAYMENT\nexport const ValidatePaymentAction = (model) => {\n    return (dispatch) => {\n        const URL = \"/pg/verifyPayment\";\n        let formData = new FormData();\n        formData.append('orderID', model);\n        const token = localStorage.getItem('token');\n        const header = {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                // 'Content-Type': 'application/json'\n            }\n        }\n        dispatch(APIStatus(true));\n        Axios.post(URL, formData, header)\n            .then((res) => {\n                let resp = res.data;\n                resp?.messages?.forEach(key => {\n                    toast.success(key);\n                });\n                dispatch(APIStatus(false));\n                dispatch({ type: actionTypes.REFERENCEOBJ, payload: JSON.parse(resp?.referenceObject) });\n                // history.push('/register/completed');\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}","import React from 'react';\n\nconst StudentAuthenticationCmp = ({ history, errors, emailOtp, otp, handlerChange, handleSubmit, resend }) => {\n    const { otpErr, otp2Err } = errors;\n    return (\n        <form className=\"login-form reg-form\" onSubmit={handleSubmit}>\n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-10\">\n                    <div className=\"reg-header justify-content-center\">\n                        Verify your Primary Email &amp; Phone Number\n                    </div>\n                    <div className=\"row justify-content-center reg-center\">\n                        <div className=\"col-md-8\">\n                            <div className=\"reg-media\">\n                                <div className=\"reg-media-icon\">\n                                    <i className=\"fas fa-envelope\" />\n                                </div>\n                                <div className=\"reg-media-grp\">\n                                    <div className=\"login-grp\">\n                                        <label className=\"login-label\">Enter the OTP sent to Primary Contact Email</label>\n                                        <input\n                                            type=\"password\"\n                                            name=\"emailOtp\"\n                                            onChange={handlerChange}\n                                            value={emailOtp}\n                                            className={`login-inp${otp2Err ? ' login-inp-error' : ''}`}\n                                            placeholder=\"xxxxxx\"\n                                            required={false} />\n                                        {otp2Err ? <p className=\"inp-errors\">{otp2Err}</p> : null}\n                                        <p className=\"reg-resend\"><a href=\"javascript:void(0)\" onClick={() => resend('Email')}>Resend OTP</a></p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"reg-media\">\n                                <div className=\"reg-media-icon\">\n                                    <i className=\"far fa-comment-alt\" />\n                                </div>\n                                <div className=\"reg-media-grp\">\n                                    <div className=\"login-grp\">\n                                        <label className=\"login-label\">Enter the OTP sent to Primary Contact Mobile</label>\n                                        <input\n                                            type=\"password\"\n                                            name=\"otp\"\n                                            onChange={handlerChange}\n                                            value={otp}\n                                            className={`login-inp${otpErr ? ' login-inp-error' : ''}`}\n                                            placeholder=\"xxxxxx\"\n                                            required={false} />\n                                        {otpErr ? <p className=\"inp-errors\">{otpErr}</p> : null}\n                                        <p className=\"reg-resend\"><a href=\"javascript:void(0)\" onClick={() => resend('Phone')}>Resend OTP</a></p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"d-flex justify-content-between mt-4\">\n                        <button type=\"button\" onClick={() => { history.push('/register/contactPersonnel') }} className=\"reg-btn\">Previous</button>\n                        <button type=\"submit\" className=\"reg-btn\">Next</button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default StudentAuthenticationCmp;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { VerifyOtpAction, ResendOtpAction } from '../../../Store/Actions/CorporateActions/CorporateAction';\nimport StudentAuthenticationCmp from '../../../Components/Forms/StudentCmp/StudentAuthenticationCmp';\n\nconst StudentAuthentication = (props) => {\n\n    const [otp, setOtp] = useState('');\n    const [emailOtp, setEmailOtp] = useState('');\n    const [errors, setErrors] = useState({ otpErr: '', otp2Err: '' });\n\n    const dispatch = useDispatch();\n\n    // const apiStatus = useSelector(state => state.CorporateReducer.apiStatus);\n\n    // useEffect(() => {\n    //     if (apiStatus) {\n    //         props.history.push('/register/completed');\n    //     }\n    //     // return () => {\n    //     //     dispatch(ResetRdrAction());\n    //     // }\n    // }, [apiStatus])\n\n    const handlerChange = (event) => {\n        const { name, value } = event.target;\n        switch (name) {\n            case 'otp':\n                const num = /^[0-9\\b]+$/;\n                setOtp(value);\n                // setEmailOtp('');\n                if (num.test(value)) {\n                    // if (val.match(phoneno)) {\n                    if (value.length === 6) {\n                        setErrors(preState => ({\n                            ...preState,\n                            otpErr: ''\n                        }));\n                    } else {\n                        setErrors(preState => ({\n                            ...preState,\n                            otpErr: 'Invalid'\n                        }));\n                    }\n                } else {\n                    setErrors(preState => ({\n                        ...preState,\n                        otpErr: 'Invalid'\n                    }));\n                }\n                return;\n            case 'emailOtp':\n                const num2 = /^[0-9\\b]+$/;\n                // setOtp('');\n                setEmailOtp(value);\n                if (num2.test(value)) {\n                    // if (val.match(phoneno)) {\n                    if (value.length === 6) {\n                        setErrors(preState => ({\n                            ...preState,\n                            otp2Err: ''\n                        }));\n                    } else {\n                        setErrors(preState => ({\n                            ...preState,\n                            otp2Err: 'Invalid'\n                        }));\n                    }\n                } else {\n                    setErrors(preState => ({\n                        ...preState,\n                        otp2Err: 'Invalid'\n                    }));\n                }\n                return;\n\n            default:\n                break;\n        }\n    }\n\n\n    // const handleSubmit = (event) => {\n    //     event.preventDefault();\n    //     const { otpErr, otp2Err } = errors;\n    //     let data = JSON.parse(localStorage.getItem('regStatus'));\n    //     if (otp) {\n    //         if (!otpErr) {\n    //             const mobileModel = {\n    //                 stakeholder: data.stakeholder,\n    //                 platformUID: data.platformUID,\n    //                 otp: otp,\n    //                 phone: data.phoneNumber,\n    //             }\n    //             dispatch(VerifyOtpAction(mobileModel, 1, props.history));\n    //             // props.history.push('/register/CorporateSecondary');\n    //         } else {\n    //             toast.error(\"Please enter Mobile OTP\")\n    //         }\n    //     } else {\n    //         if (!otp2Err) {\n    //             const emailModel = {\n    //                 stakeholder: data.stakeholder,\n    //                 platformUID: data.platformUID,\n    //                 otp: emailOtp,\n    //                 email: data.email,\n    //             }\n    //             dispatch(VerifyOtpAction(emailModel, 2, props.history));\n    //         } else {\n    //             toast.error(\"Please enter Email OTP\")\n    //         }\n    //     }\n    // }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const { otpErr, otp2Err } = errors;\n        let data = JSON.parse(localStorage.getItem('regStatus'));\n        if (otp && emailOtp) {\n            if (!otpErr && !otp2Err) {\n                const mobileModel = {\n                    stakeholder: data?.stakeholder,\n                    platformUID: data?.platformUID,\n                    email: data?.email,\n                    phone: data?.phoneNumber,\n                    phoneOtp: otp,\n                    emailOtp: emailOtp,\n                }\n                dispatch(VerifyOtpAction(mobileModel, props.history));\n                // props.history.push('/register/CorporateSecondary');\n            } else {\n                toast.error(\"Please enter Mobile & Email OTP\")\n            }\n        }\n    }\n\n    const resend = (val) => {\n        let data = JSON.parse(localStorage.getItem('regStatus'));\n        const model = {\n            stakeholder: data.stakeholder,\n            platformUID: data.platformUID,\n            otpType: val,\n        }\n        dispatch(ResendOtpAction(model));\n    }\n\n    return (\n        <StudentAuthenticationCmp\n            history={props.history}\n            errors={errors}\n            emailOtp={emailOtp}\n            otp={otp}\n            resend={resend}\n            handlerChange={handlerChange}\n            handleSubmit={handleSubmit}\n        />\n    )\n}\n\nexport default StudentAuthentication;\n"],"sourceRoot":""}