{"version":3,"sources":["Store/Actions/CorporateActions/CorporateAction.js","Components/Forms/CorporateCmp/RegisterCmp/CorporatePaymentCmp.js","Pages/Forms/Corporate/Register/CorporatePayment.js"],"names":["ResetRdrAction","dispatch","type","actionTypes","payload","undefined","APIStatus","val","GetCountryCodeAction","Axios","get","then","res","resp","data","catch","err","JSON","stringify","toast","error","parse","message","SignupAction","model","history","URL","formData","FormData","key","append","post","localStorage","removeItem","setItem","success","push","response","errors","StudentSignupAction","VerifyOtpAction","MobileVerified","emailVerified","ResendOtpAction","GetCategoryListAction","SaveCoprorateData","step","CreatePaymentAction","token","getItem","header","headers","sessionStorage","orderID","ValidatePaymentAction","messages","forEach","referenceObject","CorporatePaymentCmp","paymentData","handlerChange","handleSubmit","cancelPayment","emailErr","nameErr","mobileErr","amtErr","className","onSubmit","name","onChange","placeholder","autoFocus","required","defaultValue","amount","readOnly","onClick","$","window","CorporatePayment","props","useHistory","useState","email","contact","setpaymentData","passwordErr","setErrors","total","gst","gstCalc","setGstCalc","paymentOrder","useSelector","state","CorporateReducer","useDispatch","tokensPurchase","pathname","useEffect","payType","tokensToAdd","script","document","createElement","src","async","body","appendChild","toFixed","id","role","data-toggle","href","aria-controls","aria-selected","aria-labelledby","event","target","value","preState","lnameErr","mailformat1","test","email2Err","length","parseInt","preventDefault","options","process","REACT_APP_REGISTER","order_id","description","image","handler","modal","backdrop","keyboard","prefill","notes","address","theme","color","hide_topbar","Razorpay","open","openPayModal","replace","style","fontSize","tabIndex","data-keyboard","data-backdrop","aria-hidden"],"mappings":"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","file":"static/js/22.005069ea.chunk.js","sourcesContent":["\nimport Axios from '../../../utils/axios';\nimport { toast } from 'react-toastify';\nimport * as actionTypes from './actionTypes';\n\n\n\n// RESET ALL REDUCERES\nexport const ResetRdrAction = () => {\n    return (dispatch) => {\n        dispatch({\n            type: actionTypes.RESET,\n            payload: undefined\n        })\n    }\n}\n\nexport const APISuccess = () => {\n    return (dispatch) => {\n        dispatch({\n            type: actionTypes.SUCCESS,\n            payload: true\n        })\n    }\n}\nexport const APIStatus = (val) => {\n    return (dispatch) => {\n        dispatch({ type: actionTypes.APISTATUS, payload: val });\n    }\n}\n\nexport const APIError = () => {\n    return (dispatch) => {\n        dispatch({\n            type: actionTypes.ERROR,\n            payload: true\n        })\n    }\n}\n\n\nexport const GetCountryCodeAction = () => {\n    return (dispatch) => {\n        const URL = \"http://restcountries.eu/rest/v2/all?fields=name;flag;callingCodes;\";\n        Axios.get(URL)\n            .then((res) => {\n                let resp = res.data;\n                dispatch({ type: actionTypes.COUNTRYCODES, payload: resp });\n            })\n            .catch((err) => {\n                const val = JSON.stringify(err);\n                toast.error(JSON.parse(val).message);\n            })\n    }\n}\n\n// REGISTER (CORPORATE & UNIVERSITY)\nexport const SignupAction = (model, history, type) => {\n    return (dispatch) => {\n        // const URL = \"/o/signUp/Corporate\";\n        let URL;\n        if (type === 'Corporate') {\n            URL = \"/o/signUp/Corporate\";\n        } else if (type === 'University') {\n            URL = \"/o/signUp/University\";\n        }\n        let formData = new FormData();\n        for (const key in model) {\n            formData.append(key, model[key]);\n        }\n        dispatch(APIStatus(true));\n        dispatch({ type: actionTypes.CORPORATE, payload: model });\n        Axios.post(URL, formData)\n            .then((res) => {\n                let resp = res.data;\n                localStorage.removeItem('imgpath');\n                localStorage.setItem('regStatus', JSON.stringify(resp));\n                localStorage.setItem('steps', 3);\n                dispatch({ type: actionTypes.STEPS, payload: 3 });\n                dispatch(APIStatus(false));\n                toast.success(resp.message);\n                history.push('/register/authentication');\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\n// REGISTER (STUDENT)\nexport const StudentSignupAction = (model, history, type) => {\n    return (dispatch) => {\n        const URL = \"/o/signUp/Student\";\n        let formData = new FormData();\n        for (const key in model) {\n            formData.append(key, model[key]);\n        }\n        dispatch(APIStatus(true));\n        dispatch({ type: actionTypes.CORPORATE, payload: model });\n        Axios.post(URL, formData)\n            .then((res) => {\n                let resp = res.data;\n                localStorage.removeItem('imgpath');\n                localStorage.setItem('regStatus', JSON.stringify(resp));\n                localStorage.setItem('steps', 3);\n                dispatch({ type: actionTypes.STEPS, payload: 3 });\n                dispatch(APIStatus(false));\n                toast.success(resp.message);\n                history.push('/register/studentAuthentication');\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\n// LOGIN\nexport const LoginUserAction = (model, history) => {\n    return (dispatch) => {\n        const URL = \"/o/login\";\n        let formData = new FormData();\n        formData.append('stakeholder', model.stakeholder);\n        formData.append('userID', model.userID);\n        formData.append('password', model.password);\n        dispatch(APIStatus(true));\n        Axios.post(URL, formData)\n            .then((res) => {\n                let resp = res.data;\n                localStorage.setItem('token', resp.token);\n                dispatch(APIStatus(false));\n                toast.success(\"Login successful\");\n                if (resp.redirectURL === '/dashboard') {\n                    history.push('/dashboard');\n                } else {\n                    history.push('/register/payment');\n                }\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\n// VERIFY OTP\nexport const VerifyOtpAction = (model, type, history) => {\n    return (dispatch) => {\n        // const URL = \"/verifyMobile\";\n        const URL = \"/o/verifyOTP\";\n        // if (type === 1) {\n        //     URL = \"/o/verifyMobile\"\n        // } else {\n        //     URL = \"/o/verifyEmail\"\n        // }\n        let formData = new FormData();\n        for (const key in model) {\n            formData.append(key, model[key]);\n        }\n        dispatch(APIStatus(true));\n        Axios.post(URL, formData)\n            .then((res) => {\n                let resp = res.data;\n                dispatch(APIStatus(false));\n                if (resp?.MobileVerified && resp?.emailVerified) {\n                    toast.success('OTP verification successful');\n                    history.push('/register/completed');\n                } else {\n                    toast.error('OTP verification failed');\n                }\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\n// RESEND OTP\nexport const ResendOtpAction = (model) => {\n    return (dispatch) => {\n        const URL = \"/o/resendOtp\";\n        let formData = new FormData();\n        for (const key in model) {\n            formData.append(key, model[key]);\n        }\n        dispatch(APIStatus(true));\n        Axios.post(URL, formData)\n            .then((res) => {\n                let resp = res.data;\n                toast.success(resp.message);\n                dispatch(APIStatus(false));\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\nexport const GetCategoryListAction = (type) => {\n    return (dispatch) => {\n        // const URL = \"/u/lut/?lutList=corporateType&lutList=corporateCategory&lutList=corporateIndustry\";\n        let URL;\n        if (type === 'Corporate') {\n            URL = \"/u/lut/?lutList=corporateType&lutList=corporateCategory&lutList=corporateIndustry\"\n        } else if (type === 'University') {\n            URL = \"/u/lut/?lutList=universityCategory\"\n        }\n        Axios.get(URL)\n            .then((res) => {\n                let resp = res.data;\n                dispatch({ type: actionTypes.CATEGOTYLIST, payload: resp });\n            })\n            .catch((err) => {\n                const val = JSON.stringify(err);\n                toast.error(JSON.parse(val).message);\n            })\n    }\n}\n\nexport const SaveCoprorateData = (data, step) => {\n    return (dispatch) => {\n        localStorage.setItem('steps', step);\n        dispatch({ type: actionTypes.CORPORATE, payload: data });\n        dispatch({ type: actionTypes.STEPS, payload: step });\n    }\n}\n\n\n// CREATE PAYMENT\nexport const CreatePaymentAction = (model) => {\n    return (dispatch) => {\n        const URL = \"/pg/createPayment\";\n        let formData = new FormData();\n        for (const key in model) {\n            formData.append(key, model[key]);\n        }\n        // formData.append('payType', val);\n        // formData.append('payType', 'REG_FEE');\n        dispatch(APIStatus(true));\n        const token = localStorage.getItem('token');\n        const header = {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                // 'Content-Type': 'application/json'\n            }\n        }\n        Axios.post(URL, formData, header)\n            .then((res) => {\n                let resp = res.data;\n                sessionStorage.setItem('orderID', resp.orderID);\n                dispatch({ type: actionTypes.PAYMENTORDER, payload: resp });\n                dispatch(APIStatus(false));\n                // toast.success(resp.message);\n                // history.push('/register/completed');\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\n// VALIDATE PAYMENT\nexport const ValidatePaymentAction = (model) => {\n    return (dispatch) => {\n        const URL = \"/pg/verifyPayment\";\n        let formData = new FormData();\n        formData.append('orderID', model);\n        const token = localStorage.getItem('token');\n        const header = {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                // 'Content-Type': 'application/json'\n            }\n        }\n        dispatch(APIStatus(true));\n        Axios.post(URL, formData, header)\n            .then((res) => {\n                let resp = res.data;\n                resp?.messages?.forEach(key => {\n                    toast.success(key);\n                });\n                dispatch(APIStatus(false));\n                dispatch({ type: actionTypes.REFERENCEOBJ, payload: JSON.parse(resp?.referenceObject) });\n                // history.push('/register/completed');\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}","import React from 'react';\n\nconst CorporatePaymentCmp = ({paymentData, errors, handlerChange, handleSubmit, cancelPayment }) => {\n    const { emailErr, nameErr, mobileErr, amtErr } = errors;\n    return (\n        <form className=\"login-form reg-form\" onSubmit={handleSubmit}>\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"login-grp\">\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            onChange={handlerChange}\n                            className={`login-inp${nameErr ? ' login-inp-error' : ''}`}\n                            placeholder=\"Name\"\n                            autoFocus\n                            required={true} />\n                        <label className=\"inp-caption\">Name</label>\n                        {nameErr ? <p className=\"inp-errors\">{nameErr}</p> : null}\n                    </div>\n                    <div className=\"login-grp\">\n                        <input\n                            type=\"tel\"\n                            name=\"contact\"\n                            onChange={handlerChange}\n                            className={`login-inp${mobileErr ? ' login-inp-error' : ''}`}\n                            placeholder=\"Phone Number\"\n                            required={true} />\n                        <label className=\"inp-caption\">Phone Number</label>\n                        {mobileErr ? <p className=\"inp-errors\">{mobileErr}</p> : null}\n                    </div>\n                    <div className=\"login-grp\">\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            onChange={handlerChange}\n                            className={`login-inp${emailErr ? ' login-inp-error' : ''}`}\n                            placeholder=\"Email\"\n                            required={true} />\n                        <label className=\"inp-caption\">Email</label>\n                        {emailErr ? <p className=\"inp-errors\">{emailErr}</p> : null}\n                    </div>\n                    <div className=\"login-grp\">\n                        <input\n                            type=\"number\"\n                            name=\"amount\"\n                            onChange={handlerChange}\n                            className={`login-inp${amtErr ? ' login-inp-error' : ''}`}\n                            defaultValue={paymentData.amount}\n                            placeholder=\"Amount\"\n                            readOnly\n                            required={true} />\n                        <label className=\"inp-caption\">Amount</label>\n\n                        {amtErr ? <p className=\"inp-errors\">{amtErr}</p> : null}\n                    </div>\n                    {/* <div className=\"login-grp\">\n                        <input type=\"number\" name=\"card\" className=\"login-inp card-inp\" placeholder=\"Credit Card Number\" autofocus required />\n                        <span className=\"inp-icon\"><i className=\"far fa-credit-card\" /></span>\n                    </div>\n                    <div className=\"login-grp\">\n                        <input type=\"text\" name=\"name\" className=\"login-inp\" placeholder=\"Name of the Card Holder\" required />\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-4 pr-1\">\n                            <div className=\"login-grp\">\n                                <input type=\"number\" name=\"addr\" className=\"login-inp\" placeholder=\"Expiry Month\" required />\n                            </div>\n                        </div>\n                        <div className=\"col-md-4 px-1\">\n                            <div className=\"login-grp\">\n                                <input type=\"number\" name=\"addr\" className=\"login-inp\" placeholder=\"Expiry Year\" required />\n                            </div>\n                        </div>\n                        <div className=\"col-md-4 pl-1\">\n                            <div className=\"login-grp\">\n                                <input type=\"number\" name=\"addr\" className=\"login-inp\" placeholder=\"CVV\" required />\n                            </div>\n                        </div>\n                    </div> */}\n                </div>\n            </div>\n            <div className=\"reg-payment-btns reg-payment-btns2\">\n                <button type=\"reset\" onClick={cancelPayment} className=\"reg-payment-btn\"><i className=\"fas fa-times-circle\" /> Cancel Payment</button>\n                <button type=\"submit\" className=\"reg-payment-btn\"><i className=\"fas fa-check-circle\" /> Make Payment</button>\n            </div>\n        </form>\n    )\n}\n\nexport default CorporatePaymentCmp;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport CorporatePaymentCmp from '../../../../Components/Forms/CorporateCmp/RegisterCmp/CorporatePaymentCmp';\nimport { CreatePaymentAction, ResetRdrAction, ValidatePaymentAction } from '../../../../Store/Actions/CorporateActions/CorporateAction';\nconst $ = window.$;\n\nconst CorporatePayment = (props) => {\n    let history = useHistory()\n    const initialState = {\n        name: '',\n        email: '',\n        contact: ''\n    }\n    const [paymentData, setpaymentData] = useState(initialState);\n    const [errors, setErrors] = useState({ emailErr: '', passwordErr: '', nameErr: '', mobileErr: '', amtErr: '' });\n    const [gstCalc, setGstCalc] = useState({ total: 0, gst: 0, amount: 0 });\n\n    const paymentOrder = useSelector(state => state.CorporateReducer.paymentOrder);\n    const referenceObject = useSelector(state => state.CorporateReducer.referenceObject);\n\n    const dispatch = useDispatch();\n    let tokensPurchase = localStorage.getItem('tokensPurchase');\n    let pathname = localStorage.getItem('pathname');\n\n    useEffect(() => {\n        let model;\n        if (tokensPurchase) {\n            model = {\n                payType: 'ADD_TKN',\n                tokensToAdd: tokensPurchase,\n                referenceObject: JSON.stringify(pathname)\n            }\n        } else {\n            model = {\n                payType: 'REG_FEE',\n            }\n        }\n        dispatch(CreatePaymentAction(model));\n        // $('#role').modal('show');\n        const script = document.createElement(\"script\");\n        script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\n        script.async = true;\n        document.body.appendChild(script);\n        return () => {\n            localStorage.removeItem('tokensPurchase');\n            localStorage.removeItem('pathname');\n            dispatch(ResetRdrAction())\n        }\n    }, []);\n\n    useEffect(() => {\n        const val = paymentOrder?.amount;\n        const total = val + (val * 0.18);\n        setpaymentData({\n            amount: val\n        })\n        setGstCalc({\n            amount: val,\n            gst: (val * 0.18).toFixed(2),\n            total: total.toFixed(2)\n        });\n    }, [paymentOrder])\n\n    const openPayModal = () => {\n        const options = {\n            key: process.env.REACT_APP_REGISTER,\n            order_id: paymentOrder?.orderID,\n            amount: gstCalc.total * 100, //  = INR 1\n            name: \"PGK\",\n            description: \"PGK TECHNOLOGIES PRIVATE LIMITED\",\n            image: \"https://cdn.razorpay.com/logos/7K3b6d18wHwKzL_medium.png\",\n            handler: function (response) {\n                dispatch(ValidatePaymentAction(paymentOrder.orderID))\n                // alert(response.razorpay_payment_id);\n                $('#paymentSuccess').modal({ backdrop: 'static', keyboard: false });\n                $('#paymentSuccess').modal('show');\n            },\n            prefill: {\n                name: paymentData.name,\n                contact: paymentData.contact,\n                email: paymentData.email\n            },\n            notes: {\n                address: \"\"\n            },\n            theme: {\n                color: \"blue\",\n                hide_topbar: false\n            }\n        };\n        var rzp1 = new window.Razorpay(options);\n        rzp1.open();\n    };\n\n\n    const handlerChange = (event) => {\n        const { name, value } = event.target;\n        setpaymentData(preState => ({\n            ...preState,\n            [name]: value\n        }));\n\n        switch (name) {\n            case 'name':\n                if (value) {\n                    setErrors(preState => ({\n                        ...preState,\n                        nameErr: ''\n                    }));\n                } else if (!value) {\n                    setErrors(preState => ({\n                        ...preState,\n                        lnameErr: 'Last name error'\n                    }));\n                }\n                return;\n            case 'email':\n                const mailformat1 = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n                if (value && mailformat1.test(value)) {\n                    setErrors(preState => ({\n                        ...preState,\n                        email2Err: ''\n                    }));\n                } else if (!value || !mailformat1.test(value)) {\n                    setErrors(preState => ({\n                        ...preState,\n                        email2Err: 'Email error'\n                    }));\n                }\n                return;\n            case 'contact':\n                const num = /^[+-]?[0-9\\b]+$/;\n                if (num.test(value)) {\n                    // if (val.match(phoneno)) {\n                    if (value.length >= 10) {\n                        setErrors(preState => ({\n                            ...preState,\n                            mobileErr: ''\n                        }));\n                    } else {\n                        setErrors(preState => ({\n                            ...preState,\n                            mobileErr: 'Invalid'\n                        }));\n                    }\n                } else {\n                    setErrors(preState => ({\n                        ...preState,\n                        mobileErr: 'Invalid'\n                    }));\n                }\n                return;\n            case 'amount':\n                const val = parseInt(value);\n                const total = val + (val * 0.18);\n                setGstCalc({\n                    amount: val,\n                    gst: (val * 0.18).toFixed(2),\n                    total: total.toFixed(2)\n                });\n                if (value.length >= 0) {\n                    setErrors(preState => ({\n                        ...preState,\n                        amtErr: ''\n                    }));\n                } else {\n                    setErrors(preState => ({\n                        ...preState,\n                        amtErr: 'Invalid'\n                    }));\n                }\n                return;\n\n            default:\n                break;\n        }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const { name, email, contact } = paymentData;\n        const { nameErr, mobileErr, emailErr, amtErr } = errors;\n        if (name && email && contact && !nameErr && !mobileErr && !amtErr) {\n            openPayModal();\n        } else {\n            toast.error(\"Please enter required input fields\");\n        }\n    }\n\n    const closeModal = () => {\n        $('#paymentSuccess').modal('hide');\n        // history.replace('/dashboard');\n        if (referenceObject) {\n            history.replace(referenceObject);\n        } else {\n            history.replace('/dashboard');\n        }\n    }\n\n    const cancelPayment = () => {\n        if (pathname) {\n            history.replace(pathname);            \n        } else {\n            history.replace('/dashboard');\n        }\n    }\n\n    return (\n        <>\n            <div className=\"reg-payment\">\n                <h2 className=\"reg-payment-title\">Choose the Payment mode</h2>\n                <div className=\"row\">\n                    <div className=\"col-md-7\">\n                        <ul className=\"nav nav-pills nav-justified\" id=\"pills-tab\" role=\"tablist\">\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link active\" id=\"Credit-tab\" data-toggle=\"pill\" href=\"#Credit\" role=\"tab\" aria-controls=\"Credit\" aria-selected=\"true\"><i className=\"far fa-credit-card\" /> Credit/Debit Card</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" id=\"Net-tab\" data-toggle=\"pill\" href=\"#Net\" role=\"tab\" aria-controls=\"Net\" aria-selected=\"false\"><i className=\"fas fa-university\" /> Net Banking</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" id=\"UPI-tab\" data-toggle=\"pill\" href=\"#UPI\" role=\"tab\" aria-controls=\"UPI\" aria-selected=\"false\">UPI/Wallets</a>\n                            </li>\n                        </ul>\n                        <div className=\"tab-content\" id=\"pills-tabContent\">\n                            <div className=\"tab-pane fade show active\" id=\"Credit\" role=\"tabpanel\" aria-labelledby=\"Credit-tab\">\n                                <CorporatePaymentCmp\n                                    paymentData={paymentData}\n                                    errors={errors}\n                                    handlerChange={handlerChange}\n                                    handleSubmit={handleSubmit}\n                                    cancelPayment={cancelPayment}\n                                />\n                            </div>\n                            {/* <div className=\"tab-pane fade\" id=\"Net\" role=\"tabpanel\" aria-labelledby=\"Net-tab\">\n                            coming soon...\n                        </div>\n                        <div className=\"tab-pane fade\" id=\"UPI\" role=\"tabpanel\" aria-labelledby=\"UPI-tab\">\n                            coming soon...\n                        </div> */}\n                        </div>\n                    </div>\n                    <div className=\"col-md-5\">\n                        <div className=\"payment-summary\">\n                            <h5 className=\"payment-summary-header\">Fee Summary</h5>\n                            <ul className=\"payment-data\">\n                                <li className=\"payment-data-li\">\n                                    <p className=\"payment-data-name\">Registration Fee</p>\n                                    <span>{gstCalc.amount}</span>\n                                </li>\n                                <li className=\"payment-data-li\">\n                                    <p className=\"payment-data-name\">GST (18%) <span>rounded</span></p>\n                                    <span>{gstCalc.gst}</span>\n                                </li>\n                                <li className=\"payment-data-li\">\n                                    <p className=\"payment-data-name\">Total</p>\n                                    <span><i className=\"fas fa-rupee-sign\" style={{ fontSize: '12px' }}></i>{gstCalc.total}</span>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"modal fade\" id=\"paymentSuccess\" tabIndex={-1} role=\"dialog\" data-keyboard=\"false\" data-backdrop=\"static\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                    <div className=\"modal-content modal-form\">\n                        <div className=\"modal-body\">\n                            <h4 className=\"modal-title mb-1 mt-0\">Payment is successful</h4>\n                            <form className=\"login-form mx-auto\">\n                                <div className=\"login-grp mb-2 mx-auto text-center text-success\">\n                                    <i className=\"fas fa-check-circle\" style={{ fontSize: '70px' }}></i>\n                                </div>\n                                <div className=\"text-center\">\n                                    <button type=\"button\" onClick={closeModal} className=\"login-btn mb-0\">Proceed</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default CorporatePayment;\n"],"sourceRoot":""}