{"version":3,"sources":["Pages/Dashboard/Publish/PublishProfile.js"],"names":["PublishProfile","history","useHistory","useState","profile","setProfile","showModal","setShowModal","attachment","undefined","attachmentName","setAttachment","CIN","corporateType","corporateCategory","corporateIndustry","dateOfJoining","corporateHeadQuarters","corporateLocalAddress","companyProfile","checkData","setCheckData","isTermsAndConditionsChecked","setIsTermsAndConditionsChecked","dispatch","useDispatch","onGetCorporateProfileRequest","response","profilePicture","useEffect","actionGetCorporateProfileSagaAction","callback","handleCheckData","name","value","prevCheckData","className","style","marginTop","fontWeight","textAlign","fontSize","marginBottom","class","profileData","check","disable","onChange","checked","type","id","required","htmlFor","onClick","goBack","updatedPublishProfile","corporateHQAddressLine1","corporateHQAddressLine2","corporateHQAddressCountry","corporateHQAddressState","corporateHQAddressCity","corporateHQAddressDistrict","corporateHQAddressZipCode","corporateHQAddressPhone","corporateHQAddressEmail","corporateLocalBranchAddressLine1","corporateLocalBranchAddressLine2","corporateLocalBranchAddressCountry","corporateLocalBranchAddressState","corporateLocalBranchAddressCity","corporateLocalBranchAddressDistrict","corporateLocalBranchAddressZipCode","corporateLocalBranchAddressPhone","corporateLocalBranchAddressEmail","actionPostPublishCorporateProfileSagaAction","apiPayloadRequest","disabled","onClose","show","iconNameClass","message"],"mappings":"yMAuOeA,UA1NQ,WACrB,IAAMC,EAAUC,cADW,EAEGC,qBAFH,mBAEpBC,EAFoB,KAEXC,EAFW,OAGOF,oBAAS,GAHhB,mBAGpBG,EAHoB,KAGTC,EAHS,OAISJ,mBAAS,CAC3CK,gBAAYC,EACZC,oBAAgBD,IANS,mBAIpBD,EAJoB,KAIRG,EAJQ,OASOR,mBAAS,CACzCS,KAAK,EACLC,eAAe,EACfC,mBAAmB,EACnBC,mBAAmB,EACnBC,eAAe,EACfC,uBAAuB,EACvBC,uBAAuB,EACvBC,gBAAgB,EAChBX,YAAY,IAlBa,mBASpBY,EAToB,KASTC,EATS,OAwBvBlB,oBAAS,GAxBc,mBAsBzBmB,EAtByB,KAuBzBC,EAvByB,KA0BrBC,EAAWC,cAEXC,EAA+B,SAACC,GACpChB,EAAc,CACZH,WAAU,OAAEmB,QAAF,IAAEA,OAAF,EAAEA,EAAUnB,WACtBE,eAAc,OAAEiB,QAAF,IAAEA,OAAF,EAAEA,EAAUjB,iBAG5BL,EAAW,2BACNsB,GADK,IAERC,oBAAgBnB,EAChBD,gBAAYC,MAYhBoB,qBAAU,WAPRL,EACEM,YAAoC,CAClCC,SAAUL,OAOb,IAEH,IAsFMM,EAAkB,SAACC,EAAMC,GAC7Bb,GAAa,SAACc,GAAD,mBAAC,eACTA,GADQ,kBAEVF,EAAOC,QAIZ,OACE,sBAAKE,UAAU,OAAOC,MAAO,CAAEC,UAAW,GAA1C,UACE,oBAAID,MAAO,CAACE,WAAY,MAAOC,UAAU,SAAUC,SAAU,OAAQC,aAAc,QAAnF,+BACA,oBAAIC,MAAM,6BAA6BN,MAAO,CAACI,SAAU,UAAzD,gEAGA,cAAC,IAAD,CACEG,YAAaxC,EACbgB,UAAWA,EACXY,gBAAiBA,EACjBa,OAAK,EACLC,SAAO,IAET,cAAC,IAAD,CACEF,YAAaxC,EACbgB,UAAWA,EACXY,gBAAiBA,EACjBa,OAAK,EACLC,SAAO,IAET,cAAC,IAAD,CACEF,YAAaxC,EACbI,WAAYA,EACZY,UAAWA,EACXY,gBAAiBA,EACjBa,OAAK,EACLC,SAAO,IAGT,qBAAKV,UAAU,QAAf,SACE,sBAAKA,UAAU,iCAAf,UACE,uBACEW,SAAU,WACRxB,GAAgCD,IAElC0B,QAAS1B,EACT2B,KAAK,WACLb,UAAU,uBACVc,GAAG,SACHC,UAAQ,IAEV,uBAAOf,UAAU,uBAAuBgB,QAAQ,SAAhD,yEAMJ,sBAAKhB,UAAU,oBAAf,UACE,wBAAQa,KAAK,SAASI,QA3DC,WAC3BpD,EAAQqD,UA0DiDlB,UAAU,WAA/D,oBAGA,wBACEa,KAAK,SACLI,QAlJe,WACrB,IAAIE,EAAwB,IAE5B,OAAGnC,QAAH,IAAGA,OAAH,EAAGA,EAAWR,OACZ2C,EAAqB,IAArB,OAA+BnD,QAA/B,IAA+BA,OAA/B,EAA+BA,EAASQ,MAG1C,OAAGQ,QAAH,IAAGA,OAAH,EAAGA,EAAWP,iBACZ0C,EAAqB,cAArB,OAAyCnD,QAAzC,IAAyCA,OAAzC,EAAyCA,EAASS,gBAGpD,OAAGO,QAAH,IAAGA,OAAH,EAAGA,EAAWN,qBACZyC,EAAqB,kBAArB,OAA6CnD,QAA7C,IAA6CA,OAA7C,EAA6CA,EAASU,oBAGxD,OAAGM,QAAH,IAAGA,OAAH,EAAGA,EAAWL,qBACZwC,EAAqB,kBAArB,OAA6CnD,QAA7C,IAA6CA,OAA7C,EAA6CA,EAASW,oBAGxD,OAAGK,QAAH,IAAGA,OAAH,EAAGA,EAAWJ,iBACZuC,EAAqB,cAArB,OAAyCnD,QAAzC,IAAyCA,OAAzC,EAAyCA,EAASY,gBAGpD,OAAGI,QAAH,IAAGA,OAAH,EAAGA,EAAWD,kBACZoC,EAAqB,eAArB,OAA0CnD,QAA1C,IAA0CA,OAA1C,EAA0CA,EAASe,iBAKrD,OAAGC,QAAH,IAAGA,OAAH,EAAGA,EAAWH,yBACZsC,EAAqB,wBAArB,OAAmDnD,QAAnD,IAAmDA,OAAnD,EAAmDA,EAASoD,wBAC5DD,EAAqB,wBAArB,OAAmDnD,QAAnD,IAAmDA,OAAnD,EAAmDA,EAASqD,wBAC5DF,EAAqB,0BAArB,OAAqDnD,QAArD,IAAqDA,OAArD,EAAqDA,EAASsD,0BAC9DH,EAAqB,wBAArB,OAAmDnD,QAAnD,IAAmDA,OAAnD,EAAmDA,EAASuD,wBAC5DJ,EAAqB,uBAArB,OAAkDnD,QAAlD,IAAkDA,OAAlD,EAAkDA,EAASwD,uBAC3DL,EAAqB,2BAArB,OAAsDnD,QAAtD,IAAsDA,OAAtD,EAAsDA,EAASyD,2BAC/DN,EAAqB,0BAArB,OAAqDnD,QAArD,IAAqDA,OAArD,EAAqDA,EAAS0D,0BAC9DP,EAAqB,wBAArB,OAAmDnD,QAAnD,IAAmDA,OAAnD,EAAmDA,EAAS2D,wBAC5DR,EAAqB,wBAArB,OAAmDnD,QAAnD,IAAmDA,OAAnD,EAAmDA,EAAS4D,0BAG9D,OAAG5C,QAAH,IAAGA,OAAH,EAAGA,EAAWF,yBACZqC,EAAqB,iCAArB,OAA4DnD,QAA5D,IAA4DA,OAA5D,EAA4DA,EAAS6D,iCACrEV,EAAqB,iCAArB,OAA4DnD,QAA5D,IAA4DA,OAA5D,EAA4DA,EAAS8D,iCACrEX,EAAqB,mCAArB,OAA8DnD,QAA9D,IAA8DA,OAA9D,EAA8DA,EAAS+D,mCACvEZ,EAAqB,iCAArB,OAA4DnD,QAA5D,IAA4DA,OAA5D,EAA4DA,EAASgE,iCACrEb,EAAqB,gCAArB,OAA2DnD,QAA3D,IAA2DA,OAA3D,EAA2DA,EAASiE,gCACpEd,EAAqB,oCAArB,OAA+DnD,QAA/D,IAA+DA,OAA/D,EAA+DA,EAASkE,oCACxEf,EAAqB,mCAArB,OAA8DnD,QAA9D,IAA8DA,OAA9D,EAA8DA,EAASmE,mCACvEhB,EAAqB,iCAArB,OAA4DnD,QAA5D,IAA4DA,OAA5D,EAA4DA,EAASoE,iCACrEjB,EAAqB,iCAArB,OAA4DnD,QAA5D,IAA4DA,OAA5D,EAA4DA,EAASqE,kCAGvEjD,EACEkD,YAA4C,CAC1CC,kBAAmBpB,EACnBxB,SAAU,SAACJ,GACTpB,GAAa,QA0FbqE,aAlFM,OAATxD,QAAS,IAATA,OAAA,EAAAA,EAAWR,OAAX,OACCQ,QADD,IACCA,OADD,EACCA,EAAWP,iBADZ,OAECO,QAFD,IAECA,OAFD,EAECA,EAAWN,qBAFZ,OAGCM,QAHD,IAGCA,OAHD,EAGCA,EAAWL,qBAHZ,OAICK,QAJD,IAICA,OAJD,EAICA,EAAWJ,iBAJZ,OAKCI,QALD,IAKCA,OALD,EAKCA,EAAWH,yBALZ,OAMCG,QAND,IAMCA,OAND,EAMCA,EAAWF,yBANZ,OAOCE,QAPD,IAOCA,OAPD,EAOCA,EAAWD,kBAPZ,OAQCC,QARD,IAQCA,OARD,EAQCA,EAAWZ,cACbc,GA0EIc,UAAU,MAJZ,wBASF,cAAC,IAAD,CACEyC,QAAS,WACPtE,GAAa,IAEfuE,KAAMxE,EACNyE,cAAe,cACfC,QAAS","file":"static/js/40.c9bc8937.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from 'react-router-dom';\nimport BasicForm from \"../Profile/ProfileForm/BasicForm\";\nimport AddressAndContactForm from \"../Profile/ProfileForm/AddressAndContactForm\";\nimport ProfileForm from \"../Profile/ProfileForm/ProfileForm\";\n\nimport {\n  actionGetCorporateProfileSagaAction,\n  actionPostPublishCorporateProfileSagaAction,\n} from \"../../../Store/Actions/SagaActions/CorporateProfileSagaActions\";\nimport CustomToastModal from \"../../../Components/CustomToastModal\";\n\nconst PublishProfile = () => {\n  const history = useHistory();\n  const [profile, setProfile] = useState();\n  const [showModal, setShowModal] = useState(false);\n  const [attachment, setAttachment] = useState({\n    attachment: undefined,\n    attachmentName: undefined\n  });\n\n  const [checkData, setCheckData] = useState({\n    CIN: false,\n    corporateType: false,\n    corporateCategory: false,\n    corporateIndustry: false,\n    dateOfJoining: false,\n    corporateHeadQuarters: false,\n    corporateLocalAddress: false,\n    companyProfile: false,\n    attachment: false,\n  });\n\n  const [\n    isTermsAndConditionsChecked,\n    setIsTermsAndConditionsChecked,\n  ] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const onGetCorporateProfileRequest = (response) => {\n    setAttachment({\n      attachment: response?.attachment,\n      attachmentName: response?.attachmentName\n    });\n\n    setProfile({\n      ...response,\n      profilePicture: undefined,\n      attachment: undefined,\n    });\n  };\n\n  const getProfile = () => {\n    dispatch(\n      actionGetCorporateProfileSagaAction({\n        callback: onGetCorporateProfileRequest,\n      })\n    );\n  };\n\n  useEffect(() => {\n    getProfile();\n  }, []);\n\n  const publishProfile = () => {\n    let updatedPublishProfile = {};\n\n    if(checkData?.CIN) {\n      updatedPublishProfile['CIN'] = profile?.CIN\n    }\n\n    if(checkData?.corporateType) {\n      updatedPublishProfile['corporateType'] = profile?.corporateType\n    }\n\n    if(checkData?.corporateCategory) {\n      updatedPublishProfile['corporateCategory'] = profile?.corporateCategory\n    }\n\n    if(checkData?.corporateIndustry) {\n      updatedPublishProfile['corporateIndustry'] = profile?.corporateIndustry\n    }\n\n    if(checkData?.dateOfJoining) {\n      updatedPublishProfile['dateOfJoining'] = profile?.dateOfJoining\n    }\n\n    if(checkData?.companyProfile) {\n      updatedPublishProfile['companyProfile'] = profile?.companyProfile\n    }\n\n    // TODO attachment ?\n\n    if(checkData?.corporateHeadQuarters) {\n      updatedPublishProfile['corporateHQAddressLine1'] = profile?.corporateHQAddressLine1;\n      updatedPublishProfile['corporateHQAddressLine2'] = profile?.corporateHQAddressLine2;\n      updatedPublishProfile['corporateHQAddressCountry'] = profile?.corporateHQAddressCountry;\n      updatedPublishProfile['corporateHQAddressState'] = profile?.corporateHQAddressState;\n      updatedPublishProfile['corporateHQAddressCity'] = profile?.corporateHQAddressCity;\n      updatedPublishProfile['corporateHQAddressDistrict'] = profile?.corporateHQAddressDistrict;\n      updatedPublishProfile['corporateHQAddressZipCode'] = profile?.corporateHQAddressZipCode;\n      updatedPublishProfile['corporateHQAddressPhone'] = profile?.corporateHQAddressPhone;\n      updatedPublishProfile['corporateHQAddressEmail'] = profile?.corporateHQAddressEmail;\n    }\n\n    if(checkData?.corporateLocalAddress) {\n      updatedPublishProfile['corporateLocalBranchAddressLine1'] = profile?.corporateLocalBranchAddressLine1;\n      updatedPublishProfile['corporateLocalBranchAddressLine2'] = profile?.corporateLocalBranchAddressLine2;\n      updatedPublishProfile['corporateLocalBranchAddressCountry'] = profile?.corporateLocalBranchAddressCountry;\n      updatedPublishProfile['corporateLocalBranchAddressState'] = profile?.corporateLocalBranchAddressState;\n      updatedPublishProfile['corporateLocalBranchAddressCity'] = profile?.corporateLocalBranchAddressCity;\n      updatedPublishProfile['corporateLocalBranchAddressDistrict'] = profile?.corporateLocalBranchAddressDistrict;\n      updatedPublishProfile['corporateLocalBranchAddressZipCode'] = profile?.corporateLocalBranchAddressZipCode;\n      updatedPublishProfile['corporateLocalBranchAddressPhone'] = profile?.corporateLocalBranchAddressPhone;\n      updatedPublishProfile['corporateLocalBranchAddressEmail'] = profile?.corporateLocalBranchAddressEmail;\n    }\n\n    dispatch(\n      actionPostPublishCorporateProfileSagaAction({\n        apiPayloadRequest: updatedPublishProfile,\n        callback: (response)=>{\n          setShowModal(true);\n        },\n      })\n    );\n  };\n\n  const isFormValid = () => {\n    if (\n      (checkData?.CIN ||\n        checkData?.corporateType ||\n        checkData?.corporateCategory ||\n        checkData?.corporateIndustry ||\n        checkData?.dateOfJoining ||\n        checkData?.corporateHeadQuarters ||\n        checkData?.corporateLocalAddress ||\n        checkData?.companyProfile ||\n        checkData?.attachment) &&\n      isTermsAndConditionsChecked\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const cancelPublishProfile = () => {\n    history.goBack();\n  };\n\n  const handleCheckData = (name, value) => {\n    setCheckData((prevCheckData) => ({\n      ...prevCheckData,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <div className=\"main\" style={{ marginTop: 0 }}>\n      <h3 style={{fontWeight: '500', textAlign:'center', fontSize: '1rem', marginBottom: '20px'}}>Corporate Profile</h3>\n      <h4 class=\"d-profile-name text-center\" style={{fontSize: '1.2rem'}}>\n        Select the profile information you want to publish\n      </h4>\n      <BasicForm\n        profileData={profile}\n        checkData={checkData}\n        handleCheckData={handleCheckData}\n        check\n        disable\n      />\n      <AddressAndContactForm\n        profileData={profile}\n        checkData={checkData}\n        handleCheckData={handleCheckData}\n        check\n        disable\n      />\n      <ProfileForm\n        profileData={profile}\n        attachment={attachment}\n        checkData={checkData}\n        handleCheckData={handleCheckData}\n        check\n        disable\n      />\n\n      <div className=\"d-grp\">\n        <div className=\"custom-control custom-checkbox\">\n          <input\n            onChange={() => {\n              setIsTermsAndConditionsChecked(!isTermsAndConditionsChecked);\n            }}\n            checked={isTermsAndConditionsChecked}\n            type=\"checkbox\"\n            className=\"custom-control-input\"\n            id=\"accept\"\n            required\n          />\n          <label className=\"custom-control-label\" htmlFor=\"accept\">\n            I hereby accept the Terms & Conditions of the Platform\n          </label>\n        </div>\n      </div>\n\n      <div className=\"w-100 text-center\">\n        <button type=\"button\" onClick={cancelPublishProfile} className=\"btn mr-4\">\n          Cancel\n        </button>\n        <button\n          type=\"button\"\n          onClick={publishProfile}\n          disabled={!isFormValid()}\n          className=\"btn\"\n        >\n          Publish\n        </button>\n      </div>\n      <CustomToastModal\n        onClose={() => {\n          setShowModal(false);\n        }}\n        show={showModal}\n        iconNameClass={\"fa-building\"}\n        message={\"Your profile (selected information) has been published successfully\"}\n      />\n    </div>\n  );\n};\n\nexport default PublishProfile;\n"],"sourceRoot":""}