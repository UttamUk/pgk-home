{"version":3,"sources":["Store/Actions/CorporateActions/CorporateAction.js","Components/Forms/StudentCmp/StudentSecondaryCmp.js","Pages/Forms/Student/StudentSecondary.js"],"names":["ResetRdrAction","dispatch","type","actionTypes","payload","undefined","APIStatus","val","GetCountryCodeAction","Axios","get","then","res","resp","data","catch","err","JSON","stringify","toast","error","parse","message","SignupAction","model","history","URL","formData","FormData","key","append","post","localStorage","removeItem","setItem","success","push","response","errors","StudentSignupAction","VerifyOtpAction","MobileVerified","emailVerified","ResendOtpAction","GetCategoryListAction","SaveCoprorateData","step","CreatePaymentAction","token","getItem","header","headers","sessionStorage","orderID","ValidatePaymentAction","messages","forEach","referenceObject","StudentSecondaryCmp","path","attachment","studentSecondary","handleChangeImg","handlerChange","handleSubmit","passwordErr","repeatPasswordErr","addrErr","imgPath","onSubmit","className","name","onChange","value","gender","required","disabled","title","placeholder","defaultValue","aadharNumber","studentProfile","rows","accept","id","htmlFor","src","alt","password","onClick","StudentSecondary","props","initialState","dateOfBirth","useState","setStudentSecondary","repeatPassword","setRepeatPassword","setErrors","setPath","storeData","useSelector","state","CorporateReducer","corporatePrimaryState","categoryList","selectedName","useDispatch","useEffect","Object","keys","map","keyName","prevState","event","a","preventDefault","finalData","assign","target","files","preState","length","i","reader","FileReader","onload","ev","result","split","bind","readAsDataURL"],"mappings":"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","file":"static/js/27.b26d9f6d.chunk.js","sourcesContent":["\nimport Axios from '../../../utils/axios';\nimport { toast } from 'react-toastify';\nimport * as actionTypes from './actionTypes';\n\n\n\n// RESET ALL REDUCERES\nexport const ResetRdrAction = () => {\n    return (dispatch) => {\n        dispatch({\n            type: actionTypes.RESET,\n            payload: undefined\n        })\n    }\n}\n\nexport const APISuccess = () => {\n    return (dispatch) => {\n        dispatch({\n            type: actionTypes.SUCCESS,\n            payload: true\n        })\n    }\n}\nexport const APIStatus = (val) => {\n    return (dispatch) => {\n        dispatch({ type: actionTypes.APISTATUS, payload: val });\n    }\n}\n\nexport const APIError = () => {\n    return (dispatch) => {\n        dispatch({\n            type: actionTypes.ERROR,\n            payload: true\n        })\n    }\n}\n\n\nexport const GetCountryCodeAction = () => {\n    return (dispatch) => {\n        const URL = \"http://restcountries.eu/rest/v2/all?fields=name;flag;callingCodes;\";\n        Axios.get(URL)\n            .then((res) => {\n                let resp = res.data;\n                dispatch({ type: actionTypes.COUNTRYCODES, payload: resp });\n            })\n            .catch((err) => {\n                const val = JSON.stringify(err);\n                toast.error(JSON.parse(val).message);\n            })\n    }\n}\n\n// REGISTER (CORPORATE & UNIVERSITY)\nexport const SignupAction = (model, history, type) => {\n    return (dispatch) => {\n        // const URL = \"/o/signUp/Corporate\";\n        let URL;\n        if (type === 'Corporate') {\n            URL = \"/o/signUp/Corporate\";\n        } else if (type === 'University') {\n            URL = \"/o/signUp/University\";\n        }\n        let formData = new FormData();\n        for (const key in model) {\n            formData.append(key, model[key]);\n        }\n        dispatch(APIStatus(true));\n        dispatch({ type: actionTypes.CORPORATE, payload: model });\n        Axios.post(URL, formData)\n            .then((res) => {\n                let resp = res.data;\n                localStorage.removeItem('imgpath');\n                localStorage.setItem('regStatus', JSON.stringify(resp));\n                localStorage.setItem('steps', 3);\n                dispatch({ type: actionTypes.STEPS, payload: 3 });\n                dispatch(APIStatus(false));\n                toast.success(resp.message);\n                history.push('/register/authentication');\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\n// REGISTER (STUDENT)\nexport const StudentSignupAction = (model, history, type) => {\n    return (dispatch) => {\n        const URL = \"/o/signUp/Student\";\n        let formData = new FormData();\n        for (const key in model) {\n            formData.append(key, model[key]);\n        }\n        dispatch(APIStatus(true));\n        dispatch({ type: actionTypes.CORPORATE, payload: model });\n        Axios.post(URL, formData)\n            .then((res) => {\n                let resp = res.data;\n                localStorage.removeItem('imgpath');\n                localStorage.setItem('regStatus', JSON.stringify(resp));\n                localStorage.setItem('steps', 3);\n                dispatch({ type: actionTypes.STEPS, payload: 3 });\n                dispatch(APIStatus(false));\n                toast.success(resp.message);\n                history.push('/register/studentAuthentication');\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\n// LOGIN\nexport const LoginUserAction = (model, history) => {\n    return (dispatch) => {\n        const URL = \"/o/login\";\n        let formData = new FormData();\n        formData.append('stakeholder', model.stakeholder);\n        formData.append('userID', model.userID);\n        formData.append('password', model.password);\n        dispatch(APIStatus(true));\n        Axios.post(URL, formData)\n            .then((res) => {\n                let resp = res.data;\n                localStorage.setItem('token', resp.token);\n                dispatch(APIStatus(false));\n                toast.success(\"Login successful\");\n                if (resp.redirectURL === '/dashboard') {\n                    history.push('/dashboard');\n                } else {\n                    history.push('/register/payment');\n                }\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\n// VERIFY OTP\nexport const VerifyOtpAction = (model, type, history) => {\n    return (dispatch) => {\n        // const URL = \"/verifyMobile\";\n        const URL = \"/o/verifyOTP\";\n        // if (type === 1) {\n        //     URL = \"/o/verifyMobile\"\n        // } else {\n        //     URL = \"/o/verifyEmail\"\n        // }\n        let formData = new FormData();\n        for (const key in model) {\n            formData.append(key, model[key]);\n        }\n        dispatch(APIStatus(true));\n        Axios.post(URL, formData)\n            .then((res) => {\n                let resp = res.data;\n                dispatch(APIStatus(false));\n                if (resp?.MobileVerified && resp?.emailVerified) {\n                    toast.success('OTP verification successful');\n                    history.push('/register/completed');\n                } else {\n                    toast.error('OTP verification failed');\n                }\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\n// RESEND OTP\nexport const ResendOtpAction = (model) => {\n    return (dispatch) => {\n        const URL = \"/o/resendOtp\";\n        let formData = new FormData();\n        for (const key in model) {\n            formData.append(key, model[key]);\n        }\n        dispatch(APIStatus(true));\n        Axios.post(URL, formData)\n            .then((res) => {\n                let resp = res.data;\n                toast.success(resp.message);\n                dispatch(APIStatus(false));\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\nexport const GetCategoryListAction = (type) => {\n    return (dispatch) => {\n        // const URL = \"/u/lut/?lutList=corporateType&lutList=corporateCategory&lutList=corporateIndustry\";\n        let URL;\n        if (type === 'Corporate') {\n            URL = \"/u/lut/?lutList=corporateType&lutList=corporateCategory&lutList=corporateIndustry\"\n        } else if (type === 'University') {\n            URL = \"/u/lut/?lutList=universityCategory\"\n        }\n        Axios.get(URL)\n            .then((res) => {\n                let resp = res.data;\n                dispatch({ type: actionTypes.CATEGOTYLIST, payload: resp });\n            })\n            .catch((err) => {\n                const val = JSON.stringify(err);\n                toast.error(JSON.parse(val).message);\n            })\n    }\n}\n\nexport const SaveCoprorateData = (data, step) => {\n    return (dispatch) => {\n        localStorage.setItem('steps', step);\n        dispatch({ type: actionTypes.CORPORATE, payload: data });\n        dispatch({ type: actionTypes.STEPS, payload: step });\n    }\n}\n\n\n// CREATE PAYMENT\nexport const CreatePaymentAction = (model) => {\n    return (dispatch) => {\n        const URL = \"/pg/createPayment\";\n        let formData = new FormData();\n        for (const key in model) {\n            formData.append(key, model[key]);\n        }\n        // formData.append('payType', val);\n        // formData.append('payType', 'REG_FEE');\n        dispatch(APIStatus(true));\n        const token = localStorage.getItem('token');\n        const header = {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                // 'Content-Type': 'application/json'\n            }\n        }\n        Axios.post(URL, formData, header)\n            .then((res) => {\n                let resp = res.data;\n                sessionStorage.setItem('orderID', resp.orderID);\n                dispatch({ type: actionTypes.PAYMENTORDER, payload: resp });\n                dispatch(APIStatus(false));\n                // toast.success(resp.message);\n                // history.push('/register/completed');\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\n// VALIDATE PAYMENT\nexport const ValidatePaymentAction = (model) => {\n    return (dispatch) => {\n        const URL = \"/pg/verifyPayment\";\n        let formData = new FormData();\n        formData.append('orderID', model);\n        const token = localStorage.getItem('token');\n        const header = {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                // 'Content-Type': 'application/json'\n            }\n        }\n        dispatch(APIStatus(true));\n        Axios.post(URL, formData, header)\n            .then((res) => {\n                let resp = res.data;\n                resp?.messages?.forEach(key => {\n                    toast.success(key);\n                });\n                dispatch(APIStatus(false));\n                dispatch({ type: actionTypes.REFERENCEOBJ, payload: JSON.parse(resp?.referenceObject) });\n                // history.push('/register/completed');\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}","import React from 'react';\n\nconst StudentSecondaryCmp = ({ history, errors, attachment, path, studentSecondary, handleChangeImg, handlerChange, handleSubmit }) => {\n    // const { corporateCategory, corporateIndustry, corporateTypes, universityCategory } = categoryList;\n    const { passwordErr, repeatPasswordErr, addrErr } = errors;\n    const imgPath = \"data:image/png;base64,\" + path;\n\n    return (\n        <form onSubmit={handleSubmit} className=\"login-form reg-form\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-10\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6 pr-1\">\n                            <div className=\"login-grp\">\n                                <select\n                                    name=\"gender\"\n                                    onChange={handlerChange}\n                                    value={studentSecondary.gender ? studentSecondary.gender : 'DEFAULT'}\n                                    className=\"login-inp\"\n                                    required={false}>\n                                    <option value={'DEFAULT'} disabled>Gender</option>\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Female\">Female</option>\n                                    <option value=\"Other\">Other</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"col-md-6 pl-1\">\n                            <div className=\"login-grp\">\n                                <input\n                                    type=\"date\"\n                                    name=\"dateOfBirth\"\n                                    onChange={handlerChange}\n                                    className=\"login-inp\"\n                                    title=\"date Of Birth\"\n                                    placeholder=\"dateOfBirth\"\n                                    required={true} />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"login-grp\">\n                        <input\n                            type=\"number\"\n                            name=\"aadharNumber\"\n                            onChange={handlerChange}\n                            defaultValue={studentSecondary.aadharNumber}\n                            className={`login-inp${addrErr ? ' login-inp-error' : ''}`}\n                            placeholder=\"Aadhar Number\"\n                            required={false} />\n                        {addrErr ? <p className=\"inp-errors\">{addrErr}</p> : null}\n                    </div>\n                    <div className=\"login-grp\">\n                        <textarea\n                            name=\"studentProfile\"\n                            onChange={handlerChange}\n                            defaultValue={studentSecondary.studentProfile}\n                            rows={6}\n                            className=\"login-inp login-txtarea\"\n                            placeholder=\"Company Profile (in Brief)\"\n                            required={false}\n                        ></textarea>\n                    </div>\n                    <div className=\"reg-attach\">\n                        {studentSecondary.attachment ? <span><i className=\"fas fa-check-circle\"></i></span> : (null)}\n                        <input\n                            type=\"file\"\n                            name=\"attachment\"\n                            onChange={handleChangeImg}\n                            accept=\"image/*\"\n                            className=\"reg-inp\"\n                            id=\"attachment\"\n                            required={false} />\n                        <label htmlFor=\"attachment\" className=\"reg-label\">Attach</label>\n                    </div>\n                    {imgPath\n                        ? <div className=\"text-center\">\n                            <img src={imgPath} alt=\"please select image\" className=\"img-thumbnail mb-3 w-50\" />\n                        </div>\n                        : (null)\n                    }\n                    <div className=\"reg-header\"><i className=\"fas fa-unlock-alt\" />Password</div>\n                    <div className=\"row\">\n                        <div className=\"col-md-6 pr-1\">\n                            <div className=\"login-grp\">\n                                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    onChange={handlerChange}\n                                    defaultValue={studentSecondary.password}\n                                    className={`login-inp${passwordErr ? ' login-inp-error' : ''}`}\n                                    placeholder=\"Choose your login password (Min 8 digits)\"\n                                    required={true} />\n                                {passwordErr ? <p className=\"inp-errors\">{passwordErr}</p> : null}\n                            </div>\n                        </div>\n                        <div className=\"col-md-6 pl-1\">\n                            <div className=\"login-grp\">\n                                <input\n                                    type=\"password\"\n                                    name=\"repeatPassword\"\n                                    onChange={handlerChange}\n                                    className={`login-inp${repeatPasswordErr ? ' login-inp-error' : ''}`}\n                                    placeholder=\"Repeat the password\"\n                                    required={true} />\n                                {repeatPasswordErr ? <p className=\"inp-errors\">{repeatPasswordErr}</p> : null}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"d-flex justify-content-between mt-4\">\n                        <button type=\"button\" className=\"reg-btn\" onClick={() => { history.push('/register/studentRegister') }}>Previous</button>\n                        <button type=\"submit\" className=\"reg-btn\">Next</button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default StudentSecondaryCmp;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { StudentSignupAction, SaveCoprorateData } from '../../../Store/Actions/CorporateActions/CorporateAction';\nimport StudentSecondaryCmp from '../../../Components/Forms/StudentCmp/StudentSecondaryCmp';\n\nconst StudentSecondary = (props) => {\n    const initialState = {\n        gender: '',\n        dateOfBirth: '',\n        aadharNumber: '',\n        studentProfile: '',\n        attachment: '',\n        password: '',\n    };\n    const [studentSecondary, setStudentSecondary] = useState(initialState);\n    const [repeatPassword, setRepeatPassword] = useState('');\n    const [errors, setErrors] = useState({ passwordErr: '', repeatPasswordErr: '', addrErr: '' });\n    const [path, setPath] = useState('');\n\n    const storeData = useSelector(state => state.CorporateReducer.corporatePrimaryState);\n    const categoryList = useSelector(state => state.CorporateReducer.categoryList);\n\n    const selectedName = localStorage.getItem('type');\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (storeData) {\n            Object.keys(initialState).map(keyName => {\n                for (const key in storeData) {\n                    if (keyName === key) {\n                        setStudentSecondary(prevState => ({\n                            ...prevState,\n                            [key]: storeData[key]\n                        }))\n                    }\n                }\n            })\n        }\n    }, []);\n\n    const handleChangeImg = (event) => {\n        event.preventDefault();\n        if (event.target.files) {\n            setStudentSecondary(preState => ({\n                ...preState,\n                attachment: event.target.files[0]\n            }))\n            // if (event.target.files[0].type === \"application/pdf\")\n            const val = event.target.files.length;\n            for (let i = 0; i < val; i++) {\n                let reader = new FileReader();\n                reader.onload = function (ev) {\n                    setPath(ev.target.result.split(',')[1]);\n                    // localStorage.setItem('imgpath', ev.target.result.split(',')[1]);\n                    // setPath(preState => ({\n                    //     ...preState,\n                    //     path: ev.target.result.split(',')[1]\n                    // }))\n                }.bind(this);\n                reader.readAsDataURL(event.target.files[i]);\n            }\n        }\n    }\n\n\n    const handlerChange = (event) => {\n        const { name, value } = event.target;\n        if (name === \"repeatPassword\") {\n            setRepeatPassword(value);\n        } else {\n            setStudentSecondary(preState => ({\n                ...preState,\n                [name]: value\n            }));\n        }\n\n        switch (name) {\n            case 'password':\n                if (value && value.length >= 8) {\n                    setErrors(preState => ({\n                        ...preState,\n                        passwordErr: ''\n                    }));\n                } else {\n                    setErrors(preState => ({\n                        ...preState,\n                        passwordErr: 'Password error'\n                    }));\n                }\n                return;\n            case 'repeatPassword':\n                if (value === studentSecondary.password) {\n                    setErrors(preState => ({\n                        ...preState,\n                        repeatPasswordErr: ''\n                    }));\n                } else {\n                    setErrors(preState => ({\n                        ...preState,\n                        repeatPasswordErr: 'Password does not match'\n                    }));\n                }\n                return;\n\n            // case 'companyProfile':\n            //     if (value) {\n            //         setErrors(preState => ({\n            //             ...preState,\n            //             profileErr: ''\n            //         }));\n            //     } else if (!value) {\n            //         setErrors(preState => ({\n            //             ...preState,\n            //             profileErr: 'profile error'\n            //         }));\n            //     }\n            //     return;\n\n            default:\n                break;\n        }\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const { passwordErr, repeatPasswordErr } = errors;\n        const { password } = studentSecondary;\n        if (password && !repeatPasswordErr && !passwordErr && (password === repeatPassword)) {\n            const finalData = Object.assign(storeData, studentSecondary);\n            await dispatch(SaveCoprorateData(finalData, 2));\n            await dispatch(StudentSignupAction(finalData, props.history, selectedName));\n            // props.history.push('/register/studentAuthentication');\n\n        } else {\n            toast.error(\"Please enter required input fields\")\n        }\n    }\n\n    return (\n        <StudentSecondaryCmp\n            history={props.history}\n            errors={errors}\n            selectedName={selectedName}\n            path={path}\n            studentSecondary={studentSecondary}\n            attachment={studentSecondary.attachment}\n            categoryList={categoryList}\n            handleChangeImg={handleChangeImg}\n            handlerChange={handlerChange}\n            handleSubmit={handleSubmit}\n        />\n    )\n}\n\nexport default StudentSecondary;\n"],"sourceRoot":""}