{"version":3,"sources":["utils/utils.js","Pages/Dashboard/Support/Support.js","Store/Actions/SagaActions/SupportSagaAction.js"],"names":["ucwords","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","isEmailValid","value","test","initialData","stakeholderId","contactPerson","contactEmail","contactPhone","queryOrIssue","Support","useState","formData","setFormData","showModal","setShowModal","dispatch","useDispatch","getProfile","actionGetCorporateProfileSagaAction","callback","response","stakeholderID","useEffect","handleChange","event","target","name","prevData","onSubmit","console","log","handleSubmit","payload","errors","trim","push","length","forEach","error","toast","apiPayloadRequest","type","ACTION_POST_CORPORATE_SUPPORT_REQUEST","className","style","marginTop","onReset","readOnly","placeholder","onChange","min","rows","onClick","minHeight","backgroundColor","color"],"mappings":"6FAAA,oEAAO,IAAMA,EAAU,SAACC,GACpB,OAAW,MAAPA,EACO,GAGJA,EAAIC,QAAQ,UAAU,SAASC,GAClC,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,OAAO,GAAGC,kBAI9CC,EAAe,SAACC,GAGzB,OAAOA,GAFY,uEAEQC,KAAKD,K,wHCD9BE,EAAc,CAClBC,cAAc,GACdC,cAAc,GACdC,aAAa,GACbC,aAAa,GACbC,aAAa,IA8IAC,UA5IC,WAAO,IAAD,EACYC,mBAAS,eAAIP,IADzB,mBACbQ,EADa,KACHC,EADG,OAEcF,oBAAS,GAFvB,mBAEbG,EAFa,KAEFC,EAFE,KAGdC,EAAWC,cAEXC,EAAa,WACjBF,EACEG,YAAoC,CAClCC,SAAU,SAACC,GACTR,EAAY,2BACPT,GADM,IAETC,cAAa,OAAEgB,QAAF,IAAEA,OAAF,EAAEA,EAAUC,sBAOnCC,qBAAU,WACRL,MACC,IAEH,IAAMM,EAAe,SAACC,GAAW,IAAD,EACNA,EAAMC,OAAtBC,EADsB,EACtBA,KAAMzB,EADgB,EAChBA,MACdW,GAAY,SAACe,GAAD,mBAAC,eACRA,GADO,kBAETD,EAAOzB,QAIN2B,EAAW,SAACR,GAChBS,QAAQC,IAAI,YAAaV,GAEzBN,GAAa,IAGTiB,EAAe,WACnB,ICnDkCC,EDmD5BC,EAAS,GACoB,KAAhCtB,EAASN,cAAc6B,QACxBD,EAAOE,KAAK,uBAGoB,KAA/BxB,EAASL,aAAa4B,QAAgBlC,YAAaW,EAASL,eAC7D2B,EAAOE,KAAK,kBAGoB,KAA/BxB,EAASJ,aAAa2B,QAAevB,EAASJ,aAAa6B,OAAO,KACnEH,EAAOE,KAAK,0BAGoB,KAA/BxB,EAASH,aAAa0B,QACvBD,EAAOE,KAAK,wBAGXF,EAAOG,OACRH,EAAOI,SAAQ,SAACC,GACdC,IAAMD,MAAMA,MAGdvB,GCzEgCiB,ED0ER,CACpBQ,kBAAmB7B,EACnBQ,SAAUS,GC3ET,CACHa,KAAMC,IACNV,QAASA,MDgFf,OACE,mCACE,sBAAKW,UAAU,OAAOC,MAAO,CAACC,UAAU,IAAxC,UACE,oBAAIF,UAAU,aAAd,sBAEC9B,GAAc,qBAAK8B,UAAU,6BAAf,SACb,uBAAMf,SAAUG,EAAce,QAAS7B,EAAvC,UACE,mBAAG0B,UAAU,oBAAb,4GAIA,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,QAAf,UACE,uBAAOF,KAAK,OAAOf,KAAK,gBAAgBiB,UAAU,QAAQ1C,MAAOU,EAASP,cAAgB2C,UAAQ,IAClG,uBAAOJ,UAAU,cAAjB,iCAGJ,qBAAKA,UAAU,SAAf,SACE,qBAAKA,UAAU,QAAf,SACE,uBAAOF,KAAK,OAAOf,KAAK,gBAAgBiB,UAAU,QAAQK,YAAY,6BACpEC,SAAU1B,EAActB,MAAOU,EAASN,oBAG9C,qBAAKsC,UAAU,UACf,qBAAKA,UAAU,SAAf,SACE,qBAAKA,UAAU,QAAf,SACE,uBAAOF,KAAK,OAAOf,KAAK,eAAeiB,UAAU,QAAQK,YAAY,WAAWC,SAAU1B,EAActB,MAAOU,EAASL,mBAG5H,qBAAKqC,UAAU,SAAf,SACE,qBAAKA,UAAU,QAAf,SACE,uBAAOF,KAAK,SAASS,IAAK,EAAGxB,KAAK,eAAeiB,UAAU,QAAQK,YAAY,eAAeC,SAAU1B,EAActB,MAAOU,EAASJ,mBAG1I,qBAAKoC,UAAU,UACf,qBAAKA,UAAU,SAAf,SACE,qBAAKA,UAAU,QAAf,SACE,0BAAUjB,KAAK,eAAeyB,KAAK,IAAIR,UAAU,mBAC/CK,YAAY,4BAA4BC,SAAU1B,EAActB,MAAOU,EAASH,sBAKxF,qBAAKmC,UAAU,yBAAf,SACE,wBAAQF,KAAK,SAASW,QAASrB,EAAcY,UAAU,MAAvD,yBAML9B,GAAa,qBAAK8B,UAAU,6BAAf,SACV,sBAAKA,UAAU,+DAA+DC,MAAO,CAACS,UAAW,KAAjG,UACI,qBAAKV,UAAU,sBAAsBC,MAAO,CAAEU,gBAAiB,WAA/D,SACI,mBAAGX,UAAU,8BAEjB,oBAAGA,UAAU,oBAAoBC,MAAO,CAACW,MAAM,SAA/C,qDAEI,uBAFJ","file":"static/js/19.f2ba0546.chunk.js","sourcesContent":["export const ucwords = (str) => {\n    if (str == null) { // test for null or undefined\n        return \"\";\n    }\n\n    return str.replace(/\\w\\S*/g, function(txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n}\n\nexport const isEmailValid = (value) => {\n    const mailformat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n    return value && mailformat.test(value);\n}","import React, { useState, useEffect } from 'react'\nimport {useDispatch} from 'react-redux';\nimport {\n  PostSupportSagaAction\n} from \"../../../Store/Actions/SagaActions/SupportSagaAction\";\nimport {\n  actionGetCorporateProfileSagaAction,\n} from \"../../../Store/Actions/SagaActions/CorporateProfileSagaActions\";\nimport { toast } from \"react-toastify\";\n\nimport {isEmailValid} from '../../../utils/utils';\n\nconst initialData = {\n  stakeholderId:\"\",\n  contactPerson:\"\",\n  contactEmail:\"\",\n  contactPhone:\"\",\n  queryOrIssue:\"\"\n}\nconst Support = () => {\n  const [formData, setFormData] = useState({...initialData});\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const getProfile = () => {\n    dispatch(\n      actionGetCorporateProfileSagaAction({\n        callback: (response)=> {\n          setFormData({\n            ...initialData,\n            stakeholderId: response?.stakeholderID\n          })\n        },\n      })\n    );\n  };\n\n  useEffect(() => {\n    getProfile();\n  }, []);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const onSubmit = (response) => {\n    console.log('response ', response);\n\n    setShowModal(true);\n  }\n\n  const handleSubmit = () => {\n    const errors = [];\n    if(formData.contactPerson.trim()==='') {\n      errors.push('Please enter name..');\n    }\n\n    if(formData.contactEmail.trim()==='' || !isEmailValid(formData.contactEmail)) {\n      errors.push('Invalid Email');\n    }\n\n    if(formData.contactPhone.trim()==='' || formData.contactPhone.length<10) {\n      errors.push('Invalid Contact Number');\n    }\n\n    if(formData.queryOrIssue.trim()==='') {\n      errors.push('Please enter query..');\n    }\n\n    if(errors.length) {\n      errors.forEach((error)=>{\n        toast.error(error);\n      })\n    } else {\n      dispatch(\n        PostSupportSagaAction({\n          apiPayloadRequest: formData,\n          callback: onSubmit,\n        })\n      );\n    }\n  };\n\n\n  return ( \n    <>\n      <div className=\"main\" style={{marginTop:30}}>\n        <h3 className=\"main-title\">Support</h3>\n       \n       {!showModal &&  <div className=\"gbl-profile-set other-info\">\n          <form onSubmit={handleSubmit} onReset={getProfile}>\n            <p className=\"support-formtitle\">\n              Kindly write to us for any issue/query and we will try to contact you back at soonest\n              possible\n                </p>\n            <div className=\"row\">\n              <div className=\"col-md\">\n                <div className=\"d-grp\">\n                  <input type=\"text\" name=\"stakeholderId\" className=\"d-inp\" value={formData.stakeholderId}  readOnly/>\n                  <label className=\"inp-caption\">{`Stakeholder ID`}</label>\n                </div>\n              </div>\n              <div className=\"col-md\">\n                <div className=\"d-grp\">\n                  <input type=\"text\" name=\"contactPerson\" className=\"d-inp\" placeholder=\"Name of the Contact Person\"\n                    onChange={handleChange} value={formData.contactPerson} />\n                </div>\n              </div>\n              <div className=\"w-100\"></div>\n              <div className=\"col-md\">\n                <div className=\"d-grp\">\n                  <input type=\"text\" name=\"contactEmail\" className=\"d-inp\" placeholder=\"Email ID\" onChange={handleChange} value={formData.contactEmail} />\n                </div>\n              </div>\n              <div className=\"col-md\">\n                <div className=\"d-grp\">\n                  <input type=\"number\" min={0} name=\"contactPhone\" className=\"d-inp\" placeholder=\"Phone Number\" onChange={handleChange} value={formData.contactPhone} />\n                </div>\n              </div>\n              <div className=\"w-100\"></div>\n              <div className=\"col-md\">\n                <div className=\"d-grp\">\n                  <textarea name=\"queryOrIssue\" rows=\"6\" className=\"d-inp d-textarea\"\n                    placeholder=\"Your issue/query in brief\" onChange={handleChange} value={formData.queryOrIssue}></textarea>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"w-100 text-center mt-4\">\n              <button type=\"button\" onClick={handleSubmit} className=\"btn\">Send</button>\n            </div>\n          </form>\n        </div>}\n\n\n        {showModal && <div className=\"gbl-profile-set other-info\">\n            <div className=\"d-flex align-items-center justify-content-center flex-column\" style={{minHeight: 400}}>\n                <div className=\"modal-icon btn-blue\" style={{ backgroundColor: \"#004FD0\" }}>\n                    <i className=\"fas fa-check text-white\"></i>\n                </div>\n                <p className=\"support-formtitle\" style={{color:'black'}}>\n                    Your message has been sent successfully.\n                    <br />\n                    We will try to contact you back at soonest possible\n                </p>\n            </div>\n        </div>}\n         \n\n      </div>\n\n    </>\n  )\n}\n\nexport default Support\n","import {\n    ACTION_POST_CORPORATE_SUPPORT_REQUEST\n} from \"./SagaActionTypes\";\n\n\nexport const PostSupportSagaAction = (payload) => {\n    return {\n        type: ACTION_POST_CORPORATE_SUPPORT_REQUEST,\n        payload: payload\n    }\n}\n"],"sourceRoot":""}