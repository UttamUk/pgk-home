{"version":3,"sources":["Components/CustomModal.js","Portals/PortalModal.js","Store/Actions/SagaActions/NotificationsSagaAction.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Components/Dashboard/NotificationsCmp/NotificationsCmp.js","Pages/Dashboard/Notifications/Notifications.js"],"names":["$","window","CustomModal","props","useEffect","show","modal","remove","className","data-backdrop","data-keyboard","id","tabIndex","role","style","modalStyles","children","PortalModal","element","document","getElementById","createPortal","GetNotificationsSagaAction","payload","type","ACTION_GET_CORPORATE_NOTIFICATIONS_REQUEST","actionGetCorporateSingleNotificationRequest","ACTION_GET_CORPORATE_SINGLE_NOTIFICATION_REQUEST","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","NotificationsCmp","useState","activeNotificationIndex","setActiveNotificationIndex","notificationHeader","item","notificationType","senderName","notificationContent","scope","onChange","selectAll","checked","isSelectAll","htmlFor","data-toggle","data-target","colSpan","flex","name","required","value","notificationsList","length","map","i","onClick","isChecked","handleChange","notificationID","backgroundColor","fontWeight","fontSize","senderUserRole","moment","dateofNotification","fromNow","undefined","minHeight","padding","border","margin","JSON","parse","content","universityDetails","universityName","location","yearOfEstablishment","senderID","accredations","notification","getTypeOfRequest","format","Notifications","setNotificationsList","setIsSelectAll","dispatch","useDispatch","callback","getNotificationsResp","data","event","target","list","forEach"],"mappings":"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","file":"static/js/11.27ad98ed.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport PortalModal from \"../Portals/PortalModal\";\nconst $ = window.$;\n\nconst CustomModal = (props) => {\n  useEffect(() => {\n    if (props?.show) {\n      $(\"#customModal\").modal(\"show\");\n    } else {\n      $(\"#customModal\").modal(\"hide\");\n    }\n\n    $(\".modal-backdrop\").remove();\n  });\n\n  return (\n    props?.show && (\n      <PortalModal>\n        <div className=\"modal portalModalChildren\" data-backdrop=\"static\" data-keyboard=\"false\" id={\"customModal\"} tabIndex={-1}>\n          <div\n            className={`modal-dialog modal-lg modal-dialog-centered`}\n            role=\"document\"\n            style={{...props?.modalStyles}}\n          >\n            <div className=\"modal-content\">{props?.children}</div>\n          </div>\n        </div>\n      </PortalModal>\n    )\n  );\n};\n\nexport default CustomModal;\n","import { createPortal } from \"react-dom\";\n\nconst PortalModal = (props) => {\n\n    const element = document.getElementById('portalModal');\n    return createPortal(props.children, element);\n};\n\nexport default PortalModal;","import {\n    ACTION_GET_CORPORATE_NOTIFICATIONS_REQUEST,\n    ACTION_GET_CORPORATE_SINGLE_NOTIFICATION_REQUEST,\n    ACTION_POST_CORPORATE_RESPOND_TO_CAMPUS_DRIVE_REQUEST\n} from \"./SagaActionTypes\";\n\n\nexport const GetNotificationsSagaAction = (payload) => {\n    return {\n        type: ACTION_GET_CORPORATE_NOTIFICATIONS_REQUEST,\n        payload: payload\n    }\n}\n\nexport const actionGetCorporateSingleNotificationRequest = (payload) => {\n    return {\n        type: ACTION_GET_CORPORATE_SINGLE_NOTIFICATION_REQUEST,\n        payload: payload\n    }\n}\n\nexport const actionSagaPostCorporateRespondToCampusDriveRequest = (payload) => {\n    return {\n        type: ACTION_POST_CORPORATE_RESPOND_TO_CAMPUS_DRIVE_REQUEST,\n        payload: payload\n    }\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useState} from \"react\";\nimport {useDispatch} from 'react-redux';\nimport moment from 'moment';\nimport CustomModal from '../../CustomModal';\n\nconst NotificationsCmp = (props) => {\n  const [activeNotificationIndex, setActiveNotificationIndex] = useState();\n\n  const acceptNotification = () => {\n    // if(activeNotificationIndex!==undefined) {\n    //   props?.notificationsList\n    // }\n  }\n\n  const notificationHeader = (item) => {\n    switch (item?.notificationType) {\n      case \"HiringCriteria\":\n        return \"HiringCriteria\";\n      case \"OtherInformation\":\n        return \"OtherInformation\";\n      case \"CorporateProfile\":\n        return \"CorporateProfile\";\n      case \"JobPublish\":\n        return \"JobPublish\";\n      case \"UniversityProfile\":\n        return \"UniversityProfile\";\n      case \"UniversityOtherInformation\":\n        return item?.senderName + \" University\";\n      case \"RequestVerification\":\n        return \"RequestVerification\";\n      case \"ProcessVerification\":\n        return \"ProcessVerification\";\n      case \"CampusHiring Request\":\n        return item?.senderName + \" University\";\n      case \"CampusHiring Response\":\n        return item?.senderName + \" University\";\n      default:\n        break;\n    }\n  };\n\n  const notificationContent = (item) => {\n    switch (item?.notificationType) {\n        case \"HiringCriteria\":\n          return \"HiringCriteria\";\n        case \"OtherInformation\":\n          return \"OtherInformation\";\n        case \"CorporateProfile\":\n          return \"CorporateProfile\";\n        case \"JobPublish\":\n          return \"JobPublish\";\n        case \"UniversityProfile\":\n          return \"UniversityProfile\";\n        case \"UniversityOtherInformation\":\n          return item?.senderName + \" University\";\n        case \"RequestVerification\":\n          return \"RequestVerification\";\n        case \"ProcessVerification\":\n          return \"ProcessVerification\";\n        case \"CampusHiring Request\":\n          return \"has requested for Campus hiring\";\n        case \"CampusHiring Response\":\n          return \"\";\n        default:\n          break;\n      }\n  };\n\n  const getTypeOfRequest = (notification) => {\n    switch (notification?.notificationType) {\n      case \"CampusHiring Request\":\n        return \"Campus Hiring From University\"  \n      default:\n        break;\n    }\n  }\n\n  return (\n    <>\n      <div className=\"main mt-0 pr-0 pt-0\">\n        <div className=\"row m-0 p-0\">\n          <div className=\"col-md-7 p-0 pt-4 m-0\">\n            <h4 className=\"notification-title\">Notifications</h4>\n            <div className=\"table-responsive mb-4\">\n              <table className=\"table table-data mb-0\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">\n                      <div className=\"custom-control custom-checkbox\">\n                        <input\n                          type=\"checkbox\"\n                          onChange={props.selectAll}\n                          checked={props?.isSelectAll ? true : false}\n                          className=\"custom-control-input\"\n                          id=\"selectALl\"\n                        />\n                        <label\n                          className=\"custom-control-label mt-1\"\n                          htmlFor=\"selectALl\"\n                        ></label>\n                      </div>\n                    </th>\n                    <th scope=\"col\">\n                      <button className=\"btn3 btn-lightgreen\">\n                        Mark as Read\n                      </button>\n                      <button\n                        className=\"btn3 btn-lightgreen\"\n                        data-toggle=\"modal\"\n                        data-target=\"#accept\"\n                      >\n                        Delete\n                      </button>\n                    </th>\n                    <th colSpan={2} scope=\"col\">\n                      <div className=\"d-flex justify-content-around\">\n                        <div className=\"d-grp mb-0 mr-1\" style={{ flex: 1 }}>\n                          <select name className=\"d-inp\" required>\n                            <option value>Filter All</option>\n                            <option value>Program</option>\n                            <option value>Program</option>\n                          </select>\n                        </div>\n                        <div className=\"d-grp mb-0\">\n                          <select name className=\"d-inp\" required>\n                            <option value>Sort by Relevance</option>\n                            <option value>Program</option>\n                            <option value>Program</option>\n                          </select>\n                        </div>\n                      </div>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {props?.notificationsList &&\n                  props?.notificationsList?.length > 0 ? (\n                    props?.notificationsList?.map((item, i) => {\n                      if (item.notificationType!=='OtherInformation' && item.notificationType!=='CampusHiring Response'  && item.notificationType!=='UniversityOtherInformation') {\n                        return(\n                          <tr key={i} onClick={()=>{\n                            setActiveNotificationIndex(i);\n                          }}>\n                            <td>\n                              <div className=\"custom-control custom-checkbox\">\n                                <input\n                                  type=\"checkbox\"\n                                  name={item.isChecked}\n                                  onChange={props.handleChange}\n                                  className=\"custom-control-input\"\n                                  checked={item?.isChecked ? true : false}\n                                  value={item?.notificationID}\n                                  id={item?.notificationID}\n                                />\n                                <label\n                                  className=\"custom-control-label mt-1\"\n                                  htmlFor={item?.notificationID}\n                                ></label>\n                              </div>\n                            </td>\n                            <td>\n                              <div className=\"basic-info\">\n                                <div className=\"basic-img\">\n                                  <p className=\"basic-name\">\n                                    <i className=\"fas fa-building\" />\n                                  </p>\n                                </div>\n                                <div className=\"basic-content\">\n                                  <h5 className=\"basic-title\">\n                                    {notificationHeader(item)}\n                                  </h5>\n                                  <p className=\"basic-subtitle\">\n                                    {notificationContent(item)}\n                                  </p>\n                                </div>\n                              </div>\n                            </td>\n                            <td>\n                              <button className=\"btn action\" style={{backgroundColor:'#5473E8', fontWeight:'700', fontSize: '.600rem'}}>\n                                {item?.senderUserRole}\n                              </button>\n                              <button className=\"btn action\" style={{backgroundColor:'#FE4394', fontWeight:'700', fontSize: '.600rem'}}>\n                                Action required\n                              </button>\n                            </td>\n                            <td className=\"time\" style={{fontSize:'.600rem'}}>\n                              {moment(item?.dateofNotification).fromNow()}\n                            </td>\n                          </tr>\n                        )\n                      }\n                    }\n                    )\n                  ) : (\n                    <td colSpan=\"3\">No data</td>\n                  )}\n                  {/* <tr>\n                                        <td>\n                                            <div className=\"custom-control custom-checkbox\">\n                                                <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                                                <label className=\"custom-control-label mt-1\" htmlFor=\"customCheck1\">\n                                                </label>\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <div className=\"basic-info\">\n                                                <div className=\"basic-img\">\n                                                    <p className=\"basic-name\"><i className=\"fas fa-building\" /></p>\n                                                </div>\n                                                <div className=\"basic-content\">\n                                                    <h5 className=\"basic-title\">Osmania University</h5>\n                                                    <p className=\"basic-subtitle\">has requested for Campus Hiring</p>\n                                                </div>\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <button className=\"btn action tb-btn-green\">University</button>\n                                            <button className=\"btn action tb-btn-grey\">Action required</button>\n                                        </td>\n                                        <td className=\"time\">2 hrs ago</td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <div className=\"custom-control custom-checkbox\">\n                                                <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                                                <label className=\"custom-control-label mt-1\" htmlFor=\"customCheck1\">\n                                                </label>\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <div className=\"basic-info\">\n                                                <div className=\"basic-img\">\n                                                    <p className=\"basic-name\"><i className=\"fas fa-building\" /></p>\n                                                </div>\n                                                <div className=\"basic-content\">\n                                                    <h5 className=\"basic-title\">Osmania University</h5>\n                                                    <p className=\"basic-subtitle\">has requested for Campus Hiring</p>\n                                                </div>\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <button className=\"btn action\">University</button>\n                                            <button className=\"btn action tb-btn-pink\">Action required</button>\n                                        </td>\n                                        <td className=\"time\">2 hrs ago</td>\n                                    </tr> */}\n                </tbody>\n              </table>\n            </div>\n          </div>\n          {activeNotificationIndex!==undefined && <div className=\"col-md-5 p-0 m-0\">\n            <div className=\"info\" style={{minHeight: '100vh', padding: 15}}>\n              <div style={{border: '1px solid #cacaca', padding: '20px 40px', margin:0}}>\n              <h6 className=\"info-title\">\n                Notification from <br /> {JSON.parse(props?.notificationsList[activeNotificationIndex]?.content)?.universityDetails?.universityName} University\n              </h6>\n              <hr />\n              <ul className=\"info-data\" >\n                <li>\n                  <span>University Name</span>\n                  <span>{JSON.parse(props?.notificationsList[activeNotificationIndex]?.content)?.universityDetails?.universityName}</span>\n                </li>\n                <li>\n                  <span>Location</span>\n                  <span>{JSON.parse(props?.notificationsList[activeNotificationIndex]?.content)?.universityDetails?.location}</span>\n                </li>\n                <li>\n                  <span>Year of Establishment</span>\n                  <span>{JSON.parse(props?.notificationsList[activeNotificationIndex]?.content)?.universityDetails?.yearOfEstablishment}</span>\n                </li>\n                <li>\n                  <span>University ID</span>\n                  <span>{props?.notificationsList[activeNotificationIndex]?.senderID}</span>\n                </li>\n                <li>\n                  <span>Accredition</span>\n                  <span>{JSON.parse(props?.notificationsList[activeNotificationIndex]?.content)?.universityDetails?.accredations}</span>\n                </li>\n                <li>\n                  <span>Type of Request</span>\n                  <span>{getTypeOfRequest(props?.notificationsList[activeNotificationIndex])}</span>\n                </li>\n                <li>\n                  <span>Request made on</span>\n                  <span>{moment(props?.notificationsList[activeNotificationIndex]?.dateofNotification).format('DD - MMM - YYYY')}</span>\n                </li>\n              </ul>\n              <div className=\"d-flex justify-content-center info-space\">\n                <button className=\"btn3\">View more Info</button>\n                <button\n                  className=\"btn3 btn-lightgreen\"\n                  onClick={acceptNotification}\n                >\n                  Accept\n                </button>\n                <button className=\"btn3 btn-yellow\">Reject</button>\n              </div>\n              </div>\n            </div>\n          </div>}\n        </div>\n      </div>\n\n                  {/* <div className=\"info\">\n              <h6 className=\"info-title\">\n                Notification from <br /> Osmania University\n              </h6>\n              <hr />\n              <ul className=\"info-data\">\n                <li>\n                  <span>University Name</span>\n                  <span>OSMANIA UNIVERSITY</span>\n                </li>\n                <li>\n                  <span>Location</span>\n                  <span>Hyderabad</span>\n                </li>\n                <li>\n                  <span>Year of Establishment</span>\n                  <span>1917</span>\n                </li>\n                <li>\n                  <span>University ID</span>\n                  <span>XXXXXXXXX</span>\n                </li>\n                <li>\n                  <span>Accredition</span>\n                  <span>NAAC 'A'</span>\n                </li>\n                <li>\n                  <span>Type of Request</span>\n                  <span>Campus Hiring from University</span>\n                </li>\n                <li>\n                  <span>Request made on</span>\n                  <span>10 - Feb - 2021</span>\n                </li>\n              </ul>\n              <div className=\"d-flex justify-content-around info-space\">\n                <button className=\"btn3\">View more Info</button>\n                <button className=\"btn3 btn-lightgreen2 txt-lightgreen btn-prevent\">\n                  Accepted on 10 - Feb - 2021\n                </button>\n              </div>\n            </div>\n            <div className=\"info\">\n              <h6 className=\"info-title\">\n                Notification from <br /> Osmania University\n              </h6>\n              <hr />\n              <ul className=\"info-data\">\n                <li>\n                  <span>University Name</span>\n                  <span>OSMANIA UNIVERSITY</span>\n                </li>\n                <li>\n                  <span>Location</span>\n                  <span>Hyderabad</span>\n                </li>\n                <li>\n                  <span>Year of Establishment</span>\n                  <span>1917</span>\n                </li>\n                <li>\n                  <span>University ID</span>\n                  <span>XXXXXXXXX</span>\n                </li>\n                <li>\n                  <span>Accredition</span>\n                  <span>NAAC 'A'</span>\n                </li>\n                <li>\n                  <span>Type of Request</span>\n                  <span>Campus Hiring from University</span>\n                </li>\n                <li>\n                  <span>Request made on</span>\n                  <span>10 - Feb - 2021</span>\n                </li>\n              </ul>\n              <div className=\"d-flex justify-content-around info-space\">\n                <button className=\"btn3\">View more Info</button>\n                <button className=\"btn3 btn-yellow2 txt-yellow btn-prevent\">\n                  Rejected on 10 - Feb - 2021\n                </button>\n              </div>\n              <div className=\"d-grp\">\n                <label className=\"rejected-reason\">\n                  Reason/remarks for rejection\n                </label>\n                <input\n                  type=\"text\"\n                  name\n                  className=\"d-inp\"\n                  defaultValue=\"University is not matching to Hiring Criteria specified for Job-1\"\n                />\n              </div>\n            </div>\n            <div className=\"info\">\n              <h6 className=\"info-title\">\n                Notification from <br /> Vasundhara(Student)\n              </h6>\n              <hr />\n              <ul className=\"info-data\">\n                <li>\n                  <span>Student Name</span>\n                  <span>Raju</span>\n                </li>\n                <li>\n                  <span>Program</span>\n                  <span>B.Tech</span>\n                </li>\n                <li>\n                  <span>Course</span>\n                  <span>ECE</span>\n                </li>\n                <li>\n                  <span>University</span>\n                  <span>University</span>\n                </li>\n                <li>\n                  <span>Aggregate CGPA</span>\n                  <span>8.1</span>\n                </li>\n                <li>\n                  <span>Applied for </span>\n                  <span>Campus</span>\n                </li>\n                <li>\n                  <span>Applied on</span>\n                  <span>10 - Feb - 2021</span>\n                </li>\n              </ul>\n            </div> */}\n    </>\n  );\n};\n\n\n\nexport default NotificationsCmp;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport NotificationsCmp from '../../../Components/Dashboard/NotificationsCmp/NotificationsCmp'\nimport { GetNotificationsSagaAction } from '../../../Store/Actions/SagaActions/NotificationsSagaAction';\n\nconst Notifications = () => {\n\n    const [notificationsList, setNotificationsList] = useState([]);\n    const [isSelectAll, setIsSelectAll] = useState(false);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(GetNotificationsSagaAction({ callback: getNotificationsResp }));\n    }, []);\n\n    const getNotificationsResp = (data) => {\n        const list = data.map(item => {\n            return {\n                ...item,\n                isChecked: false\n            }\n        })\n        setNotificationsList(data);\n    }\n\n    const handleChange = (event) => {\n        const { checked, value } = event.target;\n        let list = [...notificationsList];\n        list.forEach(item => {\n            if (item.notificationID === value)\n                item.isChecked = checked\n        });\n        setIsSelectAll(false);\n        setNotificationsList(list);\n    }\n\n    const selectAll = (event) => {\n        const { checked } = event.target;\n        let list = [...notificationsList];\n        list.forEach(item => item.isChecked = checked);\n        setIsSelectAll(checked);\n        setNotificationsList(list);\n    }\n\n    return (\n        <>\n            <NotificationsCmp\n                notificationsList={notificationsList}\n                isSelectAll={isSelectAll}\n                handleChange={handleChange}\n                selectAll={selectAll}\n            />\n        </>\n    )\n}\n\nexport default Notifications;\n"],"sourceRoot":""}