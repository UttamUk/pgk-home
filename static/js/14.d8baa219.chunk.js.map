{"version":3,"sources":["Components/CustomModal.js","Portals/PortalModal.js","Components/CustomToastModal.js","Pages/Dashboard/Publish/Components/OtherInformationList.js","Pages/Dashboard/Publish/OtherInformation/PublishOtherInformation.js","Store/Actions/SagaActions/OtherInformationSagaActions.js"],"names":["$","window","CustomModal","props","useEffect","show","modal","remove","className","data-backdrop","data-keyboard","id","tabIndex","role","style","modalStyles","children","PortalModal","element","document","getElementById","createPortal","CustomToastModal","type","onClick","onClose","aria-hidden","iconNameClass","message","OtherInformationList","useState","showModal","setShowModal","otherInformation","setOtherInformation","otherInformationList","length","map","item","info","publishID","textOverflow","fontWeight","title","creationDate","moment","format","cursor","fontSize","name","value","disabled","required","rows","placeholder","information","attachment","trim","attachmentName","href","target","textDecoration","outline","width","PublishProfile","undefined","otherInfo","setOtherInfo","setOtherInformationList","dispatch","useDispatch","onOtherInformationListResponse","response","getPublishedOtherInformation","payload","callback","ACTION_GET_PUBLISH_OTHER_INFORMATION_LIST_REQUEST","onChangeHandler","event","preventDefault","files","prevOtherInfo","resetPublishOtherInformation","onPublish","onAddOtherInformation","apiPayloadRequest","ACTION_POST_PUBLISH_OTHER_INFORMATION_REQUEST","marginTop","onChange","accept","htmlFor","ACTION_POST_ADD_OTHER_INFORMATION_REQUEST"],"mappings":"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","file":"static/js/14.d8baa219.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport PortalModal from \"../Portals/PortalModal\";\nconst $ = window.$;\n\nconst CustomModal = (props) => {\n  useEffect(() => {\n    if (props?.show) {\n      $(\"#customModal\").modal(\"show\");\n    } else {\n      $(\"#customModal\").modal(\"hide\");\n    }\n\n    $(\".modal-backdrop\").remove();\n  });\n\n  return (\n    props?.show && (\n      <PortalModal>\n        <div className=\"modal portalModalChildren\" data-backdrop=\"static\" data-keyboard=\"false\" id={\"customModal\"} tabIndex={-1}>\n          <div\n            className={`modal-dialog modal-lg modal-dialog-centered`}\n            role=\"document\"\n            style={{...props?.modalStyles}}\n          >\n            <div className=\"modal-content\">{props?.children}</div>\n          </div>\n        </div>\n      </PortalModal>\n    )\n  );\n};\n\nexport default CustomModal;\n","import { createPortal } from \"react-dom\";\n\nconst PortalModal = (props) => {\n\n    const element = document.getElementById('portalModal');\n    return createPortal(props.children, element);\n};\n\nexport default PortalModal;","import React, { useEffect } from \"react\";\nimport PortalModal from \"../Portals/PortalModal\";\nconst $ = window.$;\n\nconst CustomToastModal = (props) => {\n  useEffect(() => {\n    if (props?.show) {\n      $(\"#customToastModal\").modal(\"show\");\n    } else {\n      $(\"#customToastModal\").modal(\"hide\");\n    }\n\n    $(\".modal-backdrop\").remove();\n\n  });\n\n  return (\n    props?.show && <PortalModal>\n      <div className=\"modal portalModalChildren\" data-backdrop=\"static\" data-keyboard=\"false\" id={\"customToastModal\"} tabIndex={-1}>\n        <div\n          className={`modal-dialog modal-dialog-centered modal-sm`}\n          role=\"document\"\n        >\n          <div className=\"modal-content\">\n            <div className=\"hiring-modal\">\n              <button type=\"button\" className=\"close\" onClick={props?.onClose}>\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n              <div className=\"modal-success\">\n                {props?.iconNameClass && (\n                  <div className=\"modal-icon\">\n                    <i\n                      className={`fas ${props?.iconNameClass} txt-lightgreen`}\n                    ></i>\n                  </div>\n                )}\n                <p className=\"modal-success-txt\">{props?.message}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </PortalModal>\n  );\n};\n\nexport default CustomToastModal;\n","import React, { useEffect, useState } from \"react\";\nimport CustomModal from \"../../../../Components/CustomModal\";\nimport moment from \"moment\";\n\nconst OtherInformationList = (props) => {\n  const [showModal, setShowModal] = useState(false);\n  const [otherInformation, setOtherInformation] = useState();\n\n  const OtherInformationListItem = (info) => {\n    return (\n      <div\n        className=\"d-flex flex-row justify-content-between align-items-center jobs-list-item w-full\"\n        key={info?.id}\n      >\n        <div className=\"item d-flex flex-row justify-content-between align-items-center w-full\">\n          <div className=\"job-icon job-blue-icon d-flex justify-content-center align-items-center\">\n            <i className=\"fas fa-cube\"></i>\n          </div>\n          <p className=\"job-label\">{info?.publishID ? info?.publishID : \"-\"}</p>\n          <p className=\"job-published-date\" style={{textOverflow:'ellipsis', fontWeight: 'bold'}}>{info?.title}</p>\n          <p className=\"job-published-date\">\n            {info?.creationDate &&\n              `Published on ${moment(info.creationDate).format(\"DD-MM-YYYY\")}`}\n          </p>\n        </div>\n        <div className=\"vertical-divider\"></div>\n        <div className=\"job-list-item-details-container d-flex flex-row justify-content-center align-items-center\">\n          <div\n            className=\"job-details-btn d-flex flex-row justify-content-around align-items-center\"\n            style={{ cursor: \"pointer\" }}\n            onClick={() => {\n              setOtherInformation(info);\n              setShowModal(true);\n            }}\n          >\n            <p>Details</p>\n            <i className=\"fas fa-chevron-right\"></i>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const getOtherInformationList = () => {\n    return props?.otherInformationList.map((item) => {\n      return OtherInformationListItem(item);\n    });\n  };\n\n  return props?.otherInformationList?.length ? (\n    <>\n      {getOtherInformationList()}\n      <CustomModal\n        show={showModal}\n      >\n        <div className=\"hiring-modal\">\n          <div className=\"modal-header hiring-modal-header\">\n            <h5 className=\"modal-title\" style={{fontSize: '1rem'}} id=\"exampleModalLabel\">\n              Published Information Details\n            </h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              style={{fontSize: '1rem'}}\n              onClick={()=>{\n                setShowModal(false);\n              }}\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <form className=\"hiring-modal-form\">\n            <div className=\"row\">\n              <div className=\"col-md\">\n                <div className=\"modal-grp\">\n                  <input\n                    type=\"text\"\n                    name=\"\"\n                    className=\"modal-inp\"\n                    value={otherInformation?.publishID ? otherInformation?.publishID : ''}\n                    disabled\n                    required\n                  />\n                  <label className=\"inp-caption\">Publish ID</label>\n                </div>\n              </div>\n              <div className=\"col-md\">\n                <div className=\"modal-grp\">\n                  <input\n                    type=\"text\"\n                    name=\"\"\n                    className=\"modal-inp\"\n                    value={otherInformation?.creationDate ? `Published on ${moment(otherInformation?.creationDate).format(\"DD-MM-YYYY\")}`: ''}\n                    disabled\n                    required\n                  />\n                  <label className=\"inp-caption\">Published Date & Time</label>\n                </div>\n              </div>\n              <div className=\"w-100\"></div>\n              <div className=\"col-md\">\n                <div className=\"modal-grp\">\n                  <input\n                    type=\"text\"\n                    name=\"\"\n                    className=\"modal-inp\"\n                    value={otherInformation?.title ? otherInformation?.title : ''}\n                    disabled\n                    required\n                  />\n                  <label className=\"inp-caption\">Title</label>\n                </div>\n              </div>\n              <div className=\"w-100\"></div>\n              <div className=\"col-md\">\n                <div className=\"modal-grp\">\n                  <textarea\n                    name=\"\"\n                    rows=\"6\"\n                    className=\"modal-inp modal-textarea\"\n                    placeholder=\"Write in brief about the company\"\n                    value={otherInformation?.information ? otherInformation?.information : ''}\n                    disabled\n                    required\n                  ></textarea>\n                  <label className=\"inp-caption\">Content</label>\n                </div>\n              </div>\n              <div className=\"w-100\"></div>\n              {(otherInformation?.attachment?.trim()!=='' && otherInformation?.attachmentName?.trim()!=='') ?\n                <div className=\"d-flex justify-content-center align-items-center attachmentStripeContainer w-full\">\n                <p className=\"label\">Attachment Present (if any)</p>\n                <a href={'data:application/pdf;base64,'+otherInformation?.attachment} target=\"blank\" style={{textDecoration:'none', outline:'none', width:'70%'}}>\n                  <div className=\"attachmentStripe d-flex justify-content-between align-items-center\">\n                      <p>{otherInformation?.attachmentName}</p>\n                      <i className=\"fas fa-paperclip\"></i>\n                  </div>\n                </a>\n              </div> : null}\n            </div>\n          </form>\n        </div>\n      </CustomModal>\n    </>\n  ) : (\n    <div className=\"row jobs-saved-section-list\">\n      <div className=\"d-flex flex-column justify-content-start align-items-center w-full\">\n        <p className=\"no-list-message w-full\">\n          No other information publish history to display here\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default OtherInformationList;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport OtherInformationList from '../Components/OtherInformationList';\nimport {actionPostAddOtherInformationRequest, actionPostPublishOtherInformationRequest, actionGetPublishOtherInformationListRequest} from '../../../../Store/Actions/SagaActions/OtherInformationSagaActions';\nimport CustomToastModal from \"../../../../Components/CustomToastModal\";\n\nconst PublishProfile = () => {\n  const [otherInfo, setOtherInfo] = useState({\n    title: \"\",\n    information: \"\",\n    attachment: undefined,\n  });\n\n  const [showModal, setShowModal] = useState(false);\n  const [otherInformationList, setOtherInformationList] = useState([]);\n\n  const dispatch = useDispatch();\n\n  const onOtherInformationListResponse = (response) => {\n    if (response?.length) {\n      setOtherInformationList(response);\n    }\n  };\n\n  const getPublishedOtherInformation = () => {\n    dispatch(\n      actionGetPublishOtherInformationListRequest({\n        callback: onOtherInformationListResponse,\n      })\n    );\n  }\n\n  useEffect(()=>{\n    getPublishedOtherInformation();\n  }, [])\n\n  const onChangeHandler = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n\n    if (name === \"attachment\") {\n      if (event.target.files) {\n        setOtherInfo((prevOtherInfo) => ({\n          ...prevOtherInfo,\n          [name]: event.target.files[0],\n        }));\n      }\n    } else {\n      setOtherInfo((prevOtherInfo) => ({\n        ...prevOtherInfo,\n        [name]: value,\n      }));\n    }\n  };\n\n  const resetPublishOtherInformation = () => {\n    setOtherInfo({\n        title: \"\",\n        information: \"\",\n        attachment: undefined,\n      });\n  }\n\n  const isFormValid = () => {\n    if(otherInfo?.title && otherInfo?.information) {\n        return true;\n    } else {\n        return false;\n    }\n  }\n  \n\n  const onPublish = () => {\n    resetPublishOtherInformation();\n    getPublishedOtherInformation();\n    setShowModal(true);\n  }\n\n  const onAddOtherInformation = (response) => {\n    if(response?.id) {\n      dispatch(actionPostPublishOtherInformationRequest({\n        apiPayloadRequest: [response.id],\n        callback: onPublish\n      }))\n    }\n  }\n\n  const addOtherInformation = () => {\n      dispatch(actionPostAddOtherInformationRequest({\n        apiPayloadRequest: otherInfo,\n        callback: onAddOtherInformation\n      }));\n  }\n\n  return (\n    <div className=\"main\" style={{ marginTop: 0 }}>\n      <h3 className=\"main-title\">Other Information</h3>\n\n      <div className=\"gbl-profile-set other-info\">\n          <div className=\"row\">\n            <div className=\"col-md\">\n              <div className=\"d-grp\">\n                <input\n                  type=\"text\"\n                  name=\"title\"\n                  className=\"d-inp\"\n                  placeholder=\"Title\"\n                  value={otherInfo?.title ? otherInfo?.title : \"\"}\n                  onChange={onChangeHandler}\n                  required\n                />\n                <label className=\"inp-caption\">{`Title`}<sup>*</sup></label>\n              </div>\n              <div className=\"d-grp\">\n                <textarea\n                  name=\"information\"\n                  rows=\"6\"\n                  value={otherInfo?.information ? otherInfo?.information : \"\"}\n                  className=\"d-inp d-textarea\"\n                  placeholder=\"Information/Text\"\n                  onChange={onChangeHandler}\n                  required\n                ></textarea>\n                <label className=\"inp-caption\">{`Information/Text`}<sup>*</sup></label>\n              </div>\n              <div className=\"d-attach\">\n              <p className=\"float-left mt-2 ml-2\">{otherInfo?.attachment?.name}</p>\n                <input\n                  type=\"file\"\n                  className=\"d-inp\"\n                  name=\"attachment\"\n                  id=\"attachment\"\n                  accept=\".pdf\"\n                  onChange={onChangeHandler}\n                />\n                <label htmlFor=\"attachment\" className=\"d-label\">\n                  Attachment\n                </label>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"w-100 text-center mt-4\">\n            <button type=\"button\" onClick={resetPublishOtherInformation} className=\"btn mr-1\">\n              Reset\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn ml-1\"\n              disabled={!isFormValid()}\n              onClick={addOtherInformation}\n            >\n              Publish\n            </button>\n          </div>\n      </div>\n\n      <div className=\"row jobs-saved-section\">\n        <div className=\"d-flex flex-column justify-content-start align-items-center w-full\">\n          <p className=\"heading w-full\">Information Publish History</p>\n        </div>\n      </div>\n      <OtherInformationList otherInformationList={otherInformationList} />\n      <CustomToastModal\n        onClose={() => {\n          setShowModal(false);\n        }}\n        show={showModal}\n        iconNameClass={\"fa-file\"}\n        message={\"Selected Information has been Published Successfully\"}\n      />\n    </div>\n  );\n};\n\nexport default PublishProfile;\n","import { ACTION_POST_ADD_OTHER_INFORMATION_REQUEST, ACTION_POST_PUBLISH_OTHER_INFORMATION_REQUEST, ACTION_GET_PUBLISH_OTHER_INFORMATION_LIST_REQUEST } from \"./SagaActionTypes\"\n\nexport const actionPostAddOtherInformationRequest = (payload) => {\n    return {\n        type: ACTION_POST_ADD_OTHER_INFORMATION_REQUEST,\n        payload: payload\n    }\n}\n\nexport const actionPostPublishOtherInformationRequest = (payload) => {\n    return {\n        type: ACTION_POST_PUBLISH_OTHER_INFORMATION_REQUEST,\n        payload: payload\n    }\n}\n\nexport const actionGetPublishOtherInformationListRequest = (payload) => {\n    return {\n        type: ACTION_GET_PUBLISH_OTHER_INFORMATION_LIST_REQUEST,\n        payload: payload\n    }\n}"],"sourceRoot":""}