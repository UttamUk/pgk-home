{"version":3,"sources":["Pages/Dashboard/TransactionHistory/TransactionHistory.js"],"names":["TransactionHistory","useState","transactions","setTransactions","dispatch","useDispatch","getResponse","dataList","transactionsHistory","length","useEffect","type","payload","callback","className","style","margin","fontWeight","map","element","index","tran","undefined","allocatedTokens","amountPaid","moment","allocatedDate","format","modeOfTokenissue","paymentID"],"mappings":"uJA8DeA,UA1DY,WAAO,IAAD,EACWC,mBAAS,IADpB,mBACtBC,EADsB,KACRC,EADQ,KAEvBC,EAAWC,cAEXC,EAAc,SAACC,GAAc,IAAD,GAChC,OAAGA,QAAH,IAAGA,GAAH,UAAGA,EAAUC,2BAAb,aAAG,EAA+BC,SAChCN,EAAe,OAACI,QAAD,IAACA,OAAD,EAACA,EAAUC,sBAahC,OATEE,qBAAU,WACRN,EAAS,CACPO,KAAM,uBACNC,QAAS,CACPC,SAAUP,OAGb,IAGH,qCACE,qBAAKQ,UAAU,yBAAyBC,MAAO,CAACC,OAAO,YAAvD,SACE,qBAAKF,UAAU,qEAAf,SACE,mBAAGA,UAAU,iBAAiBC,MAAO,CAACE,WAAY,OAAlD,kDAGJ,qBAAKH,UAAW,wBAAhB,SACG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAGI,KAAI,SAACC,EAASC,GACnC,OAAO,sBAAKN,UAAW,2BAAhB,UACP,qBAAKA,UAAW,WAAhB,SAA4B,mBAAGA,UAAW,QAAd,4BAC5B,qBAAKA,UAAW,WAAhB,SAA4B,mBAAGA,UAAW,YAAd,uBAC5B,qBAAKA,UAAW,WAAhB,SAA4B,mBAAGA,UAAW,YAAd,8BAC5B,qBAAKA,UAAW,WAAhB,SAA4B,mBAAGA,UAAW,SAAd,yBAC5B,qBAAKA,UAAW,WAAhB,SAA4B,mBAAGA,UAAW,YAAd,gCAC5B,qBAAKA,UAAW,WAAhB,SAA4B,mBAAGA,UAAW,YAAd,+CAN4BM,QAU9D,qBAAKN,UAAU,yBAAyBC,MAAO,CAACC,OAAO,YAAvD,SACE,qBAAKF,UAAU,qEAAf,SACE,mBAAGA,UAAU,iBAAiBC,MAAO,CAACE,WAAY,OAAlD,qCAGJ,qBAAKH,UAAW,wBAAhB,SACGZ,EAAagB,KAAI,SAACG,EAAMD,GACrB,OAAO,sBAAKN,UAAW,4BAAhB,UACP,qBAAKA,UAAW,WAAhB,SAA4B,mBAAGA,UAAW,SAAd,cAAiDQ,KAApB,OAAJD,QAAI,IAAJA,OAAA,EAAAA,EAAME,iBAAN,UAAuCF,EAAKE,gBAA5C,WAAuE,OAC5H,qBAAKT,UAAW,WAAhB,SAA4B,oBAAGA,UAAW,QAAd,wBAA4BO,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAMG,gBAC9D,qBAAKV,UAAW,WAAhB,SAA4B,oBAAGA,UAAW,YAAd,2BAA0CW,IAAM,OAACJ,QAAD,IAACA,OAAD,EAACA,EAAMK,eAAeC,OAAO,2BAA7E,SAC5B,qBAAKb,UAAW,WAAhB,SAA4B,mBAAGA,UAAW,QAAd,gBAAwBO,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAMO,qBAC1D,qBAAKd,UAAW,WAAhB,SAA4B,oBAAGA,UAAW,YAAd,qCAA6CO,QAA7C,IAA6CA,OAA7C,EAA6CA,EAAMQ,iBALtBT","file":"static/js/41.ba6e1b11.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from 'moment';\n\nconst TransactionHistory = () => {\n    const [transactions, setTransactions] = useState([]);\n    const dispatch = useDispatch();\n\n    const getResponse = (dataList) => {\n      if(dataList?.transactionsHistory?.length) {\n        setTransactions(dataList?.transactionsHistory);\n      }\n    }\n\n    useEffect(()=>{\n      dispatch({\n        type: 'get_all_transactions',\n        payload: {\n          callback: getResponse\n        }\n      })\n    }, [])\n\n  return ( \n    <>\n      <div className=\"row jobs-saved-section\" style={{margin:'10px 0px'}}>\n        <div className=\"d-flex flex-column justify-content-start align-items-center w-full\">\n          <p className=\"heading w-full\" style={{fontWeight: '400'}}>Subscription Transaction History</p>\n        </div>\n      </div>\n      <div className={'transaction-container'}>\n        {[1,1,1,1,1,1,1,1,1,1,1].map((element, index) => {\n            return <div className={'sub-transaction-item row'} key={index}>\n            <div className={'col-md-2'}><p className={'label'}>COEs Offered</p></div>\n            <div className={'col-md-2'}><p className={'sub-label'}>Profile</p></div>\n            <div className={'col-md-2'}><p className={'sub-label'}>SRM University</p></div>\n            <div className={'col-md-2'}><p className={'tokens'}>20 Tokens</p></div>\n            <div className={'col-md-2'}><p className={'end-label'}>Date - 10/02/21 </p></div>\n            <div className={'col-md-2'}><p className={'end-label'}>Transaction ID - xxxxxxxxxxxx</p></div>\n          </div>\n        })}\n      </div>\n      <div className=\"row jobs-saved-section\" style={{margin:'10px 0px'}}>\n        <div className=\"d-flex flex-column justify-content-start align-items-center w-full\">\n          <p className=\"heading w-full\" style={{fontWeight: '400'}}>Transaction History</p>\n        </div>\n      </div>\n      <div className={'transaction-container'}>\n        {transactions.map((tran, index) => {\n            return <div className={'main-transaction-item row'} key={index}>\n            <div className={'col-md-3'}><p className={'tokens'}>{tran?.allocatedTokens!==undefined ? `${tran.allocatedTokens} Tokens` : ''}</p></div>\n            <div className={'col-md-2'}><p className={'label'}>Rs. {tran?.amountPaid}</p></div>\n            <div className={'col-md-3'}><p className={'end-label'}>Time & Date - {moment(tran?.allocatedDate).format('MMMM Do YYYY, h:mm:ss a')} </p></div>\n            <div className={'col-md-2'}><p className={'label'}>{tran?.modeOfTokenissue}</p></div>\n            <div className={'col-md-2'}><p className={'end-label'}>Transaction ID - {tran?.paymentID}</p></div>\n          </div>\n        })}\n      </div>\n    </>\n  )\n}\n\nexport default TransactionHistory;\n"],"sourceRoot":""}