{"version":3,"sources":["Components/CustomModal.js","Portals/PortalModal.js","Store/Actions/SagaActions/HiringSagaAction.js","Components/CustomToastModal.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Store/Actions/SagaActions/JobsSagaAction.js","Pages/Dashboard/Publish/Components/JobsListItem.js","Pages/Dashboard/Publish/Jobs/PublishJobs.js"],"names":["$","window","CustomModal","props","useEffect","show","modal","remove","className","data-backdrop","data-keyboard","id","tabIndex","role","style","modalStyles","children","PortalModal","element","document","getElementById","createPortal","HiringSagaAction","payload","type","ACTION_GET_CORPORATE_HIRING_REQUEST","AddHiringSagaAction","ACTION_POST_CORPORATE_HIRING_REQUEST","actionPostPublishCorporateHiringRequest","ACTION_POST_PUBLISH_CORPORATE_HIRING_REQUEST","actionGetCorporateHiringByIdRequest","ACTION_GET_CORPORATE_HIRING_BYID_REQUEST","CustomToastModal","onClick","onClose","aria-hidden","iconNameClass","message","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","GetJobsSagaAction","ACTION_GET_CORPORATE_JOBS_REQUEST","GetJobByIdSagaAction","ACTION_GET_CORPORATE_JOBS_BYID_REQUEST","AddJobsSagaAction","ACTION_POST_CORPORATE_JOBS_REQUEST","EditJobsSagaAction","ACTION_POST_CORPORATE_UPDATEJOBS_REQUEST","actionPostPublishCorporateJobsRequest","ACTION_POST_PUBLISH_CORPORATE_JOBS_REQUEST","JobsListItem","checkHandler","onChange","item","jobID","checked","isCheck","marginRight","jobName","name","value","hiringCriteriaID","hiringCriteriaList","map","index","hiringCriteriaName","creationDate","publishedFlag","moment","format","height","width","fontSize","borderRadius","onPublish","onJobView","PublishJobs","useState","setHiringCriteriaList","jobsList","setJobsList","singleJob","setSingleJob","singleJobSkills","setSingleJobSkills","showSingleJobDetails","setShowSingleJobDetails","selectAll","setSelectAll","showModal","setShowModal","showToastModal","setShowToastModal","selectedItems","setSelectedItems","dispatch","useDispatch","onJobsResponse","response","length","getJobs","callback","getJobByIdResp","skillsInString","trim","JSON","parse","getJobById","apiPayloadRequest","getAllHirings","data","onCheckHandler","updatedSelectedItems","includes","deleteItemIndex","indexOf","splice","push","onPublishSuccess","publishSelectedItems","items","some","forEach","onSelect","margin","padding","minWidth","cursor","skillID","skillName","noOfPositions","location","salaryRange","dateOfHiring","finalSubmit"],"mappings":"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","file":"static/js/7.1715e4a1.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport PortalModal from \"../Portals/PortalModal\";\nconst $ = window.$;\n\nconst CustomModal = (props) => {\n  useEffect(() => {\n    if (props?.show) {\n      $(\"#customModal\").modal(\"show\");\n    } else {\n      $(\"#customModal\").modal(\"hide\");\n    }\n\n    $(\".modal-backdrop\").remove();\n  });\n\n  return (\n    props?.show && (\n      <PortalModal>\n        <div className=\"modal portalModalChildren\" data-backdrop=\"static\" data-keyboard=\"false\" id={\"customModal\"} tabIndex={-1}>\n          <div\n            className={`modal-dialog modal-lg modal-dialog-centered`}\n            role=\"document\"\n            style={{...props?.modalStyles}}\n          >\n            <div className=\"modal-content\">{props?.children}</div>\n          </div>\n        </div>\n      </PortalModal>\n    )\n  );\n};\n\nexport default CustomModal;\n","import { createPortal } from \"react-dom\";\n\nconst PortalModal = (props) => {\n\n    const element = document.getElementById('portalModal');\n    return createPortal(props.children, element);\n};\n\nexport default PortalModal;","import { ACTION_GET_CORPORATE_HIRING_REQUEST, ACTION_POST_CORPORATE_HIRING_REQUEST, ACTION_POST_PUBLISH_CORPORATE_HIRING_REQUEST, ACTION_GET_CORPORATE_HIRING_BYID_REQUEST } from \"./SagaActionTypes\"\n\nexport const HiringSagaAction = (payload) => {\n    return {\n        type: ACTION_GET_CORPORATE_HIRING_REQUEST,\n        payload: payload\n    }\n};\n\nexport const AddHiringSagaAction = (payload) => {\n    return {\n        type: ACTION_POST_CORPORATE_HIRING_REQUEST,\n        payload: payload\n    }\n};\n\nexport const actionPostPublishCorporateHiringRequest = (payload) => {\n    return {\n        type: ACTION_POST_PUBLISH_CORPORATE_HIRING_REQUEST,\n        payload: payload\n    }\n}\n\nexport const actionGetCorporateHiringByIdRequest = (payload) => {\n    return {\n        type: ACTION_GET_CORPORATE_HIRING_BYID_REQUEST,\n        payload: payload\n    }\n}","import React, { useEffect } from \"react\";\nimport PortalModal from \"../Portals/PortalModal\";\nconst $ = window.$;\n\nconst CustomToastModal = (props) => {\n  useEffect(() => {\n    if (props?.show) {\n      $(\"#customToastModal\").modal(\"show\");\n    } else {\n      $(\"#customToastModal\").modal(\"hide\");\n    }\n\n    $(\".modal-backdrop\").remove();\n\n  });\n\n  return (\n    props?.show && <PortalModal>\n      <div className=\"modal portalModalChildren\" data-backdrop=\"static\" data-keyboard=\"false\" id={\"customToastModal\"} tabIndex={-1}>\n        <div\n          className={`modal-dialog modal-dialog-centered modal-sm`}\n          role=\"document\"\n        >\n          <div className=\"modal-content\">\n            <div className=\"hiring-modal\">\n              <button type=\"button\" className=\"close\" onClick={props?.onClose}>\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n              <div className=\"modal-success\">\n                {props?.iconNameClass && (\n                  <div className=\"modal-icon\">\n                    <i\n                      className={`fas ${props?.iconNameClass} txt-lightgreen`}\n                    ></i>\n                  </div>\n                )}\n                <p className=\"modal-success-txt\">{props?.message}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </PortalModal>\n  );\n};\n\nexport default CustomToastModal;\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import {\n    ACTION_GET_CORPORATE_JOBS_BYID_REQUEST,\n    ACTION_GET_CORPORATE_JOBS_REQUEST,\n    ACTION_POST_CORPORATE_JOBS_REQUEST,\n    ACTION_POST_CORPORATE_UPDATEJOBS_REQUEST,\n    ACTION_POST_PUBLISH_CORPORATE_JOBS_REQUEST\n} from \"./SagaActionTypes\"\n\nexport const GetJobsSagaAction = (payload) => {\n    return {\n        type: ACTION_GET_CORPORATE_JOBS_REQUEST,\n        payload: payload\n    }\n};\n\nexport const GetJobByIdSagaAction = (payload) => {\n    return {\n        type: ACTION_GET_CORPORATE_JOBS_BYID_REQUEST,\n        payload: payload\n    }\n};\n\nexport const AddJobsSagaAction = (payload) => {\n    return {\n        type: ACTION_POST_CORPORATE_JOBS_REQUEST,\n        payload: payload\n    }\n};\n\nexport const EditJobsSagaAction = (payload) => {\n    return {\n        type: ACTION_POST_CORPORATE_UPDATEJOBS_REQUEST,\n        payload: payload\n    }\n};\n\nexport const actionPostPublishCorporateJobsRequest = (payload) => {\n    return {\n        type: ACTION_POST_PUBLISH_CORPORATE_JOBS_REQUEST,\n        payload: payload\n    }\n}","import React from \"react\";\nimport moment from \"moment\";\n\nconst JobsListItem = (props) => {\n  return (\n    <div className=\"w-full d-flex justify-content-center align-content-center publish-selected-btn-container\">\n      {props?.checkHandler && (\n        <input\n          type=\"checkbox\"\n          className=\"align-self-center\"\n          onChange={() => {\n            props?.checkHandler(props?.item?.jobID);\n          }}\n          checked={props?.isCheck ? props?.isCheck : false}\n          style={{ marginRight: \"10px\" }}\n        />\n      )}\n      <div className=\"d-flex flex-row justify-content-between align-items-center jobs-list-item w-full\">\n        <div className=\"item d-flex flex-row justify-content-between align-items-center w-full\">\n          <div className=\"job-icon job-blue-icon d-flex justify-content-center align-items-center\">\n            <i className=\"fas fa-cube\"></i>\n          </div>\n          <p className=\"job-label\">{props?.item?.jobName ? props?.item?.jobName : '-'}</p>\n          <select name=\"\" onChange={()=>{}} className=\"form-control job-dropdown\" value={props?.item?.hiringCriteriaID}>\n            <option value=\"\">Select Hiring Criteria</option>\n            {props?.hiringCriteriaList?.map((item, index)=>{\n                return <option value={item?.hiringCriteriaID} key={index}>{item?.hiringCriteriaName}</option>\n            })}\n          </select>\n          <select name=\"\" className=\"form-control job-dropdown\">\n            <option value=\"\">Open</option>\n          </select>\n          <p className=\"job-published-date\">\n          {props?.item?.creationDate\n              ? props?.item?.publishedFlag ? `Published on ${moment(props?.item?.creationDate).format(\n                \"DD-MM-YYYY\"\n              )}` : `Created on ${moment(props?.item?.creationDate).format(\n                \"DD-MM-YYYY\"\n              )}`\n              : \"-\"}\n          </p>\n        </div>\n        <div className=\"vertical-divider\"></div>\n        <div className=\"job-list-item-details-container d-flex flex-row justify-content-center align-items-center\">\n        {props?.checkHandler && (\n            <button\n              type=\"button\"\n              className=\"btn d-flex justify-content-around align-items-center\"\n              style={{\n                height: \"30px\",\n                width: \"100px\",\n                fontSize: \".600rem\",\n                borderRadius: \"4px\",\n              }}\n              onClick={() => {\n                props?.onPublish(props?.item?.jobID);\n              }}\n            >\n              <p>Publish</p>\n            </button>\n          )}\n\n        {props?.item?.publishedFlag && (\n            <button\n              type=\"button\"\n              className=\"btn d-flex justify-content-around align-items-center\"\n              style={{\n                height: \"30px\",\n                width: \"100px\",\n                fontSize: \".600rem\",\n                borderRadius: \"4px\",\n              }}\n              onClick={() => {\n                props?.onJobView(props?.item?.jobID);\n              }}\n            >\n              <p>Details</p>\n              <i className=\"fas fa-chevron-right\"></i>\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default JobsListItem;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport JobsListItem from \"../Components/JobsListItem\";\nimport {\n  GetJobsSagaAction,\n  actionPostPublishCorporateJobsRequest,\n  GetJobByIdSagaAction,\n} from \"../../../../Store/Actions/SagaActions/JobsSagaAction\";\nimport { HiringSagaAction } from \"../../../../Store/Actions/SagaActions/HiringSagaAction\";\nimport CustomModal from \"../../../../Components/CustomModal\";\nimport moment from \"moment\";\nimport CustomToastModal from \"../../../../Components/CustomToastModal\";\n\nconst PublishJobs = () => {\n  const [hiringCriteriaList, setHiringCriteriaList] = useState([]);\n  const [jobsList, setJobsList] = useState([]);\n  const [singleJob, setSingleJob] = useState();\n  const [singleJobSkills, setSingleJobSkills] = useState([]);\n  const [showSingleJobDetails, setShowSingleJobDetails] = useState(false);\n  const [selectAll, setSelectAll] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [showToastModal, setShowToastModal] = useState(false);\n\n  const [selectedItems, setSelectedItems] = useState([]);\n\n  const dispatch = useDispatch();\n\n  const onJobsResponse = (response) => {\n    if (response?.length) {\n      setJobsList(response);\n    }\n  };\n\n  const getJobs = () => {\n    dispatch(\n      GetJobsSagaAction({\n        callback: onJobsResponse,\n      })\n    );\n  };\n\n  const getJobByIdResp = (response) => {\n    setSingleJob(response);\n    if(response?.skillsInString?.trim()!=='' && JSON.parse(response.skillsInString)) {\n      setSingleJobSkills(JSON.parse(response.skillsInString));\n    }\n    setShowModal(true);\n  };\n\n  const getJobById = (id) => {\n    dispatch(\n      GetJobByIdSagaAction({ apiPayloadRequest: id, callback: getJobByIdResp })\n    );\n  };\n\n  const getAllHirings = (data) => {\n    if (data?.length) {\n      setHiringCriteriaList(data);\n    }\n  };\n\n  const getHiring = () => {\n    dispatch(HiringSagaAction({ callback: getAllHirings }));\n  };\n\n  useEffect(() => {\n    getJobs();\n    getHiring();\n  }, []);\n\n  const onCheckHandler = (id) => {\n    let updatedSelectedItems = [...selectedItems];\n\n    if (updatedSelectedItems.includes(id)) {\n      var deleteItemIndex = updatedSelectedItems.indexOf(id);\n      if (deleteItemIndex > -1) {\n        updatedSelectedItems.splice(deleteItemIndex, 1);\n      }\n    } else {\n      updatedSelectedItems.push(id);\n    }\n\n    setSelectedItems(updatedSelectedItems);\n    setSelectAll(updatedSelectedItems.length === jobsList.length);\n  };\n\n  const onPublishSuccess = () => {\n    getJobs();\n    setShowModal(false);\n    setShowToastModal(true);\n  };\n\n  const publishSelectedItems = (items) => {\n    dispatch(\n      actionPostPublishCorporateJobsRequest({\n        apiPayloadRequest: items,\n        callback: onPublishSuccess,\n      })\n    );\n  };\n\n  const publishSelected = () => {\n    if (selectedItems.length) {\n      const updatedSelectedItems = jobsList.map((item) => {\n        if (selectedItems.includes(item.jobID)) {\n          return { jobID: item.jobID };\n        }\n      });\n\n      if (updatedSelectedItems?.length) {\n        publishSelectedItems(updatedSelectedItems);\n      }\n    }\n  };\n\n  const finalSubmit = (id) => {\n    let updatedSelectedItems = [];\n    jobsList.forEach((item) => {\n      if (item.jobID === id) {\n        updatedSelectedItems.push({ jobID: item.jobID });\n      } \n    });\n\n    if (updatedSelectedItems?.length) {\n      publishSelectedItems(updatedSelectedItems);\n    }\n  };\n\n  const onSelect = (id) => {\n    let updatedSelectedItems = [...selectedItems];\n\n    if (id === \"ALL\") {\n      updatedSelectedItems = [];\n\n      if (selectAll === false) {\n        jobsList.forEach((item) => {\n          updatedSelectedItems.push(item?.jobID);\n        });\n      }\n      setSelectedItems(updatedSelectedItems);\n      setSelectAll(!selectAll);\n    } else {\n      setSelectedItems(updatedSelectedItems);\n    }\n  };\n\n  return (\n    <>\n    <div className=\"row published-jobs-section\">\n      <div className=\"d-flex flex-column justify-content-start align-items-center w-full\">\n        <p className=\"heading\">Publish Jobs</p>\n        {(jobsList?.length && jobsList.some((item)=>!item.publishedFlag)) ? (\n          <div className=\"w-full d-flex justify-content-start align-content-center publish-selected-btn-container\">\n            <input\n              type=\"checkbox\"\n              onChange={() => {\n                onSelect(\"ALL\");\n              }}\n              checked={selectAll}\n              className=\"align-self-center mr-2\"\n            />\n            <button\n              type=\"button\"\n              className=\"btn\"\n              style={{ height: \"35px\", width: \"100px\", fontSize: \".700rem\" }}\n              onClick={publishSelected}\n            >\n              Publish Selected\n            </button>\n          </div>\n        ) : (<div className=\"row jobs-saved-section-list\">\n        <div className=\"d-flex flex-column justify-content-start align-items-center w-full\">\n          <p className=\"no-list-message w-full\">\n            Create a new job to publish\n          </p>\n        </div>\n      </div>)\n      }\n        {jobsList?.length &&\n          jobsList.map((item, index) => {\n            if(!item.publishedFlag) {\n              return (\n                <JobsListItem\n                  key={index}\n                  item={item}\n                  hiringCriteriaList={hiringCriteriaList}\n                  checkHandler={onCheckHandler}\n                  onPublish={() => {\n                    getJobById(item.jobID);\n                  }}\n                  isCheck={selectedItems.includes(item?.jobID) ? true : false}\n                />\n              );\n            }\n          })}\n      </div>\n    </div>\n\n      <div className=\"row jobs-saved-section\" style={{margin:0}}>\n        <div className=\"d-flex flex-column justify-content-start align-items-center w-full\">\n          <p className=\"heading w-full\">Published Jobs History</p>\n        </div>\n      </div>\n     <div style={{padding: '12px'}}>\n     {jobsList?.length &&\n          jobsList.map((item, index) => {\n            if(item.publishedFlag) {\n              return (\n                <JobsListItem\n                  key={index}\n                  item={item}\n                  hiringCriteriaList={hiringCriteriaList}\n                  onJobView={() => {\n                    getJobById(item.jobID);\n                  }}\n                />\n              );\n            }\n          })}\n     </div>\n     {<CustomModal show={showModal} modalStyles={{ minWidth: \"65%\" }}>\n        <div className=\"job-publish-modal\">\n          <div className=\"modal-header job-publish-modal-header\">\n            <p className=\"heading w-full\">Job Details</p>\n            <button\n              type=\"button\"\n              className=\"close\"\n              onClick={() => {\n                setShowModal(false);\n              }}\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body job-publish-modal-body d-flex flex-column justify-content-center align-items-center\">\n            <div className=\"heading-section d-flex justify-content-start align-items-start w-full\">\n              {!singleJob?.publishedFlag && <input\n                type=\"checkbox\"\n                name=\"\"\n                className=\"job-checkbox align-self-start\"\n              />}\n              <div className=\"d-flex flex-column justify-content-start align-items-center w-full body-section\">\n                <div className=\"header d-flex flex-row justify-content-between align-items-center w-full\">\n                  <p className=\"job-label\">\n                    {singleJob?.jobID ? singleJob?.jobID : \"-\"}\n                  </p>\n                  <div className=\"job-heading-btn\">Open</div>\n                  <select\n                    name=\"\"\n                    onChange={() => {}}\n                    className=\"form-control job-dropdown\"\n                    value={singleJob?.hiringCriteriaID}\n                  >\n                    <option value=\"\">Select Hiring Criteria</option>\n                    {hiringCriteriaList?.map((item, index) => {\n                      return (\n                        <option value={item?.hiringCriteriaID} key={index}>\n                          {item?.hiringCriteriaName}\n                        </option>\n                      );\n                    })}\n                  </select>\n                  <div\n                    className=\"d-flex flex-row justify-content-between align-items-center\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => {\n                      setShowSingleJobDetails(!showSingleJobDetails);\n                    }}\n                  >\n                    <p className=\"label\">Details</p>\n                    <i\n                      className={`fas ${\n                        showSingleJobDetails\n                          ? \"fa-chevron-up\"\n                          : \"fa-chevron-down\"\n                      }`}\n                    ></i>\n                  </div>\n                </div>\n                {showSingleJobDetails && (\n                  <table className=\"table table-borderless table-striped job-publish-table\">\n                    <thead className=\"job-publish-table-header\">\n                      <tr>\n                        <td className=\"table-heading\">Skill Set</td>\n                        <td className=\"table-heading\">No of Positions</td>\n                        <td className=\"table-heading\">Location</td>\n                        <td className=\"table-heading\">Salary Range</td>\n                        <td className=\"table-heading\">Date of hiring</td>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {singleJobSkills?.length &&\n                        singleJobSkills.map((item) => {\n                          return (\n                            <tr>\n                              <td>\n                                {!singleJob?.publishedFlag && <input\n                                  type=\"checkbox\"\n                                  name=\"\"\n                                  className=\"table-item-checkbox\"\n                                />} {\" \"}\n                                {item?.skillID + item?.skillName}\n                              </td>\n                              <td>\n                                {item?.noOfPositions ? item.noOfPositions : \"-\"}\n                              </td>\n                              <td>{item?.location ? item.location : \"-\"}</td>\n                              <td>\n                                {item?.salaryRange ? item.salaryRange : \"-\"}\n                              </td>\n                              <td>\n                                {item?.dateOfHiring\n                                  ? moment(item.dateOfHiring).format(\n                                      \"DD - MMM - YYYY\"\n                                    )\n                                  : \"-\"}\n                              </td>\n                            </tr>\n                          );\n                        })}\n                    </tbody>\n                  </table>\n                )}\n                {!singleJob?.publishedFlag && <div className=\"d-flex flex-row justify-content-center align-items-center w-full mt-4\">\n                  <button\n                    type=\"button\"\n                    className=\"btn d-flex justify-content-around align-items-center\"\n                    style={{\n                      height: \"40px\",\n                      width: \"100px\",\n                      fontSize: \".700rem\",\n                      borderRadius: \"4px\",\n                      marginRight: '10px'\n                    }}\n                    onClick={() => {\n                      setShowModal(false);\n                    }}\n                  >\n                    <p>Cancel</p>\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"btn d-flex justify-content-around align-items-center\"\n                    style={{\n                      height: \"40px\",\n                      width: \"100px\",\n                      fontSize: \".700rem\",\n                      borderRadius: \"4px\",\n                    }}\n                    onClick={() => {finalSubmit(singleJob?.jobID)}}\n                  >\n                    <p>Publish</p>\n                  </button>\n                </div>}\n              </div>\n            </div>\n          </div>\n        </div>\n      </CustomModal>}\n      {<CustomToastModal\n        onClose={() => {\n            setShowToastModal(false);\n        }}\n        show={showToastModal}\n        iconNameClass={\"fa-briefcase\"}\n        message={\"Selected Job/Jobs Have been Published Successfully\"}\n      />}\n    </>\n  );\n};\n\nexport default PublishJobs;\n"],"sourceRoot":""}