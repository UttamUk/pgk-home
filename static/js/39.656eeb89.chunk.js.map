{"version":3,"sources":["Pages/Dashboard/Profile/ProfileForm/AccountSettingsForm.js","Pages/Dashboard/Profile/Profile.js"],"names":["AccountSettingsForm","props","className","type","name","onChange","value","profileData","primaryContactFirstName","readOnly","undefined","disable","required","primaryContactMiddleName","primaryContactLastName","primaryContactDesignation","maxLength","minLength","primaryContactPhone","parseInt","primaryContactEmail","Profile","useState","profile","setProfile","checkStatus","setCheckStatus","showModal","setShowModal","profilePicture","setProfilePicture","attachment","attachmentName","setAttachment","isTermsAndConditionsChecked","setIsTermsAndConditionsChecked","dispatch","useDispatch","profileInfo","useSelector","state","DashboardReducer","useEffect","updateProfileData","event","target","includes","replace","prevProfile","fileHandler","preventDefault","console","log","files","val","length","i","reader","FileReader","onload","ev","result","split","readAsDataURL","style","marginTop","src","alt","htmlFor","id","accept","backgroundColor","border","padding","dateOfJoining","moment","format","BasicForm","AddressAndContactForm","toggleCorporateHeadQuarters","prevState","corporateLocalBranchAddressLine1","corporateHQAddressLine1","corporateLocalBranchAddressLine2","corporateHQAddressLine2","corporateLocalBranchAddressCountry","corporateHQAddressCountry","corporateLocalBranchAddressState","corporateHQAddressState","corporateLocalBranchAddressCity","corporateHQAddressCity","corporateLocalBranchAddressDistrict","corporateHQAddressDistrict","corporateLocalBranchAddressZipCode","corporateHQAddressZipCode","corporateLocalBranchAddressPhone","corporateHQAddressPhone","corporateLocalBranchAddressEmail","corporateHQAddressEmail","ProfileForm","tempAttachment","checked","onClick","updatedProfile","actionPatchCorporateProfileSagaAction","apiPayloadRequest","callback","disabled","stakeholderID","CIN","corporateType","corporateCategory","corporateIndustry","CustomToastModal","onClose","show","iconNameClass","message"],"mappings":"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","file":"static/js/39.656eeb89.chunk.js","sourcesContent":["import React from 'react';\n\nconst AccountSettingsForm = (props) => {\n    return (\n        <div className=\"profile-box\">\n                        <aside className=\"profile-side\">\n                            <h3 className=\"profile-side-title\">Account Settings</h3>\n                        </aside>\n                        <div className=\"profile-data\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <h6 className=\"d-profile-name\">Primary Contact</h6>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-md-4\">\n                                    <div className=\"d-grp\">\n                                        <input type=\"text\" name=\"primaryContactFirstName\" onChange={props?.onChange} value={props?.profileData?.primaryContactFirstName ? props?.profileData?.primaryContactFirstName : ''} readOnly={props?.disable!==undefined ? props?.disable : false} className=\"d-inp\" \n                                            required />\n                                        <label className=\"inp-caption\">{`First Name`}</label>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-4\">\n                                    <div className=\"d-grp\">\n                                        <input type=\"text\" name=\"primaryContactMiddleName\" onChange={props?.onChange} value={props?.profileData?.primaryContactMiddleName ? props?.profileData?.primaryContactMiddleName : ''} readOnly={props?.disable!==undefined ? props?.disable : false} className=\"d-inp\"\n                                            required />\n                                        <label className=\"inp-caption\">{`Middle Name`}</label>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-4\">\n                                    <div className=\"d-grp\">\n                                        <input type=\"text\" name=\"primaryContactLastName\" onChange={props?.onChange} value={props?.profileData?.primaryContactLastName ? props?.profileData?.primaryContactLastName : ''} readOnly={props?.disable!==undefined ? props?.disable : false} className=\"d-inp\" required />\n                                        <label className=\"inp-caption\">{`Last Name`}</label>\n                                    </div>\n                                </div>\n                                <div className=\"w-100\"></div>\n\n                                <div className=\"col-md-4\">\n                                    <div className=\"d-grp\">\n                                        <input type=\"text\" name=\"primaryContactDesignation\" onChange={props?.onChange} value={props?.profileData?.primaryContactDesignation ? props?.profileData?.primaryContactDesignation : ''} readOnly={props?.disable!==undefined ? props?.disable : false} className=\"d-inp\" \n                                            required />\n                                        <label className=\"inp-caption\">{`Designation`}</label>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-4\">\n                                    <div className=\"d-grp\">\n                                        <input type=\"text\" name=\"primaryContactPhone\" maxLength={12} minLength={12} onChange={props?.onChange} value={props?.profileData?.primaryContactPhone ? parseInt(props?.profileData?.primaryContactPhone) : ''} readOnly={props?.disable!==undefined ? props?.disable : false} className=\"d-inp input-number\"\n                                            required />\n                                        <label className=\"inp-caption\">{`Mobile Number`}</label>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-4\">\n                                    <div className=\"d-grp\">\n                                        <input type=\"email\" name=\"primaryContactEmail\" onChange={props?.onChange} value={props?.profileData?.primaryContactEmail ? props?.profileData?.primaryContactEmail : ''} readOnly={props?.disable!==undefined ? props?.disable : false} className=\"d-inp\" required />\n                                        <label className=\"inp-caption\">{`Email`}</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n    );\n}\n\nexport default AccountSettingsForm;","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport BasicForm from \"./ProfileForm/BasicForm\";\nimport AddressAndContactForm from \"./ProfileForm/AddressAndContactForm\";\nimport ProfileForm from \"./ProfileForm/ProfileForm\";\nimport AccountSettingsForm from \"./ProfileForm/AccountSettingsForm\";\nimport { toast } from \"react-toastify\";\nimport moment from \"moment\";\nimport CustomToastModal from \"../../../Components/CustomToastModal\";\nimport {\n  actionGetCorporateProfileSagaAction,\n  actionPatchCorporateProfileSagaAction,\n} from \"../../../Store/Actions/SagaActions/CorporateProfileSagaActions\";\n\nconst Profile = () => {\n  const [profile, setProfile] = useState({});\n  const [checkStatus, setCheckStatus] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [profilePicture, setProfilePicture] = useState();\n  const [attachment, setAttachment] = useState({\n    attachment: undefined,\n    attachmentName: undefined\n  });\n  const [\n    isTermsAndConditionsChecked,\n    setIsTermsAndConditionsChecked,\n  ] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const profileInfo = useSelector(state => state.DashboardReducer.profileInfo);\n\n  useEffect(()=>{\n    setProfilePicture(profileInfo?.profilePicture);\n    setAttachment({\n      attachment: profileInfo?.attachment,\n      attachmentName: profileInfo?.attachmentName\n    });\n    setProfile({\n      ...profileInfo,\n      profilePicture: undefined,\n      attachment: undefined,\n    })\n  }, [profileInfo]);\n\n  const updateProfileData = (event) => {\n    let { name, value } = event.target;\n\n    if(['yearOfEstablishment', 'corporateHQAddressZipCode', 'corporateLocalBranchAddressZipCode'].includes(name)) {\n      value = value.replace(/[^0-9.]/g, \"\");\n    }\n    \n    setProfile((prevProfile) => ({\n      ...prevProfile,\n      [name]: value,\n    }));\n  };\n\n  const fileHandler = (event) => {\n    event.preventDefault();\n    const { name } = event.target;\n\n    console.log('event.target.files ', event.target.files);\n\n    if (event.target.files) {\n      setProfile((prevProfile) => ({\n        ...prevProfile,\n        [name]: event.target.files[0],\n      }));\n    }\n\n    const val = event.target.files.length;\n    for (let i = 0; i < val; i++) {\n      let reader = new FileReader();\n      reader.onload = function (ev) {\n        if (name === \"profilePicture\") {\n          setProfilePicture(ev.target.result.split(\",\")[1]);\n        } else if (name === \"attachment\") {\n          setAttachment({\n            attachment: ev.target.result.split(\",\")[1],\n            attachmentName: event?.target?.files[0]?.name ? event.target.files[0].name : '-'\n          });\n        }\n      };\n\n      reader.readAsDataURL(event.target.files[i]);\n    }\n  };\n\n  const toggleCorporateHeadQuarters = () => {\n    setCheckStatus(!checkStatus);\n    if(!checkStatus) {\n      setProfile((prevState)=>({\n        ...prevState,\n        corporateLocalBranchAddressLine1: prevState.corporateHQAddressLine1,\n        corporateLocalBranchAddressLine2: prevState.corporateHQAddressLine2,\n        corporateLocalBranchAddressCountry: prevState.corporateHQAddressCountry,\n        corporateLocalBranchAddressState: prevState.corporateHQAddressState,\n        corporateLocalBranchAddressCity: prevState.corporateHQAddressCity,\n        corporateLocalBranchAddressDistrict: prevState.corporateHQAddressDistrict,\n        corporateLocalBranchAddressZipCode: prevState.corporateHQAddressZipCode,\n        corporateLocalBranchAddressPhone: prevState.corporateHQAddressPhone,\n        corporateLocalBranchAddressEmail: prevState.corporateHQAddressEmail\n      }));\n    }\n  };\n\n  const saveProfile = () => {\n    const updatedProfile = {\n      ...profile,\n      dateOfJoining: moment(profile.dateOfJoining),\n    };\n\n    if (updatedProfile?.attachment === undefined) {\n      delete updatedProfile.attachment;\n    }\n\n    if (updatedProfile?.profilePicture === undefined) {\n      delete updatedProfile.profilePicture;\n    }\n\n    dispatch(\n      actionPatchCorporateProfileSagaAction({\n        apiPayloadRequest: updatedProfile,\n        callback: () => {\n          setShowModal(true);\n        },\n      })\n    );\n  };\n\n  const isFormValid = () => {\n    if (\n      profile?.stakeholderID &&\n      profile?.CIN &&\n      profile?.corporateType &&\n      profile?.corporateCategory &&\n      profile?.corporateIndustry &&\n      profile?.dateOfJoining &&\n      profile?.corporateHQAddressLine1 &&\n      profile?.corporateHQAddressCountry &&\n      profile?.corporateHQAddressState &&\n      profile?.corporateHQAddressCity &&\n      profile?.corporateHQAddressDistrict &&\n      profile?.corporateHQAddressZipCode &&\n      profile?.corporateHQAddressPhone &&\n      profile?.corporateHQAddressEmail &&\n      isTermsAndConditionsChecked\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return (\n    <div className=\"main\" style={{ marginTop: 0 }}>\n      <h3 className=\"main-title\">Corporate Profile</h3>\n      <div className=\"profile-pic\">\n        <img\n          src={\n            profilePicture\n              ? \"data:image/png;base64,\" + profilePicture\n              : \"./images/logo.png\"\n          }\n          className=\"profile-pic-img\"\n          alt=\"no img\"\n        />\n        <div className=\"upload-pic\">\n          <label htmlFor=\"profile\">\n            Click to <br /> Change your <br /> Logo\n          </label>\n          <input\n            type=\"file\"\n            name=\"profilePicture\"\n            onChange={fileHandler}\n            id=\"profile\"\n            accept=\"image/*\"\n            className=\"upload-pic-inp\"\n          />\n        </div>\n      </div>\n      <div className={'d-flex welcome-widget flex-row justify-content-end align-items-center'} style={{backgroundColor: 'transparent', border: 'none', padding: 0,}}>\n        <div className={'date-of-joining-widget d-flex flex-column justify-content-center'}>\n            <p className={'sub-label'}>Date of joining the Platform :</p>\n            <p className={'label'}>{profileInfo?.dateOfJoining ? moment(profileInfo?.dateOfJoining).format('DD-MM-YYYY') : '-'}</p>\n        </div>\n      </div>\n      <BasicForm profileData={profile} onChange={updateProfileData} />\n      <AddressAndContactForm\n        profileData={profile}\n        onChange={updateProfileData}\n        checkStatus={checkStatus}\n        toggleCorporateHeadQuarters={toggleCorporateHeadQuarters}\n      />\n      <ProfileForm\n        profileData={profile}\n        onChange={updateProfileData}\n        tempAttachment={attachment}\n        fileHandler={fileHandler}\n      />\n      <AccountSettingsForm profileData={profile} onChange={updateProfileData} />\n      <div className=\"d-grp\">\n        <div className=\"custom-control custom-checkbox\">\n          <input\n            onChange={() => {\n              setIsTermsAndConditionsChecked(!isTermsAndConditionsChecked);\n            }}\n            checked={isTermsAndConditionsChecked}\n            type=\"checkbox\"\n            className=\"custom-control-input\"\n            id=\"accept\"\n            required\n          />\n          <label className=\"custom-control-label\" htmlFor=\"accept\">\n            I hereby accept the Terms & Conditions of the Platform\n          </label>\n        </div>\n      </div>\n\n      <div className=\"w-100 text-center\">\n        <button\n          type=\"button\"\n          onClick={saveProfile}\n          disabled={!isFormValid()}\n          className=\"btn\"\n        >\n          Save\n        </button>\n      </div>\n      <CustomToastModal\n        onClose={() => {\n          setShowModal(false);\n        }}\n        show={showModal}\n        iconNameClass={\"fa-building\"}\n        message={\"Your profile has been updated successfully\"}\n      />\n    </div>\n  );\n};\n\nexport default Profile;\n"],"sourceRoot":""}