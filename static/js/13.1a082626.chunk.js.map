{"version":3,"sources":["Store/Actions/SagaActions/HiringSagaAction.js","Store/Actions/SagaActions/SubscriptionSagaAction.js","Portals/PortalHiringModal.js","Pages/Dashboard/Subscribe/University/UniversitySendMail.js","Components/Dashboard/SubscribeCmp/UniversityCmp/UniversityStudentsCmp.js","Pages/Dashboard/Subscribe/University/UniversityStudents/UniversityStudents.js"],"names":["HiringSagaAction","payload","type","ACTION_GET_CORPORATE_HIRING_REQUEST","AddHiringSagaAction","ACTION_POST_CORPORATE_HIRING_REQUEST","actionPostPublishCorporateHiringRequest","ACTION_POST_PUBLISH_CORPORATE_HIRING_REQUEST","actionGetCorporateHiringByIdRequest","ACTION_GET_CORPORATE_HIRING_BYID_REQUEST","SubscribeSearchSagaAction","ACTION_POST_CORPORATE_SUBSCRIBESEARCH_REQUEST","GetUniversityInfoSagaAction","ACTION_GET_CORPORATE_SUBSCRIBE_UNIVERSITY_REQUEST","GetUniversityHistoryInfoSagaAction","ACTION_GET_CORPORATE_HISTORY_UNIVERSITY_REQUEST","GetSubscribeTokensSagaAction","ACTION_GET_CORPORATE_SUBSCRIBE_TOKENS_REQUEST","SubscribeUnvInfoSagaAction","ACTION_GET_CORPORATE_SUBSCRIBE_UNV_INFO_REQUEST","actionSagaGetCorporateUniversitySubscriptionRequest","ACTION_GET_CORPORATE_UNIVERSITY_SUBSCRIPTION_HISTORY_REQUEST","SendMailSagaAction","ACTION_POST_CORPORATE_SENDMAIL_TO_UNIVERSITY_REQUEST","SearchStundentSagaAction","ACTION_POST_CORPORATE_STUDENT_SEARCH_REQUEST","actionSagaGetCorporateSingleSubscriptionRequest","ACTION_GET_CORPORATE_SINGLE_SUBSCRIPTION_REQUEST","PortalHiringModal","props","element","document","getElementById","createPortal","children","UniversitySendMail","useState","emailTo","emailSubject","emailBody","sendMailObj","setSendMailObj","useEffect","prevState","handleChange","event","target","name","value","className","onSubmit","preventDefault","trim","model","sendMail","toast","warning","style","fontSize","padding","universityName","onClick","closeSendModal","data-dismiss","defaultValue","email","required","readOnly","onChange","rows","UniversityStudentsCmp","goBack","src","alt","universityInfoList","universityHQAddressCity","universityId","ranking","rank","accredations","issuingAuthority","yearOfEstablishment","programsOffered","studentSearchList","studentsData","searchSubmit","flex","closeMenuOnSelect","label","isMulti","options","hiringCriteriaOptions","zIndex","programCatalog","months","branchCatalog","skillsList","scope","colSpan","id","htmlFor","data-toggle","data-target","length","map","item","i","studentID","studentName","programID","branchName","avgPercentage","$","window","UniversityStudents","setUniversityInfoList","hiringCriteria","setHiringCriteria","lookUpData","setLookUpData","hiringCriteriaID","branchID","monthOfHiring","skills","searchObj","setSearchObj","setStudentSearchList","campusDriveID","isSendOpen","setIsSendOpen","dispatch","useDispatch","match","params","subscriptionID","localStorage","getItem","queryParam","location","search","on","e","stopPropagation","apiPayloadRequest","callback","getUniversityList","getHiring","getLookupData","split","getSubscriptionDetails","getStudentSearchList","getAllHirings","data","actionGetDependencyLookUpsSagaAction","dropdowns","sendMailResp","success","message","modal","hiringCriteriaName","programCode","programName","skillCode","skillName","monthsList","history","selectedVal","console","log","universityID","emailFrom"],"mappings":"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","file":"static/js/13.1a082626.chunk.js","sourcesContent":["import { ACTION_GET_CORPORATE_HIRING_REQUEST, ACTION_POST_CORPORATE_HIRING_REQUEST, ACTION_POST_PUBLISH_CORPORATE_HIRING_REQUEST, ACTION_GET_CORPORATE_HIRING_BYID_REQUEST } from \"./SagaActionTypes\"\n\nexport const HiringSagaAction = (payload) => {\n    return {\n        type: ACTION_GET_CORPORATE_HIRING_REQUEST,\n        payload: payload\n    }\n};\n\nexport const AddHiringSagaAction = (payload) => {\n    return {\n        type: ACTION_POST_CORPORATE_HIRING_REQUEST,\n        payload: payload\n    }\n};\n\nexport const actionPostPublishCorporateHiringRequest = (payload) => {\n    return {\n        type: ACTION_POST_PUBLISH_CORPORATE_HIRING_REQUEST,\n        payload: payload\n    }\n}\n\nexport const actionGetCorporateHiringByIdRequest = (payload) => {\n    return {\n        type: ACTION_GET_CORPORATE_HIRING_BYID_REQUEST,\n        payload: payload\n    }\n}","import {\n    ACTION_GET_CORPORATE_HISTORY_UNIVERSITY_REQUEST,\n    ACTION_GET_CORPORATE_SUBSCRIBE_TOKENS_REQUEST,\n    ACTION_GET_CORPORATE_SUBSCRIBE_UNIVERSITY_REQUEST,\n    ACTION_GET_CORPORATE_SUBSCRIBE_UNV_INFO_REQUEST,\n    ACTION_POST_CORPORATE_SUBSCRIBESEARCH_REQUEST,\n    ACTION_GET_CORPORATE_UNIVERSITY_SUBSCRIPTION_HISTORY_REQUEST,\n    ACTION_POST_CORPORATE_SENDMAIL_TO_UNIVERSITY_REQUEST,\n    ACTION_POST_CORPORATE_STUDENT_SEARCH_REQUEST,\n    ACTION_GET_CORPORATE_SINGLE_SUBSCRIPTION_REQUEST\n} from \"./SagaActionTypes\";\n\n\nexport const SubscribeSearchSagaAction = (payload) => {\n    return {\n        type: ACTION_POST_CORPORATE_SUBSCRIBESEARCH_REQUEST,\n        payload: payload\n    }\n}\n\nexport const GetUniversityInfoSagaAction = (payload) => {\n    return {\n        type: ACTION_GET_CORPORATE_SUBSCRIBE_UNIVERSITY_REQUEST,\n        payload: payload\n    }\n}\n\nexport const GetUniversityHistoryInfoSagaAction = (payload) => {\n    return {\n        type: ACTION_GET_CORPORATE_HISTORY_UNIVERSITY_REQUEST,\n        payload: payload\n    }\n}\n\nexport const GetSubscribeTokensSagaAction = (payload) => {\n    return {\n        type: ACTION_GET_CORPORATE_SUBSCRIBE_TOKENS_REQUEST,\n        payload: payload\n    }\n}\n\nexport const SubscribeUnvInfoSagaAction = (payload) => {\n    return {\n        type: ACTION_GET_CORPORATE_SUBSCRIBE_UNV_INFO_REQUEST,\n        payload: payload\n    }\n}\n\nexport const actionSagaGetCorporateUniversitySubscriptionRequest = (payload) => {\n    return {\n        type: ACTION_GET_CORPORATE_UNIVERSITY_SUBSCRIPTION_HISTORY_REQUEST,\n        payload: payload\n    }\n}\n\nexport const SendMailSagaAction = (payload) => {\n    return {\n        type: ACTION_POST_CORPORATE_SENDMAIL_TO_UNIVERSITY_REQUEST,\n        payload: payload\n    }\n}\n\nexport const SearchStundentSagaAction = (payload) => {\n    return {\n        type: ACTION_POST_CORPORATE_STUDENT_SEARCH_REQUEST,\n        payload: payload\n    }\n}\n\nexport const actionSagaGetCorporateSingleSubscriptionRequest = (payload) => {\n    return {\n        type: ACTION_GET_CORPORATE_SINGLE_SUBSCRIPTION_REQUEST,\n        payload: payload\n    }\n}","import { createPortal } from \"react-dom\";\n\nconst PortalHiringModal = (props) => {\n\n    const element = document.getElementById('modal');\n    return createPortal(props.children, element);\n};\n\nexport default PortalHiringModal;","import React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\n\nconst UniversitySendMail = (props) => {\n  const [sendMailObj, setSendMailObj] = useState({\n    emailTo: '',\n    emailSubject: '',\n    emailBody: ''\n  });\n\n  useEffect(()=>{\n    if(props?.emailTo) {\n      setSendMailObj((prevState)=>({\n        ...prevState,\n        emailTo: props.emailTo\n      }))\n    }\n  }, [props?.emailTo])\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setSendMailObj(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  }\n\n  const sendMail = (event) => {\n    event.preventDefault();\n    const { emailTo, emailSubject, emailBody } = sendMailObj;\n    if (emailTo?.trim()!=='' && emailSubject?.trim()!=='' && emailBody?.trim()!=='') {\n      toast.warning('Please enter all input fields')\n      return;\n    }\n    const model = {\n      emailTo: emailTo,\n      emailSubject: emailSubject ? emailSubject : 'Campus Hiring Request',\n      emailBody: emailBody\n    };\n    props.sendMail(model)\n  }\n\n  return (\n    <div className={'mail-modal'}>\n      <form onSubmit={sendMail}>\n        <div className=\"modal-header d-block\">\n          <span className=\"modal-title\" style={{ fontSize: '1.1rem', padding: 6 }}>\n            New mail to {props.universityName} University requesting Campus\n          Placement Drive\n        </span>\n          <i\n            className=\"far fa-times-circle close-icon\"\n            onClick={props.closeSendModal}\n            data-dismiss=\"modal\"\n          />\n        </div>\n        <div className=\"modal-body\">\n          <div className=\"card\">\n            <span className=\"control-label\" style={{ fontSize: '1rem' }}>From&nbsp;:</span>\n            <input\n              type=\"email\"\n              name=\"emailFrom\"\n              style={{ fontSize: '1rem' }}\n              defaultValue={props.email}\n              // onChange={handleChange}\n              required\n              readOnly\n            />\n          </div>\n          <div className=\"card\">\n            <span className=\"control-label\" style={{ fontSize: '1rem' }}>To&nbsp;:</span>\n            <input\n              type=\"email\"\n              name=\"emailTo\"\n              style={{ fontSize: '1rem' }}\n              defaultValue={props.emailTo}\n              onChange={handleChange}\n              required\n            />\n          </div>\n          <div className=\"card\">\n            <span className=\"control-label\" style={{ fontSize: '1rem' }}>Subject&nbsp;:</span>\n            <input\n              type=\"text\"\n              name=\"emailSubject\"\n              style={{ fontSize: '1rem' }}\n              defaultValue={props.emailSubject}\n              onChange={handleChange}\n              required\n            />\n          </div>\n          <div className=\"card b-none\">\n            <textarea\n              name=\"emailBody\"\n              defaultValue={props.emailBody}\n              style={{ fontSize: '.850rem' }}\n              onChange={handleChange}\n              rows={5}\n            />\n          </div>\n          <div className=\"card \">\n            <div className=\"attachment\">\n              <i className=\"fas fa-paperclip\" />\n              <span>Selected Students list for Campus Hiring (Attachment)</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"modal-footer\">\n          <button type=\"submit\" className=\"btn3 \">\n            Send\n        </button>\n        &nbsp;\n        <button\n            type=\"button\"\n            onClick={props.closeSendModal}\n            className=\"btn3 \"\n            data-dismiss=\"modal\"\n          >\n            Cancel\n        </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default UniversitySendMail;\n","import React from 'react';\nimport Select from 'react-select';\n\nconst UniversityStudentsCmp = (props) => {\n    return (\n        <>\n            <div className=\"row single-university-section\">\n                <div className=\"header d-flex align-items-center w-full\">\n                    <div className=\"backBtn d-flex justify-content-start align-items-center\">\n                        <i className=\"fas fa-chevron-left\" />\n                        <p className=\"btnLabel\" onClick={props.goBack}>Go Back</p>\n                    </div>\n                    <div className=\"title-container\">\n                        <p className=\"title\">Student List</p>\n                    </div>\n                </div>\n                <div className=\"university-info-widget w-full\">\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"university-info-plain-stripe\" />\n                        <div className=\"univ-info d-flex justify-content-between align-items-start\">\n                            <div className=\"univ-header d-flex justify-content-center align-items-center\">\n                                <div className=\"univ-logo\">\n                                    <img src=\"./images/univ.png\" className=\"img img-fluid univ-icon\" alt=\"univ-logo\" />\n                                </div>\n                                <div className=\"univ-header-name d-flex flex-column align-items-start\">\n                                    <p className=\"title\">{props.universityInfoList?.universityName}</p>\n                                    <p className=\"sub-title\"><i className=\"fas fa-map-marker-alt\" /> {props.universityInfoList?.universityHQAddressCity}</p>\n                                </div>\n                            </div>\n                            <div className=\"univ-verticle-border\" />\n                            <div className=\"d-flex flex-column align-items-center univ-info-widget\">\n                                <div className=\"univ-info-data-list d-flex justify-content-between align-items-start w-full\">\n                                    <div className=\"univ-info-data d-flex flex-column align-items-center\">\n                                        <p className=\"title\">University ID</p>\n                                        <p className=\"sub-title\">{props.universityId}</p>\n                                    </div>\n                                    <div className=\"univ-verticle-border-3\" />\n                                    <div className=\"univ-info-data d-flex flex-column align-items-center\">\n                                        <p className=\"title\">NIRF Ranking</p>\n                                        <p className=\"sub-title\">{props.universityInfoList?.ranking?.rank}</p>\n                                    </div>\n                                    <div className=\"univ-verticle-border-3\" />\n                                    <div className=\"univ-info-data d-flex flex-column align-items-center\">\n                                        <p className=\"title\">Accreditions</p>\n                                        <p className=\"sub-title\">{props.universityInfoList?.accredations?.issuingAuthority}</p>\n                                    </div>\n                                    <div className=\"univ-verticle-border-3\" />\n                                    <div className=\"univ-info-data d-flex flex-column align-items-center\">\n                                        <p className=\"title\">Year Of Establishment</p>\n                                        <p className=\"sub-title\">{props.universityInfoList?.yearOfEstablishment}</p>\n                                    </div>\n                                </div>\n                                <div className=\"univ-course-stripe d-flex justify-content-start align-items-center w-full\">\n                                    <p className=\"title\">Programs Offered</p>\n                                    <p className=\"sub-title\">{props.universityInfoList?.programsOffered}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"filter-heading w-full\">\n                    <p className=\"label\">Specify your search criteria to display the students list</p>\n                </div>\n                {!props.studentSearchList?.studentsData ?\n                    <form onSubmit={props.searchSubmit} className=\"search-filter-container d-flex justify-content-between align-items-center w-full\">\n                        <div className=\"modal-grp\" style={{ flex: 1 }}>\n                            <label className=\"text-white small mb-0\"> Hiring Criteria</label>\n                            <Select\n                                closeMenuOnSelect={false}\n                                name=\"hiringCriteriaID\"\n                                label=\"By Hiring Criteria\"\n                                isMulti\n                                options={props.hiringCriteriaOptions}\n                                onChange={props.handleChange}\n                            />\n                        </div>\n                        {/* <div className=\"dropdown dropdown-col\">\n                            <button className=\"dropdown-select dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                By Hiring Criteria\n                        </button>\n                            <ul className=\"dropdown-menu dropdown-menu-form\">\n                                {props.hiringCriteria && props.hiringCriteria?.length >= 0\n                                    ? props.hiringCriteria?.map((item, i) =>\n                                        <div className=\"custom-control custom-checkbox\" key={i}>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"custom-control-input\"\n                                                name=\"hiringCriteriaID\"\n                                                onChange={props.handleChange}\n                                                value={item.hiringCriteriaID}\n                                                id={item.hiringCriteriaID} />\n                                            <label className=\"custom-control-label\" htmlFor={item.hiringCriteriaID}>{item.hiringCriteriaName}</label>\n                                        </div>)\n                                    : (null)\n                                }\n                            </ul>\n                        </div> */}\n                        <p className=\"dividerWord\">Or</p>\n                        <div className=\"item four-filters d-flex flex-column justify-content-between align-content-center w-full\">\n                            <div className=\"d-flex justify-content-between align-content-center search-filter-grid\">\n                                {/* <div className=\"dropdown dropdown-col\">\n                                    <button className=\"dropdown-select dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        Program\n                                </button>\n                                    <ul className=\"dropdown-menu dropdown-menu-form\">\n                                        {props.lookUpData && props.lookUpData?.departments?.length >= 0\n                                            ? props.lookUpData?.departments.map((item, i) =>\n                                                <div className=\"custom-control custom-checkbox\" key={i}>\n                                                    <input\n                                                        type=\"checkbox\"\n                                                        className=\"custom-control-input\"\n                                                        name=\"programID\"\n                                                        onChange={props.handleChange}\n                                                        value={item.departmentID}\n                                                        id={item.departmentID} />\n                                                    <label className=\"custom-control-label\" htmlFor={item.departmentID}>{item.ProgramID}</label>\n                                                </div>)\n                                            : (null)\n                                        }\n                                    </ul>\n                                </div> */}\n                                {/* <div className=\"dropdown dropdown-col\">\n                                    <button className=\"dropdown-select dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton2\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        By Tentative Passing month\n                                </button>\n                                    <ul className=\"dropdown-menu dropdown-menu-form\">\n                                        {props.months && props.months?.length >= 0\n                                            ? props.months?.map((item, i) =>\n                                                <div className=\"custom-control custom-checkbox\" key={i}>\n                                                    <input\n                                                        type=\"checkbox\"\n                                                        className=\"custom-control-input\"\n                                                        name=\"monthOfHiring\"\n                                                        onChange={props.handleChange}\n                                                        value={item}\n                                                        id={item} />\n                                                    <label className=\"custom-control-label\" htmlFor={item}>{item}</label>\n                                                </div>)\n                                            : (null)\n                                        }\n                                    </ul>\n                                </div> */}\n                                <div className=\"modal-grp mb-2 w-50\" style={{ flex: 1, zIndex: 999 }}>\n                                    <label className=\"text-white small mb-0\"> Program</label>\n                                    <Select\n                                        closeMenuOnSelect={false}\n                                        label=\"Program\"\n                                        name=\"programID\"\n                                        isMulti\n                                        options={props.programCatalog}\n                                        onChange={props.handleChange}\n                                    />\n                                </div>\n                                <div className=\"modal-grp mb-2 w-50\" style={{ flex: 1, zIndex: 999 }}>\n                                    <label className=\"text-white small mb-0\"> By Tentative Passing month</label>\n                                    <Select\n                                        closeMenuOnSelect={false}\n                                        label=\"By Tentative Passing month\"\n                                        name=\"monthOfHiring\"\n                                        isMulti\n                                        options={props.months}\n                                        onChange={props.handleChange}\n                                    />\n                                </div>\n\n                            </div>\n                            <div className=\"d-flex justify-content-between align-content-center search-filter-grid\">\n\n                                {/* <div className=\"dropdown dropdown-col\">\n                                    <button className=\"dropdown-select dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton3\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        By Branch\n                                </button>\n                                    <ul className=\"dropdown-menu dropdown-menu-form\">\n                                        {props.lookUpData && props.lookUpData?.programs?.length >= 0\n                                            ? props.lookUpData?.programs?.map((item, i) =>\n                                                <div className=\"custom-control custom-checkbox\" key={i}>\n                                                    <input\n                                                        type=\"checkbox\"\n                                                        className=\"custom-control-input\"\n                                                        name=\"branchID\"\n                                                        onChange={props.handleChange}\n                                                        value={item.ProgramID}\n                                                        id={item.ProgramID} />\n                                                    <label className=\"custom-control-label\" htmlFor={item.ProgramID}>{item.program}</label>\n                                                </div>)\n                                            : (null)\n                                        }\n                                    </ul>\n                                </div> */}\n\n                                <div className=\"modal-grp mb-2 w-50\" style={{ flex: 1 }}>\n                                    <label className=\"text-white small mb-0\">By Branch</label>\n                                    <Select\n                                        closeMenuOnSelect={false}\n                                        label=\"By Branch\"\n                                        name=\"branchID\"\n                                        isMulti\n                                        options={props.branchCatalog}\n                                        onChange={props.handleChange}\n                                    />\n                                </div>\n                                <div className=\"modal-grp mb-2 w-50\" style={{ flex: 1 }}>\n                                    <label className=\"text-white small mb-0\">By Skills</label>\n                                    <Select\n                                        closeMenuOnSelect={false}\n                                        label=\"By Skills\"\n                                        name=\"skills\"\n                                        isMulti\n                                        onChange={props.handleChange}\n                                        options={props.skillsList}\n                                    />\n                                </div>\n                                {/* <div className=\"dropdown dropdown-col\">\n                                    <button className=\"dropdown-select dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton4\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        By Skills\n                                </button>\n                                    <ul className=\"dropdown-menu dropdown-menu-form\">\n                                        {props.lookUpData && props.lookUpData?.skills?.length >= 0\n                                            ? props.lookUpData?.skills?.map((item, i) =>\n                                                <div className=\"custom-control custom-checkbox\" key={i}>\n                                                    <input\n                                                        type=\"checkbox\"\n                                                        className=\"custom-control-input\"\n                                                        name=\"skills\"\n                                                        onChange={props.handleChange}\n                                                        value={item.skillCode}\n                                                        id={item.skillCode} />\n                                                    <label className=\"custom-control-label\" htmlFor={item.SkillID}>{item.skillName}</label>\n                                                </div>)\n                                            : (null)\n                                        }\n                                    </ul>\n                                </div> */}\n                            </div>\n                        </div>\n                        <button type=\"submit\" className=\"item students-list-btn\">Get the Students List</button>\n                    </form>\n                    : (null)\n                }\n                {props.studentSearchList &&\n                    <div className=\"table-responsive mb-4 mt-4\">\n                        <table className=\"table table-data mb-0\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\" colSpan=\"2\">\n                                        <div className=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" className=\"custom-control-input\" id=\"all\" />\n                                            <label className=\"custom-control-label mt-1\" htmlFor=\"all\"> Select all\n                                        </label>\n                                        </div>\n                                    </th>\n                                    <th scope=\"col\" colSpan=\"4\">\n                                        <button className=\"btn3 btn-lightgreen\" data-toggle=\"modal\" data-target=\"#mailModal\">Request for campus drive</button>\n                                        {/* <button className=\"btn3 btn-lightgreen\" data-toggle=\"modal\" data-target=\"#accept\">Delete</button> */}\n                                    </th>\n                                </tr>\n                                <tr>\n                                    <th className=\"bg-white\" scope=\"col\"></th>\n                                    <th className=\"bg-white\" scope=\"col\">Roll No.</th>\n                                    <th className=\"bg-white\" scope=\"col\">Name of the student</th>\n                                    <th className=\"bg-white\" scope=\"col\">Program</th>\n                                    <th className=\"bg-white\" scope=\"col\">Branch</th>\n                                    <th className=\"bg-white\" scope=\"col\">Aggregate CGPA</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {props.studentSearchList?.studentsData?.length >= 0\n                                    ? props.studentSearchList?.studentsData?.map((item, i) => <tr key={i}>\n                                        <td>\n                                            <div className=\"custom-control custom-checkbox\">\n                                                <input type=\"checkbox\" className=\"custom-control-input\" id={item.studentID + i} />\n                                                <label className=\"custom-control-label mt-1\" htmlFor={item.studentID + i}>\n                                                </label>\n                                            </div>\n                                        </td>\n                                        <td>{item.studentID}</td>\n                                        <td>{item.studentName}</td>\n                                        <td>{item.programID}</td>\n                                        <td>{item.branchName}</td>\n                                        <td>{item.avgPercentage}</td>\n                                    </tr>)\n                                    : <tr><td colSpan=\"6\" className=\"text-center\">No data</td></tr>\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n                }\n            </div>\n        </>\n    )\n}\n\nexport default UniversityStudentsCmp;\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport UniversityStudentsCmp from '../../../../../Components/Dashboard/SubscribeCmp/UniversityCmp/UniversityStudentsCmp';\nimport PortalHiringModal from '../../../../../Portals/PortalHiringModal';\nimport { actionGetDependencyLookUpsSagaAction } from '../../../../../Store/Actions/SagaActions/CommonSagaActions';\nimport { HiringSagaAction } from '../../../../../Store/Actions/SagaActions/HiringSagaAction';\nimport {\n    actionSagaGetCorporateSingleSubscriptionRequest,\n    GetUniversityInfoSagaAction,\n    SearchStundentSagaAction,\n    SendMailSagaAction\n} from '../../../../../Store/Actions/SagaActions/SubscriptionSagaAction';\nimport UniversitySendMail from '../UniversitySendMail';\nconst $ = window.$;\n\nconst UniversityStudents = (props) => {\n\n    const [universityInfoList, setUniversityInfoList] = useState({});\n    const [hiringCriteria, setHiringCriteria] = useState([]);\n    const [isInfoModal, setisInfoModal] = useState(false);\n    const [lookUpData, setLookUpData] = useState([]);\n    const [searchObj, setSearchObj] = useState({\n        hiringCriteriaID: [],\n        programID: [],\n        branchID: [],\n        monthOfHiring: [],\n        skills: []\n    });\n    const [studentSearchList, setStudentSearchList] = useState(null);\n    const [campusDriveID, setCampusDriveID] = useState('');\n    const [isSendOpen, setIsSendOpen] = useState(false);\n    const [sendMailObj, setSendMailObj] = useState({\n        emailTo: '',\n        emailSubject: '',\n        emailBody: ''\n    });\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n\n\n\n    const dispatch = useDispatch();\n    const universityId = props.match?.params?.id;\n    const subscriptionID = localStorage.getItem('subscriptionID');\n    const email = localStorage.getItem('email');\n\n    useEffect(() => {\n        const queryParam = props.location.search;\n        $(document).on('click', '.dropdown-menu', function (e) {\n            e.stopPropagation();\n        });\n        dispatch(GetUniversityInfoSagaAction({ apiPayloadRequest: universityId, callback: getUniversityList }));\n        getHiring();\n        getLookupData();\n        if (queryParam) {\n            const subscriptionID = queryParam?.split('=');\n            getSubscriptionDetails(subscriptionID[1]);\n        }\n        return () => {\n            // localStorage.removeItem('subscriptionID');\n        }\n    }, []);\n\n    const getSubscriptionDetails = (subscriptionID) => {\n        dispatch(actionSagaGetCorporateSingleSubscriptionRequest({ apiPayloadRequest: { type: 'STUDENTS_LIST', id: subscriptionID }, callback: getStudentSearchList }))\n    }\n\n    const getHiring = () => {\n        dispatch(HiringSagaAction({ callback: getAllHirings }));\n    }\n    const getAllHirings = (data) => {\n        setHiringCriteria(data);\n    }\n\n    const getLookupData = () => {\n        dispatch(actionGetDependencyLookUpsSagaAction({\n            apiPayloadRequest: ['programCatalog', 'branchCatalog', 'skills'],\n            callback: dropdowns\n        }));\n    }\n    const dropdowns = (data) => {\n        setLookUpData(data);\n    }\n\n\n    const getUniversityList = (data) => {\n        setUniversityInfoList(data);\n    }\n\n    const goBack = () => {\n        props.history.goBack();\n    }\n\n    const closeModal = () => {\n        setisInfoModal(false);\n    }\n\n    const handleChange = (selectedVal, { name }) => {\n        console.log(selectedVal, name);\n        // const { name, value, checked } = event.target;\n        // let copyObj = [...searchObj[name]]\n        // if (checked) {\n        //     setSearchObj(prevState => ({\n        //         ...prevState,\n        //         [name]: copyObj?.concat(value)\n        //     }))\n        // } else {\n        //     let updatedValue = copyObj.filter(item => item !== value);\n        //     setSearchObj(prevState => ({\n        //         ...prevState,\n        //         [name]: updatedValue\n        //     }))\n        // }\n        setSearchObj(prevState => ({\n            ...prevState,\n            [name]: selectedVal\n        }));\n\n    }\n\n    const searchSubmit = (event) => {\n        event.preventDefault();\n        const { hiringCriteriaID, programID, branchID, monthOfHiring, skills } = searchObj;\n        const model = {\n            universityID: universityId,\n            subscriptionID: subscriptionID,\n            hiringCriteriaID: hiringCriteriaID?.map(item => item.value),\n            programID: programID?.map(item => item.value),\n            branchID: branchID?.map(item => item.value),\n            monthOfHiring: monthOfHiring?.map(item => item.value),\n            skills: skills?.map(item => item.value)\n        };\n        dispatch(SearchStundentSagaAction({ apiPayloadRequest: model, callback: getStudentSearchList }));\n    }\n\n    const getStudentSearchList = (data) => {\n        setStudentSearchList(data);\n    }\n\n    const closeSendModal = () => {\n        setIsSendOpen(false);\n    }\n\n    const handleChangeInput = (event) => {\n        const { name, value } = event.target;\n        setSendMailObj(prevState => ({\n            ...prevState,\n            [name]: value\n        }));\n    }\n\n    const sendMail = (event) => {\n        event.preventDefault();\n        const { emailTo, emailSubject, emailBody } = sendMailObj;\n        if (!emailTo && !emailSubject && !emailBody) {\n            toast.warning('Please enter all inout fields')\n            return;\n        }\n        const model = {\n            campusDriveID: campusDriveID,\n            emailFrom: email,\n            emailTo: 'jaswanth@gmail.com',\n            emailSubject: emailSubject ? emailSubject : 'Campus Hiring Request',\n            emailBody: emailBody\n        };\n        dispatch(SendMailSagaAction({ apiPayloadRequest: model, callback: sendMailResp }));\n    }\n    const sendMailResp = (data) => {\n        toast.success(data?.message);\n        setIsSendOpen(false);\n        $(\"#mailSentSuccess\").modal(\"show\");\n    }\n\n    const hiringCriteriaOptions = hiringCriteria.map(item => ({ value: item.hiringCriteriaID, label: item.hiringCriteriaName }));\n    const programCatalog = lookUpData?.programCatalog?.map(item => ({ value: item.programCode, label: item.programName }));\n    const branchCatalog = lookUpData?.branchCatalog?.map(item => ({ value: item.branchID, label: item.branchName }));\n    const skillsList = lookUpData?.skills?.map(item => ({ value: item.skillCode, label: item.skillName }))\n    const monthsList = months?.map((item, i) => ({ value: item, label: item }));\n\n    return (\n        <>\n            <UniversityStudentsCmp\n                hiringCriteriaOptions={hiringCriteriaOptions}\n                programCatalog={programCatalog}\n                branchCatalog={branchCatalog}\n                skillsList={skillsList}\n                // lookUpData={lookUpData}\n                months={monthsList}\n                universityId={universityId}\n                universityInfoList={universityInfoList}\n                studentSearchList={studentSearchList}\n                goBack={goBack}\n                handleChange={handleChange}\n                searchSubmit={searchSubmit}\n            />\n            {/* {isInfoModal &&\n                <PortalHiringModal>\n                    <ViewInfoModal\n                        closeModal={closeModal}\n                    />\n                </PortalHiringModal>\n            } */}\n            {/* SEND MAIL */}\n            {isSendOpen && <PortalHiringModal>\n                <UniversitySendMail\n                    email={email}\n                    emailTo={'jaswanth@gmail.com'}\n                    emailSubject={'Campus Hiring Request'}\n                    emailBody={''}\n                    universityName={universityInfoList?.universityName}\n                    handleChange={handleChangeInput}\n                    closeSendModal={closeSendModal}\n                    sendMail={sendMail}\n                />\n            </PortalHiringModal>}\n\n        </>\n    )\n}\n\nexport default UniversityStudents;\n"],"sourceRoot":""}