{"version":3,"sources":["Components/CustomModal.js","Portals/PortalModal.js","Store/Actions/SagaActions/HiringSagaAction.js","Portals/PortalHiringModal.js","Store/Actions/SagaActions/JobsSagaAction.js","Components/Dashboard/JobsCmp/JobsCmp.js","Components/Dashboard/JobsCmp/AddJobsCmp.js","Pages/Dashboard/CreateJob/Jobs/AddJobs.js","Pages/Dashboard/CreateJob/Jobs/JobDetailsModal.js","Pages/Dashboard/CreateJob/Jobs/Jobs.js"],"names":["$","window","CustomModal","props","useEffect","show","modal","remove","className","data-backdrop","data-keyboard","id","tabIndex","role","style","modalStyles","children","PortalModal","element","document","getElementById","createPortal","HiringSagaAction","payload","type","ACTION_GET_CORPORATE_HIRING_REQUEST","AddHiringSagaAction","ACTION_POST_CORPORATE_HIRING_REQUEST","actionPostPublishCorporateHiringRequest","ACTION_POST_PUBLISH_CORPORATE_HIRING_REQUEST","actionGetCorporateHiringByIdRequest","ACTION_GET_CORPORATE_HIRING_BYID_REQUEST","PortalHiringModal","GetJobsSagaAction","ACTION_GET_CORPORATE_JOBS_REQUEST","GetJobByIdSagaAction","ACTION_GET_CORPORATE_JOBS_BYID_REQUEST","AddJobsSagaAction","ACTION_POST_CORPORATE_JOBS_REQUEST","EditJobsSagaAction","ACTION_POST_CORPORATE_UPDATEJOBS_REQUEST","actionPostPublishCorporateJobsRequest","ACTION_POST_PUBLISH_CORPORATE_JOBS_REQUEST","JobsCmp","allJobs","length","map","item","i","jobName","name","hiringCriteriaName","defaultValue","status","value","disabled","creationDate","moment","format","height","width","fontSize","marginRight","borderRadius","onClick","detailsModal","jobID","handleClick","AddJobsCmp","onSubmit","handleSubmit","isEdit","onChange","handleChange","addJobs","placeholder","required","jobType","lookUpData","jobTypeCode","hiringCriteriaID","hiringCriteria","dateFormat","monthOfHiring","noOfPositions","min","location","closeMenuOnSelect","label","isMulti","handleChangeSkills","defaultSkills","options","skillsList","salaryMaxRange","AddJobs","useState","salaryMinRange","remarks","attachment","attachmentName","setAddJobs","addskills","setAddSkills","setDefaultSkills","isAddJobEnable","modelData","jobObj","find","defaultSkillsObj","JSON","parse","skillsInString","skillID","skillName","skills","skillCode","event","target","prevState","Date","toISOString","parseInt","hiringVal","split","selectedOption","preventDefault","model","skill","addJobsForm","toast","error","date","dt","toLocaleDateString","JobDetailsModal","closeDetailsModal","data-dismiss","aria-label","aria-hidden","readOnly","editJobsBtn","Jobs","setAllJobs","setHiringCriteria","setLookUpData","isDetailsModal","setIsDetailsModal","setModelData","setIsAddJobEnable","setIsEdit","dispatch","useDispatch","getHiring","getJobs","actionGetDependencyLookUpsSagaAction","apiPayloadRequest","callback","dropdowns","getAllHirings","getAllJobs","data","addJobsResp","getJobByIdResp","jobSkills","body","req","val","minWidth"],"mappings":"8HAEMA,EAAIC,OAAOD,EA8BFE,IA5BK,SAACC,GAWnB,OAVAC,qBAAU,YACR,OAAID,QAAJ,IAAIA,OAAJ,EAAIA,EAAOE,MACTL,EAAE,gBAAgBM,MAAM,QAExBN,EAAE,gBAAgBM,MAAM,QAG1BN,EAAE,mBAAmBO,aAIhB,OAALJ,QAAK,IAALA,OAAA,EAAAA,EAAOE,OACL,cAAC,IAAD,UACE,qBAAKG,UAAU,4BAA4BC,gBAAc,SAASC,gBAAc,QAAQC,GAAI,cAAeC,UAAW,EAAtH,SACE,qBACEJ,UAAS,8CACTK,KAAK,WACLC,MAAK,sBAAMX,QAAN,IAAMA,OAAN,EAAMA,EAAOY,aAHpB,SAKE,qBAAKP,UAAU,gBAAf,gBAAgCL,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAOa,mB,iCCxBnD,YAQeC,IANK,SAACd,GAEjB,IAAMe,EAAUC,SAASC,eAAe,eACxC,OAAOC,uBAAalB,EAAMa,SAAUE,K,iCCLxC,mJAEaI,EAAmB,SAACC,GAC7B,MAAO,CACHC,KAAMC,IACNF,QAASA,IAIJG,EAAsB,SAACH,GAChC,MAAO,CACHC,KAAMG,IACNJ,QAASA,IAIJK,EAA0C,SAACL,GACpD,MAAO,CACHC,KAAMK,IACNN,QAASA,IAIJO,EAAsC,SAACP,GAChD,MAAO,CACHC,KAAMO,IACNR,QAASA,K,iCC1BjB,YAQeS,IANW,SAAC7B,GAEvB,IAAMe,EAAUC,SAASC,eAAe,SACxC,OAAOC,uBAAalB,EAAMa,SAAUE,K,iCCLxC,qLAQae,EAAoB,SAACV,GAC9B,MAAO,CACHC,KAAMU,IACNX,QAASA,IAIJY,EAAuB,SAACZ,GACjC,MAAO,CACHC,KAAMY,IACNb,QAASA,IAIJc,EAAoB,SAACd,GAC9B,MAAO,CACHC,KAAMc,IACNf,QAASA,IAIJgB,EAAqB,SAAChB,GAC/B,MAAO,CACHC,KAAMgB,IACNjB,QAASA,IAIJkB,EAAwC,SAAClB,GAClD,MAAO,CACHC,KAAMkB,IACNnB,QAASA,K,2FCSFoB,EA9CC,SAACxC,GAAW,IAAD,IACvB,OACI,qBAAKK,UAAU,6BAAf,SACI,sBAAKA,UAAU,qEAAf,UACI,mBAAGA,UAAU,UAAb,0BACCL,EAAMyC,UAAW,UAAAzC,EAAMyC,eAAN,eAAeC,SAAU,EAA1C,UACK1C,EAAMyC,eADX,aACK,EAAeE,KAAI,SAACC,EAAMC,GAAP,OAAa,sBAAKxC,UAAU,mFAAf,UAC9B,sBAAKA,UAAU,yEAAf,UACI,qBAAKA,UAAU,0EAAf,SACI,mBAAGA,UAAU,kBAEjB,mBAAGA,UAAU,YAAb,SAA0BuC,EAAKE,UAC/B,wBAAQC,KAAK,GAAG1C,UAAU,4BAA1B,SACI,iCAASuC,EAAKI,uBAElB,yBAAQD,KAAK,SAASE,aAAcL,EAAKM,OAAQ7C,UAAU,4BAA3D,UACI,wBAAQ8C,MAAO,UAAWC,UAAQ,EAAlC,2BACA,wBAAQD,MAAM,OAAd,kBACA,wBAAQA,MAAM,QAAd,sBAEJ,oBAAG9C,UAAU,qBAAb,yBAAkD,OAAJuC,QAAI,IAAJA,OAAA,EAAAA,EAAMS,cAAeC,IAAM,OAACV,QAAD,IAACA,OAAD,EAACA,EAAMS,cAAcE,OAAO,cAAgB,SAEzH,qBAAKlD,UAAU,qBACf,qBAAKA,UAAU,4FAAf,SACI,yBACIA,UAAU,gEACVM,MAAO,CACH6C,OAAQ,OACRC,MAAO,QACPC,SAAU,UACVC,YAAa,OACbC,aAAc,OAElBC,QAAS,kBAAM7D,EAAM8D,aAAalB,EAAKmB,QAT3C,UAUI,wCACA,mBAAG1D,UAAU,gCA7BgHwC,MAgC/H,UACd,wBAAQxB,KAAK,SAASwC,QAAS7D,EAAMgE,YAAa3D,UAAU,MAA5D,gC,iECiOD4D,EAvQI,SAACjE,GAAW,IAAD,UAC1B,OACI,uBAAMK,UAAU,uBAAuB6D,SAAUlE,EAAMmE,aAAvD,UACI,qBAAK9D,UAAU,qEAAf,SACI,oBAAGA,UAAU,UAAb,UAAwBL,EAAMoE,OAAS,UAAY,WAAnD,YAEJ,qBAAK/D,UAAU,wBAAf,SACI,sBAAKA,UAAU,UAAf,UACI,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,QAAf,UACI,uBAAOgB,KAAK,OACR0B,KAAK,UACLsB,SAAUrE,EAAMsE,aAChBnB,MAAOnD,EAAMuE,QAAQzB,QACrBzC,UAAU,iBACVmE,YAAY,kBACZC,UAAQ,IACZ,uBAAOpE,UAAU,cAAjB,gCAEJ,sBAAKA,UAAU,QAAf,UACI,yBACI0C,KAAK,UACLsB,SAAUrE,EAAMsE,aAChBnB,MAAOnD,EAAMuE,QAAQG,QACrBrE,UAAU,iBACVoE,UAAQ,EALZ,UAMI,wBAAQtB,MAAO,GAAf,sBACCnD,EAAM2E,aAAc,UAAA3E,EAAM2E,kBAAN,mBAAkBD,eAAlB,eAA2BhC,SAAU,EAAzD,UACK1C,EAAM2E,kBADX,aACK,EAAkBD,QAAQ/B,KAAI,SAACC,EAAMC,GAAP,OAAa,wBAAgBM,MAAOP,EAAKgC,YAA5B,SAA0ChC,EAAK8B,SAAlC7B,MAAwD,QAM1H,uBAAOxC,UAAU,cAAjB,yBAEJ,sBAAKA,UAAU,QAAf,UACI,yBACI0C,KAAK,mBACLsB,SAAUrE,EAAMsE,aAEhBnB,MAAOnD,EAAMuE,QAAQM,iBAAkB,IAAI7E,EAAMuE,QAAQvB,mBACzD3C,UAAU,iBALd,UAOI,wBAAQ8C,MAAO,GAAf,oCACCnD,EAAM8E,iBAAkB,UAAA9E,EAAM8E,sBAAN,eAAsBpC,SAAU,EAAxD,UACK1C,EAAM8E,sBADX,aACK,EAAsBnC,KAAI,SAACC,EAAMC,GAAP,OAAa,wBAAgBM,MAAOP,EAAKiC,iBAAmB,IAAMjC,EAAKI,mBAA1D,SAA+EJ,EAAKI,oBAAvEH,MACnD,QAGX,uBAAOxC,UAAU,cAAjB,gCAEJ,sBAAKA,UAAU,QAAf,UACI,uBACIgB,KAAK,OACL0B,KAAK,gBACLsB,SAAUrE,EAAMsE,aAChBnB,MAAOnD,EAAM+E,WAAW/E,EAAMuE,QAAQS,eACtC3E,UAAU,iBACVmE,YAAY,iBACZC,UAAQ,IACZ,uBAAOpE,UAAU,cAAjB,kCAGR,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,QAAf,UACI,yBACI0C,KAAK,SACLsB,SAAUrE,EAAMsE,aAChBnB,MAAOnD,EAAMuE,QAAQrB,OACrB7C,UAAU,iBACVoE,UAAQ,EALZ,UAMI,wBAAQtB,MAAO,GAAf,2BACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,QAAd,sBAEJ,uBAAO9C,UAAU,cAAjB,uBAEJ,sBAAKA,UAAU,QAAf,UACI,uBACIgB,KAAK,SACL0B,KAAK,gBACLsB,SAAUrE,EAAMsE,aAChBnB,MAAOnD,EAAMuE,QAAQU,cACrB5E,UAAU,iBACV6E,IAAI,IACJV,YAAY,kBACZC,UAAQ,IACZ,uBAAOpE,UAAU,cAAjB,gCAEJ,sBAAKA,UAAU,QAAf,UACI,yBACI0C,KAAK,WACLsB,SAAUrE,EAAMsE,aAChBnB,MAAOnD,EAAMuE,QAAQY,SACrB9E,UAAU,iBACVoE,UAAQ,EALZ,UAMI,wBAAQtB,MAAO,GAAf,iCACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,SAAd,uBAEJ,uBAAO9C,UAAU,cAAjB,4BAGR,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,QAAf,SAYI,cAAC,IAAD,CACI+E,mBAAmB,EACnBC,MAAM,gBACNb,YAAa,kBACbc,SAAO,EACPjB,SAAUrE,EAAMuF,mBAChBtC,aAAcjD,EAAMwF,cACpBC,QAASzF,EAAM0F,iBAI3B,sBAAKrF,UAAU,SAAf,UACI,sBAAKA,UAAU,QAAf,UACI,uBACIgB,KAAK,SACL0B,KAAK,iBACLsB,SAAUrE,EAAMsE,aAChBrB,aAAcjD,EAAMuE,QAAQoB,eAC5BtF,UAAU,iBACV6E,IAAK,EACLV,YAAY,eACZC,UAAQ,IACZ,uBAAOpE,UAAU,cAAjB,2BAEJ,sBAAKA,UAAU,QAAf,UACI,uBACIgB,KAAK,SACL0B,KAAK,iBACLsB,SAAUrE,EAAMsE,aAChBrB,aAAcjD,EAAMuE,QAAQoB,eAC5BtF,UAAU,iBACV6E,IAAK,EACLV,YAAY,eACZC,UAAQ,IACZ,uBAAOpE,UAAU,cAAjB,mCAuGhB,sBAAKA,UAAU,wEAAf,UACI,yBAAQgB,KAAK,SAAShB,UAAU,UAAhC,UAA2CL,EAAMoE,OAAS,SAAW,OAArE,UACA,wBAAQ/C,KAAK,QAAQwC,QAAS7D,EAAMgE,YAAa3D,UAAU,UAA3D,2BC1FDuF,EAtKC,SAAC5F,GAAW,IAAD,QAiBO6F,mBAhBV,CAChB/C,QAAS,GACT4B,QAAS,GACTG,iBAAkB,GAClB7B,mBAAoB,GACpB8C,eAAgB,GAChBH,eAAgB,GAChBX,cAAe,GACfe,QAAS,GACTC,WAAY,m/DACZC,eAAgB,UAChB/C,OAAQ,GACR+B,cAAe,GACfE,SAAU,KAdS,mBAiBhBZ,EAjBgB,KAiBP2B,EAjBO,OAkBWL,mBAAS,IAlBpB,mBAkBhBM,EAlBgB,KAkBLC,EAlBK,OAmBmBP,mBAAS,IAnB5B,mBAmBhBL,EAnBgB,KAmBDa,EAnBC,KAqBvBpG,qBAAU,WACN,GAAID,EAAMsG,gBACFtG,EAAMoE,QAAUpE,EAAMuG,UAAW,CAAC,IAAD,gCAE3BC,EAAM,UAAGxG,EAAM2E,kBAAT,iBAAG,EAAkBD,eAArB,aAAG,EAA2B+B,MAAK,SAAA7D,GAAI,OAAIA,EAAK8B,UAAY1E,EAAMuG,UAAU7B,WAClFgC,EAAgB,UAAGC,KAAKC,MAAL,UAAW5G,EAAMuG,iBAAjB,aAAW,EAAiBM,uBAA/B,aAAG,EAA6ClE,KAAI,SAAAC,GAAI,MAAK,CAAEO,MAAOP,EAAKkE,QAASzB,MAAOzC,EAAKmE,cACtHV,EAAiBK,GAEjBR,EAAW,CACPpD,QAAO,UAAE9C,EAAMuG,iBAAR,aAAE,EAAiBzD,QAC1B4B,QAAO,OAAE8B,QAAF,IAAEA,OAAF,EAAEA,EAAQ5B,YACjBC,iBAAgB,UAAE7E,EAAMuG,iBAAR,aAAE,EAAiB1B,iBACnC7B,mBAAkB,UAAEhD,EAAMuG,iBAAR,aAAE,EAAiBvD,mBACrC8C,eAAc,UAAE9F,EAAMuG,iBAAR,aAAE,EAAiBT,eACjCH,eAAc,UAAE3F,EAAMuG,iBAAR,aAAE,EAAiBZ,eACjCX,cAAa,UAAEhF,EAAMuG,iBAAR,aAAE,EAAiBvB,cAChCe,QAAO,UAAE/F,EAAMuG,iBAAR,aAAE,EAAiBR,QAC1BC,WAAU,UAAEhG,EAAMuG,iBAAR,aAAE,EAAiBP,WAC7BC,eAAc,UAAEjG,EAAMuG,iBAAR,aAAE,EAAiBN,eACjC/C,OAAM,UAAElD,EAAMuG,iBAAR,aAAE,EAAiBrD,OACzBiC,SAAQ,UAAEnF,EAAMuG,iBAAR,aAAE,EAAiBpB,SAC3BF,cAAa,UAAEjF,EAAMuG,iBAAR,aAAE,EAAiBtB,mBAI7C,IAEH,IA8FMS,EAAU,UAAG1F,EAAM2E,kBAAT,iBAAG,EAAkBqC,cAArB,aAAG,EAA0BrE,KAAI,SAAAC,GAAI,MAAK,CAAEO,MAAOP,EAAKqE,UAAW5B,MAAOzC,EAAKmE,cAE/F,OACI,mCACI,cAAC,GAAD,GACIjC,eAAgB9E,EAAM8E,eACtBH,WAAY3E,EAAM2E,WAClBa,cAAeA,EACflB,aAtGS,SAAC4C,GAAW,IAAD,EACJA,EAAMC,OAAtBpE,EADoB,EACpBA,KAAMI,EADc,EACdA,MACd,GAAa,kBAATJ,EACAmD,GAAW,SAAAkB,GAAS,kCACbA,GADa,kBAEfrE,EAAO,IAAIsE,KAAKlE,GAAOmE,wBAEzB,GAAa,kBAATvE,EACPmD,GAAW,SAAAkB,GAAS,kCACbA,GADa,kBAEfrE,EAAOwE,SAASpE,aAElB,GAAa,qBAATJ,EAA6B,CACpC,IAAMyE,EAAYrE,EAAMsE,MAAM,KAC9BvB,GAAW,SAAAkB,GAAS,kCACbA,GADa,IAEhBvC,iBAAkB2C,EAAU,GAC5BxE,mBAAoBwE,EAAU,aAGlCtB,GAAW,SAAAkB,GAAS,kCACbA,GADa,kBAEfrE,EAAOI,QAiFRoC,mBA/De,SAACmC,GACxBtB,EAAasB,IA+DLhC,WAAYA,EACZvB,aAjCS,SAAC+C,GAElB,GADAA,EAAMS,iBACFpD,EAAQzB,SAAWyB,EAAQM,kBAAoBN,EAAQvB,oBACpDuB,EAAQG,SAAWH,EAAQS,eAAiBT,EAAQoB,gBAAkBpB,EAAQY,UAC9EZ,EAAQuB,gBAAkBvB,EAAQrB,QAAUiD,EAAUzD,QAAU,EAAG,CACtE,IAAMkF,EAAK,2BACJrD,GADI,IAEPyC,OAAM,OAAEb,QAAF,IAAEA,OAAF,EAAEA,EAAWxD,KAAI,SAAAC,GAAI,MAAK,CAAEkE,QAASlE,EAAKO,MAAO0E,MAAOjF,EAAKyC,YAGvErF,EAAM8H,YAAYF,QAElBG,IAAMC,MAAM,qCAsBRjD,WAlBO,SAACkD,GAChB,IACMC,EADE,IAAIb,KAAKY,GACJE,qBAAqBV,MAAM,KACxC,OAAOS,EAAG,GAAK,IAAMA,EAAG,GAAK,IAAMA,EAAG,IAgB9B/B,UAAWA,EACX5B,QAASA,EACTH,OAAQpE,EAAMoE,QAXlB,+BAYoBpE,EAAM8E,gBAZ1B,2BAagB9E,EAAM2E,YAbtB,4BAciB3E,EAAMgE,aAdvB,OC2BGoE,EA/KS,SAACpI,GAAW,IAAD,oBAM/B,OACI,sBAAKK,UAAW,oBAAhB,UACI,sBAAKA,UAAU,wCAAf,UACI,mBAAGA,UAAU,iBAAb,yBACA,wBAAQgB,KAAK,SAASwC,QAAS,kBAAM7D,EAAMqI,qBAAqBhI,UAAU,QAAQiI,eAAa,QAAQC,aAAW,QAAlH,SACI,sBAAMC,cAAY,OAAlB,uBAGR,sBAAKnI,UAAU,oCAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,oBAAIA,UAAU,sBAAd,mBAAqCL,EAAMuG,iBAA3C,aAAqC,EAAiBzD,UACtD,sBAAKzC,UAAU,UAAf,UACI,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,uBAAOA,UAAU,cAAjB,qBADJ,IACmD,qBAAKA,UAAU,mBAAf,mBAAmCL,EAAMuG,iBAAzC,aAAmC,EAAiBrD,cAG3G,qBAAK7C,UAAU,SAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,uBAAOA,UAAU,oBAAjB,qCASA,uBACIgB,KAAK,OACL0B,KAAK,GACLI,MAAK,UAAEnD,EAAMuG,iBAAR,aAAE,EAAiBvD,mBACxB3C,UAAU,8BACVoI,UAAQ,EACRrF,UAAQ,EACRqB,UAAQ,YAIxB,sBAAKpE,UAAU,UAAf,UACI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,uBAAOA,UAAU,cAAjB,wCACA,uBACIgB,KAAK,OACL0B,KAAK,GACLI,MArDrB,SAAC8E,GAChB,IACMC,EADE,IAAIb,KAAKY,GACJE,qBAAqBV,MAAM,KACxC,OAAOS,EAAG,GAAK,IAAMA,EAAG,GAAK,IAAMA,EAAG,GAkDKnD,CAAU,UAAC/E,EAAMuG,iBAAP,aAAC,EAAiBvB,eACnC3E,UAAU,iBACVoE,UAAQ,SAGpB,qBAAKpE,UAAU,WAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,uBAAOA,UAAU,cAAjB,+BACA,uBACIgB,KAAK,SACL0B,KAAK,GACLI,MAAK,UAAEnD,EAAMuG,iBAAR,aAAE,EAAiBtB,cACxB5E,UAAU,iBACVoE,UAAQ,SAGpB,qBAAKpE,UAAU,WAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,uBAAOA,UAAU,cAAjB,uBACA,uBACIgB,KAAK,OACL0B,KAAK,GACLI,MAAK,UAAEnD,EAAMuG,iBAAR,aAAE,EAAiBpB,SACxB9E,UAAU,iBACVoE,UAAQ,YAIxB,qBAAKpE,UAAU,UAAf,SACI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,uBAAOA,UAAU,cAAjB,2BACA,sBAAKA,UAAU,yBAAf,UACI,uBACIgB,KAAK,SACL0B,KAAK,GACLI,MAAK,UAAEnD,EAAMuG,iBAAR,aAAE,EAAiBT,eACxBzF,UAAU,iBACVoE,UAAQ,IACZ,uBAAOpE,UAAU,mBAAjB,gBACA,uBACIgB,KAAK,SACL0B,KAAK,GACLI,MAAK,UAAEnD,EAAMuG,iBAAR,aAAE,EAAiBZ,eACxBtF,UAAU,iBACVoE,UAAQ,iBAMhC,qBAAKpE,UAAU,aAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,uBAAOA,UAAU,cAAjB,qBACA,oBAAIA,UAAU,kBAAd,SACKL,EAAMgH,SAAU,UAAAhH,EAAMgH,cAAN,eAActE,SAAU,EAAxC,UACK1C,EAAMgH,cADX,aACK,EAAcrE,KAAI,SAACC,EAAMC,GAAP,OAAa,6BAAaD,EAAKmE,WAATlE,MACvC,kBAwD3B,qBAAKxC,UAAU,wEAAf,SACI,wBAAQgB,KAAK,SAASiH,eAAa,QAAQzE,QAAS7D,EAAM0I,YAAarI,UAAU,cAAjF,+B,SClCLsI,UA7HF,WAAO,IAAD,EAEe9C,mBAAS,IAFxB,mBAERpD,EAFQ,KAECmG,EAFD,OAG6B/C,mBAAS,IAHtC,mBAGRf,EAHQ,KAGQ+D,EAHR,OAIqBhD,mBAAS,IAJ9B,mBAIRlB,EAJQ,KAIImE,EAJJ,OAK6BjD,oBAAS,GALtC,mBAKRkD,EALQ,KAKQC,EALR,OAMmBnD,mBAAS,IAN5B,mBAMRU,EANQ,KAMG0C,EANH,OAO6BpD,oBAAS,GAPtC,mBAORS,EAPQ,KAOQ4C,EAPR,OAQarD,oBAAS,GARtB,mBAQRzB,EARQ,KAQA+E,EARA,KAUTC,EAAWC,cAEjBpJ,qBAAU,WACNqJ,IACAC,IACAH,EAASI,YAAqC,CAC1CC,kBAAmB,CAAC,SAAU,WAC9BC,SAAUC,OAEf,IAEH,IAAML,EAAY,WACdF,EAASjI,YAAiB,CAAEuI,SAAUE,MAGpCL,EAAU,WACZH,EAAStH,YAAkB,CAAE4H,SAAUG,MAiBrCD,EAAgB,SAACE,GACnBjB,EAAkBiB,IAGhBD,EAAa,SAACC,GAChBlB,EAAWkB,IAGTH,EAAY,SAACG,GACfhB,EAAcgB,IAGZ9F,EAAc,WAChBkF,GAAmB5C,GACnB6C,GAAU,IAGRY,EAAc,SAACD,GACjB9F,IACAuF,IACAJ,GAAU,IAaRa,EAAiB,SAACF,GACpBb,EAAaa,IASXG,EAAY1D,IAAS,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAWM,gBAAiBF,KAAKC,MAAL,OAAWL,QAAX,IAAWA,OAAX,EAAWA,EAAWM,gBAAkB,GAEnG,OACI,qCACKP,EACG,cAAC,EAAD,CACI3B,WAAYA,EACZG,eAAgBA,EAChBwB,eAAgBA,EAChBC,UAAWA,EACX0D,UAAWA,EACX7F,OAAQA,EACR0D,YArEI,SAACF,GACjB,GAAIxD,EAAQ,CACR,IAAM8F,EAAO,CAAE1J,GAAI+F,EAAUxC,MAAOoG,IAAKvC,GACzCwB,EAAShH,YAAmB,CAAEqH,kBAAmBS,EAAMR,SAAUK,UAEjEX,EAASlH,YAAkB,CAAEuH,kBAAmB7B,EAAO8B,SAAUK,MAiEzD/F,YAAaA,IAEf,cAAC,EAAD,CACEc,eAAgBA,EAChBrC,QAASA,EACTqB,aAtCK,SAACsG,GA5BH,IAAC5J,EA6BhBwI,GAAmBD,GA7BHvI,EA8BL4J,EA7BXhB,EAASpH,YAAqB,CAAEyH,kBAAmBjJ,EAAIkJ,SAAUM,MAkErDhG,YAAaA,IAIpB+E,EACK,cAAChJ,EAAA,EAAD,CAAaG,KAAM6I,EAAgBnI,YAAa,CAACyJ,SAAU,OAA3D,SACE,cAAC,EAAD,CACIvF,eAAgBA,EAChByB,UAAWA,EACXS,OAAQiD,EACR5B,kBA5CM,WACtBW,GAAkB,GAClBC,EAAa,KA2CGP,YApCA,WAChBM,GAAkB,GAClBE,GAAkB,GAClBC,GAAU,QAoCC","file":"static/js/9.03db566d.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport PortalModal from \"../Portals/PortalModal\";\nconst $ = window.$;\n\nconst CustomModal = (props) => {\n  useEffect(() => {\n    if (props?.show) {\n      $(\"#customModal\").modal(\"show\");\n    } else {\n      $(\"#customModal\").modal(\"hide\");\n    }\n\n    $(\".modal-backdrop\").remove();\n  });\n\n  return (\n    props?.show && (\n      <PortalModal>\n        <div className=\"modal portalModalChildren\" data-backdrop=\"static\" data-keyboard=\"false\" id={\"customModal\"} tabIndex={-1}>\n          <div\n            className={`modal-dialog modal-lg modal-dialog-centered`}\n            role=\"document\"\n            style={{...props?.modalStyles}}\n          >\n            <div className=\"modal-content\">{props?.children}</div>\n          </div>\n        </div>\n      </PortalModal>\n    )\n  );\n};\n\nexport default CustomModal;\n","import { createPortal } from \"react-dom\";\n\nconst PortalModal = (props) => {\n\n    const element = document.getElementById('portalModal');\n    return createPortal(props.children, element);\n};\n\nexport default PortalModal;","import { ACTION_GET_CORPORATE_HIRING_REQUEST, ACTION_POST_CORPORATE_HIRING_REQUEST, ACTION_POST_PUBLISH_CORPORATE_HIRING_REQUEST, ACTION_GET_CORPORATE_HIRING_BYID_REQUEST } from \"./SagaActionTypes\"\n\nexport const HiringSagaAction = (payload) => {\n    return {\n        type: ACTION_GET_CORPORATE_HIRING_REQUEST,\n        payload: payload\n    }\n};\n\nexport const AddHiringSagaAction = (payload) => {\n    return {\n        type: ACTION_POST_CORPORATE_HIRING_REQUEST,\n        payload: payload\n    }\n};\n\nexport const actionPostPublishCorporateHiringRequest = (payload) => {\n    return {\n        type: ACTION_POST_PUBLISH_CORPORATE_HIRING_REQUEST,\n        payload: payload\n    }\n}\n\nexport const actionGetCorporateHiringByIdRequest = (payload) => {\n    return {\n        type: ACTION_GET_CORPORATE_HIRING_BYID_REQUEST,\n        payload: payload\n    }\n}","import { createPortal } from \"react-dom\";\n\nconst PortalHiringModal = (props) => {\n\n    const element = document.getElementById('modal');\n    return createPortal(props.children, element);\n};\n\nexport default PortalHiringModal;","import {\n    ACTION_GET_CORPORATE_JOBS_BYID_REQUEST,\n    ACTION_GET_CORPORATE_JOBS_REQUEST,\n    ACTION_POST_CORPORATE_JOBS_REQUEST,\n    ACTION_POST_CORPORATE_UPDATEJOBS_REQUEST,\n    ACTION_POST_PUBLISH_CORPORATE_JOBS_REQUEST\n} from \"./SagaActionTypes\"\n\nexport const GetJobsSagaAction = (payload) => {\n    return {\n        type: ACTION_GET_CORPORATE_JOBS_REQUEST,\n        payload: payload\n    }\n};\n\nexport const GetJobByIdSagaAction = (payload) => {\n    return {\n        type: ACTION_GET_CORPORATE_JOBS_BYID_REQUEST,\n        payload: payload\n    }\n};\n\nexport const AddJobsSagaAction = (payload) => {\n    return {\n        type: ACTION_POST_CORPORATE_JOBS_REQUEST,\n        payload: payload\n    }\n};\n\nexport const EditJobsSagaAction = (payload) => {\n    return {\n        type: ACTION_POST_CORPORATE_UPDATEJOBS_REQUEST,\n        payload: payload\n    }\n};\n\nexport const actionPostPublishCorporateJobsRequest = (payload) => {\n    return {\n        type: ACTION_POST_PUBLISH_CORPORATE_JOBS_REQUEST,\n        payload: payload\n    }\n}","import React from 'react'\nimport moment from 'moment';\nconst JobsCmp = (props) => {\n    return (\n        <div className=\"row published-jobs-section\">\n            <div className=\"d-flex flex-column justify-content-start align-items-center w-full\">\n                <p className=\"heading\">Jobs Created</p>\n                {props.allJobs && props.allJobs?.length >= 0\n                    ? props.allJobs?.map((item, i) => <div className=\"d-flex flex-row justify-content-between align-items-center jobs-list-item w-full\" key={i}>\n                        <div className=\"item d-flex flex-row justify-content-between align-items-center w-full\">\n                            <div className=\"job-icon job-blue-icon d-flex justify-content-center align-items-center\">\n                                <i className=\"fas fa-cube\" />\n                            </div>\n                            <p className=\"job-label\">{item.jobName}</p>\n                            <select name=\"\" className=\"form-control job-dropdown\">\n                                <option>{item.hiringCriteriaName}</option>\n                            </select>\n                            <select name=\"status\" defaultValue={item.status} className=\"form-control job-dropdown\">\n                                <option value={'DEFAULT'} disabled>Select Status</option>\n                                <option value=\"Open\">Open</option>\n                                <option value=\"Close\">Close</option>\n                            </select>\n                            <p className=\"job-published-date\">Created on {item?.creationDate ? moment(item?.creationDate).format(\"DD-MM-YYYY\") : ''}</p>\n                        </div>\n                        <div className=\"vertical-divider\" />\n                        <div className=\"job-list-item-details-container d-flex flex-row justify-content-center align-items-center\">\n                            <button \n                                className=\"btn d-flex flex-row justify-content-around align-items-center\" \n                                style={{\n                                    height: \"30px\",\n                                    width: \"100px\",\n                                    fontSize: \".600rem\",\n                                    marginRight: \"10px\",\n                                    borderRadius: \"4px\",\n                                }} \n                                onClick={() => props.detailsModal(item.jobID)}>\n                                <p>Details</p>\n                                <i className=\"fas fa-chevron-right\" />\n                            </button>\n                        </div>\n                    </div>) : \"No data\"}\n                <button type=\"button\" onClick={props.handleClick} className=\"btn\"> Add New Job</button>\n            </div>\n        </div>\n\n    )\n}\n\nexport default JobsCmp\n","import React from 'react';\nimport Select from 'react-select';\n\nconst AddJobsCmp = (props) => {\n    return (\n        <form className=\"add-new-jobs-section\" onSubmit={props.handleSubmit}>\n            <div className=\"d-flex flex-column justify-content-start align-items-center w-full\">\n                <p className=\"heading\">{props.isEdit ? 'Update ' : 'Add New '} Job</p>\n            </div>\n            <div className=\"job-details-form py-4\">\n                <div className=\"row m-0\">\n                    <div className=\"col-md-3\">\n                        <div className=\"d-grp\">\n                            <input type=\"text\"\n                                name=\"jobName\"\n                                onChange={props.handleChange}\n                                value={props.addJobs.jobName}\n                                className=\"d-inp bg-white\"\n                                placeholder=\"Name of the job\"\n                                required />\n                            <label className=\"inp-caption\">Name of the job</label>\n                        </div>\n                        <div className=\"d-grp\">\n                            <select\n                                name=\"jobType\"\n                                onChange={props.handleChange}\n                                value={props.addJobs.jobType}\n                                className=\"d-inp bg-white\"\n                                required>\n                                <option value={''}>Job Type</option>\n                                {props.lookUpData && props.lookUpData?.jobType?.length >= 0\n                                    ? props.lookUpData?.jobType.map((item, i) => <option key={i} value={item.jobTypeCode}>{item.jobType}</option>) : (null)\n                                }\n                                {/* <option value=\"FT\">Full Time</option>\n                                <option value=\"PT\">Part Time</option>\n                                <option value=\"PM\">Permanent</option> */}\n                            </select>\n                            <label className=\"inp-caption\">Job Type</label>\n                        </div>\n                        <div className=\"d-grp\">\n                            <select\n                                name=\"hiringCriteriaID\"\n                                onChange={props.handleChange}\n                                // value={props.addJobs.hiringCriteriaID + \",\" + props.addJobs.hiringCriteriaName}\n                                value={props.addJobs.hiringCriteriaID +','+props.addJobs.hiringCriteriaName}\n                                className=\"d-inp bg-white\"\n                            >\n                                <option value={''}>Select Hiring Criteria</option>\n                                {props.hiringCriteria && props.hiringCriteria?.length >= 0\n                                    ? props.hiringCriteria?.map((item, i) => <option key={i} value={item.hiringCriteriaID + ',' + item.hiringCriteriaName}>{item.hiringCriteriaName}</option>)\n                                    : (null)\n                                }\n                            </select>\n                            <label className=\"inp-caption\">Hiring Criteria</label>\n                        </div>\n                        <div className=\"d-grp\">\n                            <input\n                                type=\"date\"\n                                name=\"monthOfHiring\"\n                                onChange={props.handleChange}\n                                value={props.dateFormat(props.addJobs.monthOfHiring)}\n                                className=\"d-inp bg-white\"\n                                placeholder=\"Date of hiring\"\n                                required />\n                            <label className=\"inp-caption\">Date of hiring</label>\n                        </div>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <div className=\"d-grp\">\n                            <select\n                                name=\"status\"\n                                onChange={props.handleChange}\n                                value={props.addJobs.status}\n                                className=\"d-inp bg-white\"\n                                required>\n                                <option value={''}>Select Status</option>\n                                <option value=\"Open\">Open</option>\n                                <option value=\"Close\">Close</option>\n                            </select>\n                            <label className=\"inp-caption\">Status</label>\n                        </div>\n                        <div className=\"d-grp\">\n                            <input\n                                type=\"number\"\n                                name=\"noOfPositions\"\n                                onChange={props.handleChange}\n                                value={props.addJobs.noOfPositions}\n                                className=\"d-inp bg-white\"\n                                min=\"1\"\n                                placeholder=\"No of positions\"\n                                required />\n                            <label className=\"inp-caption\">No of positions</label>\n                        </div>\n                        <div className=\"d-grp\">\n                            <select\n                                name=\"location\"\n                                onChange={props.handleChange}\n                                value={props.addJobs.location}\n                                className=\"d-inp bg-white\"\n                                required>\n                                <option value={''}>Select the location</option>\n                                <option value=\"Hyderabad\">Hyderabad</option>\n                                <option value=\"Delhi\">Delhi</option>\n                                <option value=\"Mumbai\">Mumbai</option>\n                            </select>\n                            <label className=\"inp-caption\">Location</label>\n                        </div>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className=\"d-grp\">\n                            {/* <select\n                                name=\"skillID\"\n                                onChange={(e) => props.handleChangeSkills(e)}\n                                // value={item.skillID + ',' + item.skill}\n                                className=\"d-inp bg-white\"\n                                required>\n                                <option value={'DEFAULT'} disabled>Select the skill set</option>\n                                {props.lookUpData && props.lookUpData?.skills?.length >= 0\n                                    ? props.lookUpData?.skills.map((item, i) => <option key={i} value={item.SkillID + ',' + item.skill}>{item.skill}</option>) : (null)\n                                }\n                            </select> */}\n                            <Select\n                                closeMenuOnSelect={false}\n                                label=\"Select Skills\"\n                                placeholder={'Select Skill(s)'}\n                                isMulti\n                                onChange={props.handleChangeSkills}\n                                defaultValue={props.defaultSkills}\n                                options={props.skillsList}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"col-md\">\n                        <div className=\"d-grp\">\n                            <input\n                                type=\"number\"\n                                name=\"salaryMinRange\"\n                                onChange={props.handleChange}\n                                defaultValue={props.addJobs.salaryMaxRange}\n                                className=\"d-inp bg-white\"\n                                min={0}\n                                placeholder=\"Salary Range\"\n                                required />\n                            <label className=\"inp-caption\">Min Salary</label>\n                        </div>\n                        <div className=\"d-grp\">\n                            <input\n                                type=\"number\"\n                                name=\"salaryMaxRange\"\n                                onChange={props.handleChange}\n                                defaultValue={props.addJobs.salaryMaxRange}\n                                className=\"d-inp bg-white\"\n                                min={0}\n                                placeholder=\"Salary Range\"\n                                required />\n                            <label className=\"inp-caption\">Max Salary</label>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {/* <div className=\"d-flex flex-row justify-content-around align-items-center job-details-form w-full\">\n                <input type=\"text\"\n                    name=\"jobName\"\n                    onChange={props.handleChange}\n                    defaultValue={props.addJobs.jobName}\n                    className=\"form-control\"\n                    placeholder=\"Name of the job\"\n                    required />\n                <select\n                    name=\"hiringCriteriaID\"\n                    onChange={props.handleChange}\n                    value={props.addJobs.hiringCriteriaID + \",\" + props.addJobs.hiringCriteriaName}\n                    className=\"form-control\"\n                    required>\n                    <option value={'DEFAULT'} disabled>Select Hiring Criteria</option>\n                    {props.hiringCriteria && props.hiringCriteria?.length >= 0\n                        ? props.hiringCriteria?.map((item, i) => <option key={i} value={item.hiringCriteriaID + ',' + item.hiringCriteriaName}>{item.hiringCriteriaName}</option>)\n                        : (null)\n                    }\n                </select>\n                <select\n                    name=\"\"\n                    onChange={props.handleChange}\n                    className=\"form-control\"\n                    required>\n                    <option>Open</option>\n                    <option>Close</option>\n                </select>\n            </div>\n             <div className=\"add-new-jobs-section-list  w-full\">\n                {props.addskills?.map((item, i) => (\n                    <div className=\"add-new-jobs-section-item d-flex flex-row justify-content-between align-items-center\" key={i}>\n                        <p className=\"sno\">{i + 1}</p>\n                        <select\n                            name=\"skillID\"\n                            onChange={(e) => props.handleChangeSkills(e, i)}\n                            value={item.skillID + ',' + item.skill}\n                            className=\"form-control\"\n                            required>\n                            <option value={'DEFAULT'} disabled>Select the skill set</option>\n                            {props.lookUpData && props.lookUpData?.skills?.length >= 0\n                                ? props.lookUpData?.skills.map((item, i) => <option key={i} value={item.SkillID + ',' + item.skill}>{item.skill}</option>) : (null)\n                            }\n                        </select>\n                        <input\n                            type=\"number\"\n                            name=\"noOfPositions\"\n                            onChange={(e) => props.handleChangeSkills(e, i)}\n                            value={item.noOfPositions}\n                            className=\"form-control\"\n                            min=\"1\"\n                            placeholder=\"No of positions\"\n                            required />\n                        <select\n                            name=\"location\"\n                            onChange={(e) => props.handleChangeSkills(e, i)}\n                            value={item.location}\n                            className=\"form-control\"\n                            required>\n                            <option>Select the location</option>\n                            <option value=\"Hyderabad\">Hyderabad</option>\n                            <option value=\"Delhi\">Delhi</option>\n                            <option value=\"Mumbai\">Mumbai</option>\n                        </select>\n                        <input\n                            type=\"text\"\n                            name=\"salaryRange\"\n                            onChange={(e) => props.handleChangeSkills(e, i)}\n                            defaultValue={item.salaryRange}\n                            className=\"form-control\"\n                            placeholder=\"Salary Range\"\n                            required />\n                        <input\n                            type=\"date\"\n                            name=\"dateOfHiring\"\n                            onChange={(e) => props.handleChangeSkills(e, i)}\n                            value={props.dateFormat(item?.dateOfHiring)}\n                            className=\"form-control\"\n                            placeholder=\"Date of hiring\"\n                            required />\n                        {props.addskills?.length - 1 !== i && <button\n                            type=\"button\"\n                            onClick={() => props.removeItem(i)}\n                            className=\"round-btn d-flex justify-content-center align-items-center\">\n                            <i className=\"fas fa-minus\" />\n                        </button>\n                        }\n                        {props.addskills?.length - 1 == i && <button\n                            type=\"button\"\n                            onClick={props.addNewItem}\n                            className=\"round-btn d-flex justify-content-center align-items-center\">\n                            <i className=\"fas fa-plus\" />\n                        </button>\n                        }\n\n                    </div>\n                ))}\n            </div> */}\n            <div className=\"d-flex flex-row justify-content-center align-items-center w-full mt-4\">\n                <button type=\"submit\" className=\"job-btn\">{props.isEdit ? 'Update' : 'Save'} Job</button>\n                <button type=\"reset\" onClick={props.handleClick} className=\"job-btn\">Cancel</button>\n            </div>\n        </form>\n    )\n}\n\nexport default AddJobsCmp;\n","import React, { useEffect, useState } from 'react'\nimport { toast } from 'react-toastify'\nimport AddJobsCmp from '../../../../Components/Dashboard/JobsCmp/AddJobsCmp'\n\nconst AddJobs = (props) => {\n    const initialData = {\n        jobName: '',\n        jobType: '',\n        hiringCriteriaID: '',\n        hiringCriteriaName: '',\n        salaryMinRange: '',\n        salaryMaxRange: '',\n        monthOfHiring: '',\n        remarks: '',\n        attachment: '/9j/4AAQSkZJRgABAQEASABIAAD/2wBDAP//////////////////////////////////////////////////////////////////////////////////////2wBDAf//////////////////////////////////////////////////////////////////////////////////////wAARCADqATkDASIAAhEBAxEB/8QAFwABAQEBAAAAAAAAAAAAAAAAAAECA//EACQQAQEBAAIBBAMBAQEBAAAAAAABESExQQISUXFhgZGxocHw/8QAFQEBAQAAAAAAAAAAAAAAAAAAAAH/xAAWEQEBAQAAAAAAAAAAAAAAAAAAEQH/2gAMAwEAAhEDEQA/AMriLyCKgg1gQwCgs4FTMOdutepjQak+FzMSVqgxZdRdPPIIvH5WzzGdBriphtTeAXg2ZjKA1pqKDUGZca3foBek8gFv8Ie3fKdA1qb8s7hoL6eLVt51FsAnql3Ut1M7AWbflLMDkEMX/F6/YjK/pADFQAUNA6alYagKk72m/j9p4Bq2fDDSYKLNXPNLoHE/NT6RYC31cJxZ3yWVM+aBYi/S2ZgiAsnYJx5D21vPmqrm3PTfpQQwyAC8JZvSKDni41ZrMuUVVl+Uz9w9v/1QWrZsZ5nFPHYH+JZyureQSF5M+fJ0CAfwRAVRBQA1DAWVUayoJUWoDpsxntPsueBV4+VxhdyAtv8AjOLGpIDMLbeGvbF4iozJfr/WukAVABAXAQXEAAASzVAZdO2WNordm+emFl7XcQSNZiFtv0C9w90nhJf4mA1u+GcJFwIyAqL/AOovwgGNfSRqdIrNa29M0gKCAojU9PAMjWXpckEJFNFEAAXEUBABYz6rZ0ureQc9vyt9XxDF2QAXtABcQAs0AZywkvluJbyipifas52DcyxjlZweAO0xri/hc+wZOEKIu6nSyeToVZyWXwvCg53gW81QQ7aTNAn5dGZJPs1UXURQAUEMCXQLZE93PRZ5hPTgNMrbIzKCm52LZwCs+2M8w2g3sjPuZAXb4IsMAUACzVUGM4/K+md6vEXUUyM5PDR0IxYe6ramih0VNBrS4xoqN8Q1BFQk3yqyAsioioAAKgDSJL4/jQIn5igLrPqtOuf6oOaxbMoAltUAhhIoJiiggrPu+AaOIxtAX3JbaAIaLwi4t9X4T3fg2AFtqcrUUarP20zUDAmqoE0WRBZPNVUVEAAAAVAC8kvih2DSKxOdBqs7Z0l0gI0mKAC4AuHE7ZtBriM+744QAAAAABAFsveIttBICyaikvy1+r/Cen5rWQHIBQa4rIDRqSl5qDWqziqgAAAATA7BpGdqXb2C2+J/UgAtRQBSQtkBWb6vhLbQAAAAAEBRAAAAAUbm+GZNdPxAP+ql2Tjwx7/wIgZ8iKvBk+CJoCXii9gaqZ/qqihAAAEVABGkBFUwBftNkZ3QW34QAAABFAQAVAAAAAARVkl8gs/43sk1jL45LvHArepk+E9XTG35oLqsmIKmLAEygKg0y1AFQBUXwgAAAoBC34S3UAAABAVAAAAAABAUQAVABdRQa1PcYyit2z58M8C4ouM2NXpOEGeWtNZUatiAIoAKIoCoAoG4C9MW6dgIoAIAAAAAAACKWAgL0CAAAALiANCKioNLgM1CrLihmTafkt1EF3SZ5ZVUW4mnIKvAi5fhEURVDWVQBRAAAAAAAAQFRVyAyulgAqCKlF8IqLsEgC9mGoC+IusqCrv5ZEUVOk1RuJfwSLOOkGFi4XPCoYYrNiKauosBGi9ICstM1UAAAAAAFQ0VcTBAXUGgIqGoKhKAzRRUQUAwxoSrGRpkQA/qiosOL9oJptMRRVZa0VUqSiChE6BqMgCwqKqIogAIAqKCKgKoogg0lBFuIKgAAAKNRlf2gqsftsEtZWoAAqAACKoMqAAeSoqp39kL2AqLOlE8rEBFQARYALhigrNC9gGmooLp4TweEQFFBFAECgIoAu0ifIAqAAA//9k=',\n        attachmentName: '1kb.jpg',\n        status: '',\n        noOfPositions: '',\n        location: ''\n    }\n\n    const [addJobs, setAddJobs] = useState(initialData);\n    const [addskills, setAddSkills] = useState([]);\n    const [defaultSkills, setDefaultSkills] = useState([])\n\n    useEffect(() => {\n        if (props.isAddJobEnable) {\n            if (props.isEdit && props.modelData) {\n                // const jobSkills = props?.jobSkills?.map(item => ({ value: item.skillID, label: item.skillName }));\n                const jobObj = props.lookUpData?.jobType?.find(item => item.jobType === props.modelData.jobType);\n                const defaultSkillsObj = JSON.parse(props.modelData?.skillsInString)?.map(item => ({ value: item.skillID, label: item.skillName }))\n                setDefaultSkills(defaultSkillsObj)\n                // setAddSkills(jobSkills);\n                setAddJobs({\n                    jobName: props.modelData?.jobName,\n                    jobType: jobObj?.jobTypeCode,\n                    hiringCriteriaID: props.modelData?.hiringCriteriaID,\n                    hiringCriteriaName: props.modelData?.hiringCriteriaName,\n                    salaryMinRange: props.modelData?.salaryMinRange,\n                    salaryMaxRange: props.modelData?.salaryMaxRange,\n                    monthOfHiring: props.modelData?.monthOfHiring,\n                    remarks: props.modelData?.remarks,\n                    attachment: props.modelData?.attachment,\n                    attachmentName: props.modelData?.attachmentName,\n                    status: props.modelData?.status,\n                    location: props.modelData?.location,\n                    noOfPositions: props.modelData?.noOfPositions\n                });\n            }\n        }\n    }, [])\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        if (name === 'monthOfHiring') {\n            setAddJobs(prevState => ({\n                ...prevState,\n                [name]: new Date(value).toISOString()\n            }))\n        } else if (name === 'noOfPositions') {\n            setAddJobs(prevState => ({\n                ...prevState,\n                [name]: parseInt(value)\n            }))\n        } else if (name === 'hiringCriteriaID') {\n            const hiringVal = value.split(\",\");\n            setAddJobs(prevState => ({\n                ...prevState,\n                hiringCriteriaID: hiringVal[0],\n                hiringCriteriaName: hiringVal[1]\n            }));\n        } else {\n            setAddJobs(prevState => ({\n                ...prevState,\n                [name]: value\n            }))\n        }\n        // switch (name) {\n        //     case 'hiringCriteriaID':\n        //         const hiringVal = value.split(\",\");\n        //         setAddJobs(preState => ({\n        //             ...preState,\n        //             hiringCriteriaID: hiringVal[0],\n        //             hiringCriteriaName: hiringVal[1]\n        //         }));\n        //         break;\n\n        //     default:\n        //         break;\n        // }\n    }\n\n    const handleChangeSkills = (selectedOption) => {\n        setAddSkills(selectedOption);\n        // const { name, value } = event.target;\n        // let list = [...addskills];\n        // if (name === \"skillID\") {\n        //     const skillVal = value.split(\",\");\n        //     list[i]['skillID'] = skillVal[0];\n        //     list[i]['skill'] = skillVal[1];\n        // } else {\n        //     if (name === 'noOfPositions') {\n        //         list[i][name] = parseInt(value);\n        //     } else if (name === 'dateOfHiring') {\n        //         list[i][name] = new Date(value).toISOString();\n        //     } else {\n        //         list[i][name] = value;\n        //     }\n        // }\n        // setAddSkills(list);\n    }\n\n    // const addNewItem = () => {\n    //     setAddSkills([...addskills, skillItems]);\n    // }\n\n    // const removeItem = (id) => {\n    //     // let newItems = [...addskills];\n    //     // newItems.splice(id, 1);\n    //     // setAddSkills(newItems);\n    //     let newItems = addskills.filter((item, i) => i !== id);\n    //     setAddSkills(newItems);\n    // }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (addJobs.jobName && addJobs.hiringCriteriaID || addJobs.hiringCriteriaName\n            || addJobs.jobType || addJobs.monthOfHiring || addJobs.salaryMaxRange || addJobs.location\n            || addJobs.salaryMinRange || addJobs.status || addskills.length >= 0) {\n            const model = {\n                ...addJobs,\n                skills: addskills?.map(item => ({ skillID: item.value, skill: item.label })),\n            }\n            // console.log(model);\n            props.addJobsForm(model);\n        } else {\n            toast.error(\"Please enter all required fields\");\n        }\n    }\n\n    const dateFormat = (date) => {\n        let d = new Date(date);\n        const dt = d.toLocaleDateString().split(\"/\");\n        return dt[2] + \"-\" + dt[1] + \"-\" + dt[0];\n    }\n\n    const skillsList = props.lookUpData?.skills?.map(item => ({ value: item.skillCode, label: item.skillName }))\n\n    return (\n        <>\n            <AddJobsCmp\n                hiringCriteria={props.hiringCriteria}\n                lookUpData={props.lookUpData}\n                defaultSkills={defaultSkills}\n                handleChange={handleChange}\n                handleChangeSkills={handleChangeSkills}\n                skillsList={skillsList}\n                handleSubmit={handleSubmit}\n                dateFormat={dateFormat}\n                addskills={addskills}\n                addJobs={addJobs}\n                isEdit={props.isEdit}\n                hiringCriteria={props.hiringCriteria}\n                lookUpData={props.lookUpData}\n                handleClick={props.handleClick}\n            />\n        </>\n    )\n}\n\nexport default AddJobs;\n","import React from 'react';\n\nconst JobDetailsModal = (props) => {\n    const dateFormat = (date) => {\n        let d = new Date(date);\n        const dt = d.toLocaleDateString().split(\"/\");\n        return dt[2] + \"-\" + dt[1] + \"-\" + dt[0];\n    }\n    return (\n        <div className={'job-publish-modal'}>\n            <div className=\"modal-header job-publish-modal-header\">\n                <p className=\"heading w-full\">Job Details</p>\n                <button type=\"button\" onClick={() => props.closeDetailsModal()} className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">×</span>\n                </button>\n            </div>\n            <div className=\"modal-body job-publish-modal-body\">\n                <div className=\"d-job-details\">\n                    <h4 className=\"d-job-detials-title\">{props.modelData?.jobName}</h4>\n                    <div className=\"row m-0\">\n                        <div className=\"col-md-9 p-0\">\n                            <div className=\"row m-0\">\n                                <div className=\"col-md-4\">\n                                    <div className=\"d-job-box d-flex\">\n                                        <label className=\"d-job-label\">Status:</label> <div className=\"d-job-box-status\">{props.modelData?.status}</div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md\">\n                                    <div className=\"d-job-box d-flex\">\n                                        <label className=\"d-job-label w-100\">Hiring Criteria Mapped:</label>\n                                        {/* <select name=\"status\"\n                                            defaultValue={props.modelData?.hiringCriteriaName}\n                                            disabled className=\"form-control job-dropdown w-100\">\n                                            <option value={'DEFAULT'} disabled>Select Status</option>\n                                            <option value=\"Open\">Open</option>\n                                            <option value=\"Close\">Close</option>\n                                        </select> */}\n\n                                        <input\n                                            type=\"text\"\n                                            name=\"\"\n                                            value={props.modelData?.hiringCriteriaName}\n                                            className=\"form-control d-inp bg-white\"\n                                            readOnly\n                                            disabled\n                                            required />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row m-0\">\n                                <div className=\"col-md-4\">\n                                    <div className=\"d-job-box d-grp\">\n                                        <label className=\"d-job-label\">Tentative Month of Hiring:</label>\n                                        <input\n                                            type=\"date\"\n                                            name=\"\"\n                                            value={dateFormat(props.modelData?.monthOfHiring)}\n                                            className=\"d-inp bg-white\"\n                                            required />\n                                    </div>\n                                </div>\n                                <div className=\"col-md-4\">\n                                    <div className=\"d-job-box d-grp\">\n                                        <label className=\"d-job-label\">No. of Positions:</label>\n                                        <input\n                                            type=\"number\"\n                                            name=\"\"\n                                            value={props.modelData?.noOfPositions}\n                                            className=\"d-inp bg-white\"\n                                            required />\n                                    </div>\n                                </div>\n                                <div className=\"col-md-4\">\n                                    <div className=\"d-job-box d-grp\">\n                                        <label className=\"d-job-label\">Location:</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"\"\n                                            value={props.modelData?.location}\n                                            className=\"d-inp bg-white\"\n                                            required />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row m-0\">\n                                <div className=\"col-md-8\">\n                                    <div className=\"d-job-box d-grp\">\n                                        <label className=\"d-job-label\">Salary Range:</label>\n                                        <div className=\"d-flex align-items-end\">\n                                            <input\n                                                type=\"number\"\n                                                name=\"\"\n                                                value={props.modelData?.salaryMinRange}\n                                                className=\"d-inp bg-white\"\n                                                required />\n                                            <label className=\"d-job-label mx-2\">To</label>\n                                            <input\n                                                type=\"number\"\n                                                name=\"\"\n                                                value={props.modelData?.salaryMaxRange}\n                                                className=\"d-inp bg-white\"\n                                                required />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md p-0\">\n                            <div className=\"d-job-box d-flex\">\n                                <label className=\"d-job-label\">Skills:</label>\n                                <ul className=\"d-job-list mb-0\">\n                                    {props.skills && props.skills?.length >= 0\n                                        ? props.skills?.map((item, i) => <li key={i}>{item.skillName}</li>)\n                                        : (null)\n                                    }\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {/* <div className=\"heading-section d-flex justify-content-start align-items-start w-full\">\n                            <div className=\"body-section\">\n                                <div className=\"header d-flex flex-row justify-content-between align-items-center w-full\">\n                                    <p className=\"job-label\">{props.modelData?.jobName}</p>\n                                    <div className=\"job-heading-btn\">Open</div>\n                                    <select name=\"hiringCriteriaID\" className=\"form-control\" defaultValue={props.modelData?.hiringCriteriaID + ',' + props.modelData?.hiringCriteriaName}>\n\n                                        {props.hiringCriteria && props.hiringCriteria?.length >= 0\n                                            ? props.hiringCriteria?.map((item, i) => <option key={i} value={item.hiringCriteriaID + ',' + item.hiringCriteriaName}>{item.hiringCriteriaName}</option>)\n                                            : (null)\n                                        }\n                                    </select>\n                                    <div\n                                        className=\"d-flex flex-row justify-content-between align-items-center\"\n                                        data-toggle=\"collapse\" data-target=\"#details\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                                        <p className=\"label\">Details</p>\n                                        <i className=\"fas fa-chevron-up\" />\n                                    </div>\n                                </div>\n                                <div className=\"collapse\" id=\"details\">\n                                    <table className=\"table table-borderless table-striped job-publish-table\" id=\"details\">\n                                        <thead className=\"job-publish-table-header\">\n                                            <tr>\n                                                <td className=\"table-heading\">Skill Set</td>\n                                                <td className=\"table-heading\">No of Positions</td>\n                                                <td className=\"table-heading\">Location</td>\n                                                <td className=\"table-heading\">Salary Range</td>\n                                                <td className=\"table-heading\">Date of hiring</td>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {props.modelData?.skills && props.modelData?.skills?.length >= 0\n                                                ? props.modelData?.skills?.map((item, i) => <tr key={i}>\n                                                    <td>{item.skillID +','+item.skill}</td>\n                                                    <td>{item.noOfPositions}</td>\n                                                    <td>{item.location}</td>\n                                                    <td>{item.salaryRange}</td>\n                                                    <td>{item.dateOfHiring}</td>\n                                                </tr>)\n                                                : <tr><td colSpan=\"5\" className=\"text-center\">Programming</td></tr>\n                                            }\n                                        </tbody>\n                                    </table>\n                                </div>\n                                <div className=\"d-flex flex-row justify-content-center align-items-center w-full mt-4\">\n                                    <button type=\"button\" data-dismiss=\"modal\" onClick={props.editJobsBtn} className=\"job-btn\">Edit Job</button>\n                                </div>\n                            </div>\n                        </div> */}\n                <div className=\"d-flex flex-row justify-content-center align-items-center w-full mt-4\">\n                    <button type=\"button\" data-dismiss=\"modal\" onClick={props.editJobsBtn} className=\"btn job-btn\">Edit Job</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default JobDetailsModal;\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport JobsCmp from '../../../../Components/Dashboard/JobsCmp/JobsCmp'\nimport PortalHiringModal from '../../../../Portals/PortalHiringModal';\nimport { actionGetDependencyLookUpsSagaAction } from '../../../../Store/Actions/SagaActions/CommonSagaActions';\nimport { HiringSagaAction } from '../../../../Store/Actions/SagaActions/HiringSagaAction';\nimport { AddJobsSagaAction, EditJobsSagaAction, GetJobByIdSagaAction, GetJobsSagaAction } from '../../../../Store/Actions/SagaActions/JobsSagaAction';\nimport AddJobs from './AddJobs';\nimport JobDetailsModal from './JobDetailsModal';\nimport CustomModal from '../../../../Components/CustomModal';\n\nconst Jobs = () => {\n\n    const [allJobs, setAllJobs] = useState([]);\n    const [hiringCriteria, setHiringCriteria] = useState([]);\n    const [lookUpData, setLookUpData] = useState([]);\n    const [isDetailsModal, setIsDetailsModal] = useState(false);\n    const [modelData, setModelData] = useState({});\n    const [isAddJobEnable, setIsAddJobEnable] = useState(false);\n    const [isEdit, setIsEdit] = useState(false);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        getHiring();\n        getJobs();\n        dispatch(actionGetDependencyLookUpsSagaAction({\n            apiPayloadRequest: ['skills', 'jobType'],\n            callback: dropdowns\n        }));\n    }, []);\n\n    const getHiring = () => {\n        dispatch(HiringSagaAction({ callback: getAllHirings }));\n    }\n\n    const getJobs = () => {\n        dispatch(GetJobsSagaAction({ callback: getAllJobs }));\n    }\n\n    const addJobsForm = (model) => {\n        if (isEdit) {\n            const body = { id: modelData.jobID, req: model }\n            dispatch(EditJobsSagaAction({ apiPayloadRequest: body, callback: addJobsResp }));\n        } else {\n            dispatch(AddJobsSagaAction({ apiPayloadRequest: model, callback: addJobsResp }));\n        }\n    }\n\n    const getJobById = (id) => {\n        dispatch(GetJobByIdSagaAction({ apiPayloadRequest: id, callback: getJobByIdResp }))\n    }\n\n\n    const getAllHirings = (data) => {\n        setHiringCriteria(data);\n    }\n\n    const getAllJobs = (data) => {\n        setAllJobs(data)\n    }\n\n    const dropdowns = (data) => {\n        setLookUpData(data);\n    }\n\n    const handleClick = () => {\n        setIsAddJobEnable(!isAddJobEnable);\n        setIsEdit(false);\n    }\n\n    const addJobsResp = (data) => {\n        handleClick();\n        getJobs();\n        setIsEdit(false);\n    }\n\n    const detailsModal = (val) => {\n        setIsDetailsModal(!isDetailsModal);\n        getJobById(val);\n    }\n\n    const closeDetailsModal = () => {\n        setIsDetailsModal(false);\n        setModelData({});\n    }\n\n    const getJobByIdResp = (data) => {\n        setModelData(data);\n    }\n\n    const editJobsBtn = () => {\n        setIsDetailsModal(false);\n        setIsAddJobEnable(true);\n        setIsEdit(true);\n    }\n\n    const jobSkills = modelData && modelData?.skillsInString ? JSON.parse(modelData?.skillsInString) : [];\n\n    return (\n        <>\n            {isAddJobEnable ?\n                <AddJobs\n                    lookUpData={lookUpData}\n                    hiringCriteria={hiringCriteria}\n                    isAddJobEnable={isAddJobEnable}\n                    modelData={modelData}\n                    jobSkills={jobSkills}\n                    isEdit={isEdit}\n                    addJobsForm={addJobsForm}\n                    handleClick={handleClick}\n                />\n                : <JobsCmp\n                    hiringCriteria={hiringCriteria}\n                    allJobs={allJobs}\n                    detailsModal={detailsModal}\n                    handleClick={handleClick}\n                />\n            }\n\n            {isDetailsModal\n                ? <CustomModal show={isDetailsModal} modalStyles={{minWidth: '70%'}}>\n                    <JobDetailsModal\n                        hiringCriteria={hiringCriteria}\n                        modelData={modelData}\n                        skills={jobSkills}\n                        closeDetailsModal={closeDetailsModal}\n                        editJobsBtn={editJobsBtn}\n                    />\n                </CustomModal>\n                : (null)\n            }\n        </>\n    )\n}\n\nexport default Jobs;\n"],"sourceRoot":""}