{"version":3,"sources":["Store/Actions/CorporateActions/CorporateAction.js","Components/Forms/StudentCmp/StudentPrimaryCmp.js","Pages/Forms/Student/StudentRegister.js"],"names":["ResetRdrAction","dispatch","type","actionTypes","payload","undefined","APIStatus","val","GetCountryCodeAction","Axios","get","then","res","resp","data","catch","err","JSON","stringify","toast","error","parse","message","SignupAction","model","history","URL","formData","FormData","key","append","post","localStorage","removeItem","setItem","success","push","response","errors","StudentSignupAction","VerifyOtpAction","MobileVerified","emailVerified","ResendOtpAction","GetCategoryListAction","SaveCoprorateData","step","CreatePaymentAction","token","getItem","header","headers","sessionStorage","orderID","ValidatePaymentAction","messages","forEach","referenceObject","StudentPrimaryCmp","countryCodes","code","studentPrimaryData","saveData","handlerChange","handleSubmit","emailErr","mobileErr","email2Err","cgemailErr","mobile2Err","fmobileErr","femailErr","onSubmit","className","name","onChange","defaultValue","firstName","placeholder","autoFocus","required","middleName","lastName","collegeID","collegeEmail","value","style","width","readOnly","disabled","phone","email","presentAddressLine1","presentAddressLine2","presentAddressCountry","length","map","item","i","presentAddressState","presentAddressCity","presentAddressDistrict","presentAddressZipcode","id","htmlFor","permanentAddressLine1","permanentAddressLine2","permanentAddressCountry","permanentAddressState","permanentAddressCity","permanentAddressDistrict","permanentAddressZipcode","fathersFirstName","fathersMiddleName","fathersGuardianEmailID","fathersGuardianOccupation","fathersGuardianCompany","fathersGuardianPhoneNumber","StudentRegister","props","useState","phoneNuber","permanentAddressLine3","permanentAddressPhone","permanentAddressemail","presentAddressLine3","presentAddressPhone","presentAddressemail","fathersLastName","mothersGuardianFullName","mothersGuardianOccupation","mothersGuardianCompany","mothersGuardianDesignation","mothersGuardianPhoneNumber","mothersGuardianEmailID","setStudentPrimaryData","setErrors","setCode","useDispatch","storeData","useSelector","state","CorporateReducer","corporatePrimaryState","useEffect","prevState","event","isCheked","target","checked","preState","mailformat","test","mailformat2","mailformat3","countryCode1","find","callingCodes","preventDefault","fathersGuardianFullName"],"mappings":"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","file":"static/js/26.2f4bc921.chunk.js","sourcesContent":["\nimport Axios from '../../../utils/axios';\nimport { toast } from 'react-toastify';\nimport * as actionTypes from './actionTypes';\n\n\n\n// RESET ALL REDUCERES\nexport const ResetRdrAction = () => {\n    return (dispatch) => {\n        dispatch({\n            type: actionTypes.RESET,\n            payload: undefined\n        })\n    }\n}\n\nexport const APISuccess = () => {\n    return (dispatch) => {\n        dispatch({\n            type: actionTypes.SUCCESS,\n            payload: true\n        })\n    }\n}\nexport const APIStatus = (val) => {\n    return (dispatch) => {\n        dispatch({ type: actionTypes.APISTATUS, payload: val });\n    }\n}\n\nexport const APIError = () => {\n    return (dispatch) => {\n        dispatch({\n            type: actionTypes.ERROR,\n            payload: true\n        })\n    }\n}\n\n\nexport const GetCountryCodeAction = () => {\n    return (dispatch) => {\n        const URL = \"http://restcountries.eu/rest/v2/all?fields=name;flag;callingCodes;\";\n        Axios.get(URL)\n            .then((res) => {\n                let resp = res.data;\n                dispatch({ type: actionTypes.COUNTRYCODES, payload: resp });\n            })\n            .catch((err) => {\n                const val = JSON.stringify(err);\n                toast.error(JSON.parse(val).message);\n            })\n    }\n}\n\n// REGISTER (CORPORATE & UNIVERSITY)\nexport const SignupAction = (model, history, type) => {\n    return (dispatch) => {\n        // const URL = \"/o/signUp/Corporate\";\n        let URL;\n        if (type === 'Corporate') {\n            URL = \"/o/signUp/Corporate\";\n        } else if (type === 'University') {\n            URL = \"/o/signUp/University\";\n        }\n        let formData = new FormData();\n        for (const key in model) {\n            formData.append(key, model[key]);\n        }\n        dispatch(APIStatus(true));\n        dispatch({ type: actionTypes.CORPORATE, payload: model });\n        Axios.post(URL, formData)\n            .then((res) => {\n                let resp = res.data;\n                localStorage.removeItem('imgpath');\n                localStorage.setItem('regStatus', JSON.stringify(resp));\n                localStorage.setItem('steps', 3);\n                dispatch({ type: actionTypes.STEPS, payload: 3 });\n                dispatch(APIStatus(false));\n                toast.success(resp.message);\n                history.push('/register/authentication');\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\n// REGISTER (STUDENT)\nexport const StudentSignupAction = (model, history, type) => {\n    return (dispatch) => {\n        const URL = \"/o/signUp/Student\";\n        let formData = new FormData();\n        for (const key in model) {\n            formData.append(key, model[key]);\n        }\n        dispatch(APIStatus(true));\n        dispatch({ type: actionTypes.CORPORATE, payload: model });\n        Axios.post(URL, formData)\n            .then((res) => {\n                let resp = res.data;\n                localStorage.removeItem('imgpath');\n                localStorage.setItem('regStatus', JSON.stringify(resp));\n                localStorage.setItem('steps', 3);\n                dispatch({ type: actionTypes.STEPS, payload: 3 });\n                dispatch(APIStatus(false));\n                toast.success(resp.message);\n                history.push('/register/studentAuthentication');\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\n// LOGIN\nexport const LoginUserAction = (model, history) => {\n    return (dispatch) => {\n        const URL = \"/o/login\";\n        let formData = new FormData();\n        formData.append('stakeholder', model.stakeholder);\n        formData.append('userID', model.userID);\n        formData.append('password', model.password);\n        dispatch(APIStatus(true));\n        Axios.post(URL, formData)\n            .then((res) => {\n                let resp = res.data;\n                localStorage.setItem('token', resp.token);\n                dispatch(APIStatus(false));\n                toast.success(\"Login successful\");\n                if (resp.redirectURL === '/dashboard') {\n                    history.push('/dashboard');\n                } else {\n                    history.push('/register/payment');\n                }\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\n// VERIFY OTP\nexport const VerifyOtpAction = (model, type, history) => {\n    return (dispatch) => {\n        // const URL = \"/verifyMobile\";\n        const URL = \"/o/verifyOTP\";\n        // if (type === 1) {\n        //     URL = \"/o/verifyMobile\"\n        // } else {\n        //     URL = \"/o/verifyEmail\"\n        // }\n        let formData = new FormData();\n        for (const key in model) {\n            formData.append(key, model[key]);\n        }\n        dispatch(APIStatus(true));\n        Axios.post(URL, formData)\n            .then((res) => {\n                let resp = res.data;\n                dispatch(APIStatus(false));\n                if (resp?.MobileVerified && resp?.emailVerified) {\n                    toast.success('OTP verification successful');\n                    history.push('/register/completed');\n                } else {\n                    toast.error('OTP verification failed');\n                }\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\n// RESEND OTP\nexport const ResendOtpAction = (model) => {\n    return (dispatch) => {\n        const URL = \"/o/resendOtp\";\n        let formData = new FormData();\n        for (const key in model) {\n            formData.append(key, model[key]);\n        }\n        dispatch(APIStatus(true));\n        Axios.post(URL, formData)\n            .then((res) => {\n                let resp = res.data;\n                toast.success(resp.message);\n                dispatch(APIStatus(false));\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\nexport const GetCategoryListAction = (type) => {\n    return (dispatch) => {\n        // const URL = \"/u/lut/?lutList=corporateType&lutList=corporateCategory&lutList=corporateIndustry\";\n        let URL;\n        if (type === 'Corporate') {\n            URL = \"/u/lut/?lutList=corporateType&lutList=corporateCategory&lutList=corporateIndustry\"\n        } else if (type === 'University') {\n            URL = \"/u/lut/?lutList=universityCategory\"\n        }\n        Axios.get(URL)\n            .then((res) => {\n                let resp = res.data;\n                dispatch({ type: actionTypes.CATEGOTYLIST, payload: resp });\n            })\n            .catch((err) => {\n                const val = JSON.stringify(err);\n                toast.error(JSON.parse(val).message);\n            })\n    }\n}\n\nexport const SaveCoprorateData = (data, step) => {\n    return (dispatch) => {\n        localStorage.setItem('steps', step);\n        dispatch({ type: actionTypes.CORPORATE, payload: data });\n        dispatch({ type: actionTypes.STEPS, payload: step });\n    }\n}\n\n\n// CREATE PAYMENT\nexport const CreatePaymentAction = (model) => {\n    return (dispatch) => {\n        const URL = \"/pg/createPayment\";\n        let formData = new FormData();\n        for (const key in model) {\n            formData.append(key, model[key]);\n        }\n        // formData.append('payType', val);\n        // formData.append('payType', 'REG_FEE');\n        dispatch(APIStatus(true));\n        const token = localStorage.getItem('token');\n        const header = {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                // 'Content-Type': 'application/json'\n            }\n        }\n        Axios.post(URL, formData, header)\n            .then((res) => {\n                let resp = res.data;\n                sessionStorage.setItem('orderID', resp.orderID);\n                dispatch({ type: actionTypes.PAYMENTORDER, payload: resp });\n                dispatch(APIStatus(false));\n                // toast.success(resp.message);\n                // history.push('/register/completed');\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\n// VALIDATE PAYMENT\nexport const ValidatePaymentAction = (model) => {\n    return (dispatch) => {\n        const URL = \"/pg/verifyPayment\";\n        let formData = new FormData();\n        formData.append('orderID', model);\n        const token = localStorage.getItem('token');\n        const header = {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                // 'Content-Type': 'application/json'\n            }\n        }\n        dispatch(APIStatus(true));\n        Axios.post(URL, formData, header)\n            .then((res) => {\n                let resp = res.data;\n                resp?.messages?.forEach(key => {\n                    toast.success(key);\n                });\n                dispatch(APIStatus(false));\n                dispatch({ type: actionTypes.REFERENCEOBJ, payload: JSON.parse(resp?.referenceObject) });\n                // history.push('/register/completed');\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}","import React from 'react';\n\nconst StudentPrimaryCmp = ({ countryCodes, code, history, studentPrimaryData, errors, saveData, handlerChange, handleSubmit }) => {\n    const { emailErr, email2Err, mobileErr, mobile2Err, cgemailErr, fmobileErr, femailErr } = errors;\n    return (\n        <form onSubmit={handleSubmit} className=\"login-form reg-form\">\n            <div className=\"row\">\n                <div className=\"col-md-4\">\n                    <div className=\"login-grp\">\n                        <input\n                            type=\"text\"\n                            name=\"firstName\"\n                            onChange={handlerChange}\n                            defaultValue={studentPrimaryData.firstName}\n                            className=\"login-inp\"\n                            placeholder='Student First Name'\n                            autoFocus\n                            required={true} />\n                    </div>\n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"login-grp\">\n                        <input\n                            type=\"text\"\n                            name=\"middleName\"\n                            onChange={handlerChange}\n                            defaultValue={studentPrimaryData.middleName}\n                            className=\"login-inp\"\n                            placeholder='Middle Name'\n                            autoFocus\n                            required={true} />\n                    </div>\n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"login-grp\">\n                        <input\n                            type=\"text\"\n                            name=\"lastName\"\n                            onChange={handlerChange}\n                            defaultValue={studentPrimaryData.lastName}\n                            className=\"login-inp\"\n                            placeholder='Last Name'\n                            autoFocus\n                            required={true} />\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-md-6\">\n                    <div className=\"login-grp\">\n                        <input\n                            type=\"text\"\n                            name=\"collegeID\"\n                            onChange={handlerChange}\n                            defaultValue={studentPrimaryData.collegeID}\n                            className=\"login-inp\"\n                            placeholder='Student College ID'\n                            autoFocus\n                            required={true} />\n                    </div>\n                </div>\n                <div className=\"col-md-6\">\n                    <div className=\"login-grp\">\n                        <input\n                            type=\"email\"\n                            name=\"collegeEmail\"\n                            onChange={handlerChange}\n                            defaultValue={studentPrimaryData.collegeEmail}\n                            className={`login-inp${cgemailErr ? ' login-inp-error' : ''}`}\n                            placeholder=\"College mail\"\n                            required={false} />\n                        {cgemailErr ? <p className=\"inp-errors\">{cgemailErr}</p> : null}\n                    </div>\n                </div>\n                <div className=\"w-100\"></div>\n                <div className=\"col-md-6\">\n                    <div className=\"login-grp\">\n                        <div className=\"d-flex\">\n                            <input\n                                type=\"tel\"\n                                name=\"code\"\n                                onChange={handlerChange}\n                                value={code}\n                                className={`login-inp px-1 text-center`}\n                                placeholder=\"\"\n                                style={{ width: '50px' }}\n                                readOnly\n                                disabled\n                                required={true} />\n                            <div className=\"w-100\">\n                                <input\n                                    type=\"tel\"\n                                    name=\"phoneNuber\"\n                                    onChange={handlerChange}\n                                    defaultValue={studentPrimaryData.phone}\n                                    className={`login-inp${mobileErr ? ' login-inp-error' : ''}`}\n                                    placeholder=\"Mobile Number\"\n                                    required={true} />\n                                {mobileErr ? <p className=\"inp-errors\">{mobileErr}</p> : null}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-6\">\n                    <div className=\"login-grp\">\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            onChange={handlerChange}\n                            defaultValue={studentPrimaryData.email}\n                            className={`login-inp${emailErr ? ' login-inp-error' : ''}`}\n                            placeholder=\"Office mail\"\n                            required={false} />\n                        {emailErr ? <p className=\"inp-errors\">{emailErr}</p> : null}\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-md-6\">\n                    <h6 className=\"reg-label\">Present Address</h6>\n                    <div className=\"login-grp\">\n                        <input\n                            type=\"text\"\n                            name=\"presentAddressLine1\"\n                            onChange={handlerChange}\n                            defaultValue={studentPrimaryData.presentAddressLine1}\n                            className=\"login-inp\"\n                            placeholder=\"Address (Line 1)\"\n                            required={false} />\n                    </div>\n                    <div className=\"login-grp\">\n                        <input\n                            type=\"text\"\n                            name=\"presentAddressLine2\"\n                            onChange={handlerChange}\n                            defaultValue={studentPrimaryData.presentAddressLine2}\n                            className=\"login-inp\"\n                            placeholder=\"Address (Line 2)\"\n                            required={false} />\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-6 pr-1\">\n                            <div className=\"login-grp\">\n                                <select\n                                    name=\"presentAddressCountry\"\n                                    onChange={handlerChange}\n                                    defaultValue={studentPrimaryData.presentAddressCountry ? studentPrimaryData.presentAddressCountry : 'DEFAULT'}\n                                    // defaultValue={'DEFAULT'}\n                                    className=\"login-inp\"\n                                    required={false}>\n                                    <option value={'DEFAULT'} disabled>Country</option>\n                                    {countryCodes && countryCodes.length >= 0\n                                        ? countryCodes.map((item, i) => <option key={i} value={item.name}>{item.name}</option>) : (null)\n                                    }\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"col-md-6 pl-1\">\n                            <div className=\"login-grp\">\n                                <select\n                                    name=\"presentAddressState\"\n                                    onChange={handlerChange}\n                                    defaultValue={studentPrimaryData.presentAddressState ? studentPrimaryData.presentAddressState : 'DEFAULT'}\n                                    className=\"login-inp\"\n                                    required={false}>\n                                    <option value={'DEFAULT'} disabled>State</option>\n                                    <option value=\"TS\">TS</option>\n                                    <option value=\"AP\">AP</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-4 pr-1\">\n                            <div className=\"login-grp\">\n                                <input\n                                    type=\"text\"\n                                    name=\"presentAddressCity\"\n                                    onChange={handlerChange}\n                                    defaultValue={studentPrimaryData.presentAddressCity}\n                                    className=\"login-inp\"\n                                    placeholder=\"City\"\n                                    required={false} />\n                            </div>\n                        </div>\n                        <div className=\"col-md-4 px-1\">\n                            <div className=\"login-grp\">\n                                <input\n                                    type=\"text\"\n                                    name=\"presentAddressDistrict\"\n                                    onChange={handlerChange}\n                                    defaultValue={studentPrimaryData.presentAddressDistrict}\n                                    className=\"login-inp\"\n                                    placeholder=\"District\"\n                                    required={false} />\n                            </div>\n                        </div>\n                        <div className=\"col-md-4 pl-1\">\n                            <div className=\"login-grp\">\n                                <input\n                                    type=\"number\"\n                                    name=\"presentAddressZipcode\"\n                                    onChange={handlerChange}\n                                    defaultValue={studentPrimaryData.presentAddressZipcode}\n                                    className=\"login-inp\"\n                                    placeholder=\"Zipcode\"\n                                    required={false} />\n                            </div>\n                        </div>\n                    </div>\n                    {/* <div className=\"row\">\n                        <div className=\"col-md-6 pr-1\">\n                            <div className=\"login-grp\">\n                                <input\n                                    type=\"tel\"\n                                    name=\"corporateHQAddressPhone\"\n                                    onChange={handlerChange}\n                                    defaultValue={studentPrimaryData.corporateHQAddressPhone}\n                                    className={`login-inp${mobileErr ? ' login-inp-error' : ''}`}\n                                    placeholder=\"Phone Number\"\n                                    required={true} />\n                                {mobileErr ? <p className=\"inp-errors\">{mobileErr}</p> : null}\n                            </div>\n                        </div>\n                        <div className=\"col-md-6 pl-1\">\n                            <div className=\"login-grp\">\n                                <input\n                                    type=\"email\"\n                                    name=\"corporateHQAddressEmail\"\n                                    onChange={handlerChange}\n                                    defaultValue={studentPrimaryData.corporateHQAddressEmail}\n                                    className={`login-inp${emailErr ? ' login-inp-error' : ''}`}\n                                    placeholder=\"Office mail\"\n                                    required={false} />\n                                {emailErr ? <p className=\"inp-errors\">{emailErr}</p> : null}\n                            </div>\n                        </div>\n                    </div> */}\n                </div>\n                <div className=\"col-md-6\">\n                    <div className=\"d-lg-flex\">\n                        <h6 className=\"reg-label\">Permanent Address</h6>\n                        <div className=\"custom-control custom-checkbox\">\n                            <input\n                                type=\"checkbox\"\n                                onChange={saveData}\n                                className=\"custom-control-input\"\n                                id=\"save\" />\n                            <label className=\"custom-control-label\" htmlFor=\"save\">Same as Present Address</label>\n                        </div>\n                    </div>\n                    <div className=\"login-grp\">\n                        <input\n                            type=\"text\"\n                            name=\"permanentAddressLine1\"\n                            onChange={handlerChange}\n                            defaultValue={studentPrimaryData.permanentAddressLine1}\n                            className=\"login-inp\"\n                            placeholder=\"Address (Line 1)\"\n                            required={false} />\n                    </div>\n                    <div className=\"login-grp\">\n                        <input\n                            type=\"text\"\n                            name=\"permanentAddressLine2\"\n                            onChange={handlerChange}\n                            defaultValue={studentPrimaryData.permanentAddressLine2}\n                            className=\"login-inp\"\n                            placeholder=\"Address (Line 2)\"\n                            required={false} />\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-6 pr-1\">\n                            <div className=\"login-grp\">\n                                <select\n                                    name=\"permanentAddressCountry\"\n                                    onChange={handlerChange}\n                                    value={studentPrimaryData.permanentAddressCountry ? studentPrimaryData.permanentAddressCountry : 'DEFAULT'}\n                                    className=\"login-inp\"\n                                    required={false}>\n                                    <option value={'DEFAULT'} disabled>Country</option>\n                                    <option value=\"IN\">INDIA</option>\n                                    <option value=\"US\">US</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"col-md-6 pl-1\">\n                            <div className=\"login-grp\">\n                                <select\n                                    name=\"permanentAddressState\"\n                                    onChange={handlerChange}\n                                    value={studentPrimaryData.permanentAddressState ? studentPrimaryData.permanentAddressState : 'DEFAULT'}\n                                    className=\"login-inp\"\n                                    required={false}>\n                                    <option value={'DEFAULT'} disabled>State</option>\n                                    <option value=\"TS\">TS</option>\n                                    <option value=\"AP\">AP</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-4 pr-1\">\n                            <div className=\"login-grp\">\n                                <input\n                                    type=\"text\"\n                                    name=\"permanentAddressCity\"\n                                    onChange={handlerChange}\n                                    defaultValue={studentPrimaryData.permanentAddressCity}\n                                    className=\"login-inp\"\n                                    placeholder=\"City\"\n                                    required={false} />\n                            </div>\n                        </div>\n                        <div className=\"col-md-4 px-1\">\n                            <div className=\"login-grp\">\n                                <input\n                                    type=\"text\"\n                                    name=\"permanentAddressDistrict\"\n                                    onChange={handlerChange}\n                                    defaultValue={studentPrimaryData.permanentAddressDistrict}\n                                    className=\"login-inp\"\n                                    placeholder=\"District\"\n                                    required={false} />\n                            </div>\n                        </div>\n                        <div className=\"col-md-4 pl-1\">\n                            <div className=\"login-grp\">\n                                <input\n                                    type=\"number\"\n                                    name=\"permanentAddressZipcode\"\n                                    onChange={handlerChange}\n                                    defaultValue={studentPrimaryData.permanentAddressZipcode}\n                                    className=\"login-inp\"\n                                    placeholder=\"Zipcode\"\n                                    required={false} />\n                            </div>\n                        </div>\n                    </div>\n                    {/* <div className=\"row\">\n                        <div className=\"col-md-6 pr-1\">\n                            <div className=\"login-grp\">\n                                <input\n                                    type=\"tel\"\n                                    name=\"corporateLocalBranchAddressPhone\"\n                                    onChange={handlerChange}\n                                    defaultValue={studentPrimaryData.corporateLocalBranchAddressPhone}\n                                    className={`login-inp${mobile2Err ? ' login-inp-error' : ''}`}\n                                    placeholder=\"Phone Number\"\n                                    required={false} />\n                                {mobile2Err ? <p className=\"inp-errors\">{mobile2Err}</p> : null}\n                            </div>\n                        </div>\n                        <div className=\"col-md-6 pl-1\">\n                            <div className=\"login-grp\">\n                                <input\n                                    type=\"email\"\n                                    name=\"corporateLocalBranchAddressEmail\"\n                                    onChange={handlerChange}\n                                    defaultValue={studentPrimaryData.corporateLocalBranchAddressEmail}\n                                    className={`login-inp${email2Err ? ' login-inp-error' : ''}`}\n                                    placeholder=\"Office mail\"\n                                    required={false} />\n                                {email2Err ? <p className=\"inp-errors\">{email2Err}</p> : null}\n                            </div>\n                        </div>\n                    </div> */}\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-md-4\">\n                    <div className=\"login-grp\">\n                        <input\n                            type=\"text\"\n                            name=\"fathersFirstName\"\n                            onChange={handlerChange}\n                            defaultValue={studentPrimaryData.fathersFirstName}\n                            className=\"login-inp\"\n                            placeholder=\"Father's First Name\"\n                            autoFocus\n                            required={true} />\n                    </div>\n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"login-grp\">\n                        <input\n                            type=\"text\"\n                            name=\"fathersMiddleName\"\n                            onChange={handlerChange}\n                            defaultValue={studentPrimaryData.fathersMiddleName}\n                            className=\"login-inp\"\n                            placeholder=\"Father's last Name\"\n                            autoFocus\n                            required={true} />\n                    </div>\n                </div>\n                {/* <div className=\"col-md-4\">\n                    <div className=\"login-grp\">\n                        <input\n                            type=\"text\"\n                            name=\"fathersLastName\"\n                            onChange={handlerChange}\n                            defaultValue={studentPrimaryData.fathersLastName}\n                            className=\"login-inp\"\n                            placeholder=\"Father's Last Name\"\n                            autoFocus\n                            required={true} />\n                    </div>\n                </div> */}\n\n                <div className=\"col-md-4\">\n                    <div className=\"login-grp\">\n                        <input\n                            type=\"email\"\n                            name=\"fathersGuardianEmailID\"\n                            onChange={handlerChange}\n                            defaultValue={studentPrimaryData.fathersGuardianEmailID}\n                            className={`login-inp${femailErr ? ' login-inp-error' : ''}`}\n                            placeholder=\"Father's mail\"\n                            required={false} />\n                        {femailErr ? <p className=\"inp-errors\">{femailErr}</p> : null}\n                    </div>\n                </div>\n\n                <div className=\"w-100\"></div>\n                <div className=\"col-md-4\">\n                    <div className=\"login-grp\">\n                        <input\n                            type=\"text\"\n                            name=\"fathersGuardianOccupation\"\n                            onChange={handlerChange}\n                            defaultValue={studentPrimaryData.fathersGuardianOccupation}\n                            className=\"login-inp\"\n                            placeholder=\"Father's Occupation\"\n                            autoFocus\n                            required={true} />\n                    </div>\n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"login-grp\">\n                        <input\n                            type=\"text\"\n                            name=\"fathersGuardianCompany\"\n                            onChange={handlerChange}\n                            defaultValue={studentPrimaryData.fathersGuardianCompany}\n                            className=\"login-inp\"\n                            placeholder=\"Father's Company name\"\n                            autoFocus\n                            required={true} />\n                    </div>\n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"login-grp\">\n                        <input\n                            type=\"tel\"\n                            name=\"fathersGuardianPhoneNumber\"\n                            onChange={handlerChange}\n                            defaultValue={studentPrimaryData.fathersGuardianPhoneNumber}\n                            className={`login-inp${fmobileErr ? ' login-inp-error' : ''}`}\n                            placeholder=\"Father's Phone Number\"\n                            required={true} />\n                        {fmobileErr ? <p className=\"inp-errors\">{fmobileErr}</p> : null}\n                    </div>\n                </div>\n\n            </div>\n            <div className=\"text-right\">\n                <button type=\"submit\" className=\"reg-btn\">Next</button>\n            </div>\n        </form>\n    )\n}\n\nexport default StudentPrimaryCmp;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { GetCountryCodeAction, SaveCoprorateData } from '../../../Store/Actions/CorporateActions/CorporateAction';\nimport StudentPrimaryCmp from '../../../Components/Forms/StudentCmp/StudentPrimaryCmp';\n\nconst StudentRegister = (props) => {\n    const initialState = {\n        firstName: '',\n        middleName: '',\n        lastName: '',\n        email: '',\n        phoneNuber: '',\n        collegeID: '',\n        permanentAddressLine1: '',\n        permanentAddressLine2: '',\n        permanentAddressLine3: '',\n        permanentAddressCountry: '',\n        permanentAddressState: '',\n        permanentAddressCity: '',\n        permanentAddressDistrict: '',\n        permanentAddressZipcode: '',\n        permanentAddressPhone: '',\n        permanentAddressemail: '',\n        presentAddressLine1: '',\n        presentAddressLine2: '',\n        presentAddressLine3: '',\n        presentAddressCountry: '',\n        presentAddressState: '',\n        presentAddressCity: '',\n        presentAddressDistrict: '',\n        presentAddressZipcode: '',\n        presentAddressPhone: '',\n        presentAddressemail: '',\n        fathersFirstName: '',\n        fathersMiddleName: '',\n        fathersLastName: '',\n        fathersGuardianOccupation: '',\n        fathersGuardianCompany: '',\n        fathersGuardianPhoneNumber: '',\n        fathersGuardianEmailID: '',\n        mothersGuardianFullName: '',\n        mothersGuardianOccupation: '',\n        mothersGuardianCompany: '',\n        mothersGuardianDesignation: '',\n        mothersGuardianPhoneNumber: '',\n        mothersGuardianEmailID: '',\n        collegeEmail: ''\n    };\n\n    const [studentPrimaryData, setStudentPrimaryData] = useState(initialState);\n    const [errors, setErrors] = useState({ emailErr: '', email2Err: '', mobileErr: '', mobile2Err: '', cgemailErr: '', femailErr: '' });\n    const [code, setCode] = useState('');\n    const [code2, setCode2] = useState('');\n\n    const dispatch = useDispatch();\n    const storeData = useSelector(state => state.CorporateReducer.corporatePrimaryState);\n    const countryCodes = useSelector(state => state.CorporateReducer.countryCodes);\n\n    useEffect(() => {\n        dispatch(GetCountryCodeAction());\n        if (storeData) {\n            for (const key in storeData) {\n                setStudentPrimaryData(prevState => ({\n                    ...prevState,\n                    [key]: storeData[key]\n                }))\n            }\n        }\n    }, []);\n\n    const handlerChange = (event) => {\n        const { name, value } = event.target;\n        setStudentPrimaryData(preState => ({\n            ...preState,\n            [name]: value\n        }));\n\n        switch (name) {\n            case 'email':\n                const mailformat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n                if (value && mailformat.test(value)) {\n                    setErrors(preState => ({\n                        ...preState,\n                        emailErr: ''\n                    }));\n                } else if (!value || !mailformat.test(value)) {\n                    setErrors(preState => ({\n                        ...preState,\n                        emailErr: 'Email error'\n                    }));\n                }\n                return;\n\n            case 'collegeEmail':\n                const mailformat2 = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n                if (value && mailformat2.test(value)) {\n                    setErrors(preState => ({\n                        ...preState,\n                        cgemailErr: ''\n                    }));\n                } else if (!value || !mailformat2.test(value)) {\n                    setErrors(preState => ({\n                        ...preState,\n                        cgemailErr: 'Email error'\n                    }));\n                }\n                return;\n\n            case 'fathersGuardianEmailID':\n                const mailformat3 = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n                if (value && mailformat3.test(value)) {\n                    setErrors(preState => ({\n                        ...preState,\n                        femailErr: ''\n                    }));\n                } else if (!value || !mailformat3.test(value)) {\n                    setErrors(preState => ({\n                        ...preState,\n                        femailErr: 'Email error'\n                    }));\n                }\n                return;\n\n            // case 'corporateLocalBranchAddressEmail':\n            //     const mailformat1 = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n            //     if (value && mailformat1.test(value)) {\n            //         setErrors(preState => ({\n            //             ...preState,\n            //             email2Err: ''\n            //         }));\n            //     } else if (!value || !mailformat1.test(value)) {\n            //         setErrors(preState => ({\n            //             ...preState,\n            //             email2Err: 'Email error'\n            //         }));\n            //     }\n            //     return;\n\n            case 'phoneNuber':\n                const num = /^[+-]?[0-9\\b]+$/;\n                if (num.test(value)) {\n                    // if (val.match(phoneno)) {\n                    if (value.length === 10) {\n                        setErrors(preState => ({\n                            ...preState,\n                            mobileErr: ''\n                        }));\n                    } else {\n                        setErrors(preState => ({\n                            ...preState,\n                            mobileErr: 'Invalid'\n                        }));\n                    }\n                } else {\n                    setErrors(preState => ({\n                        ...preState,\n                        mobileErr: 'Invalid'\n                    }));\n                }\n                return;\n\n            case 'fathersGuardianPhoneNumber':\n                const num2 = /^[+-]?[0-9\\b]+$/;\n                if (num2.test(value)) {\n                    // if (val.match(phoneno)) {\n                    if (value.length === 13) {\n                        setErrors(preState => ({\n                            ...preState,\n                            fmobileErr: ''\n                        }));\n                    } else {\n                        setErrors(preState => ({\n                            ...preState,\n                            fmobileErr: 'Invalid'\n                        }));\n                    }\n                } else {\n                    setErrors(preState => ({\n                        ...preState,\n                        fmobileErr: 'Invalid'\n                    }));\n                }\n                return;\n\n            case 'presentAddressCountry':\n                const countryCode1 = countryCodes.find(item => item.name === value);\n                setCode('+' + countryCode1?.callingCodes[0]);\n                return;\n\n\n            // case 'corporateLocalBranchAddressPhone':\n            //     const num2 = /^[+-]?[0-9\\b]+$/;\n            //     if (num2.test(value)) {\n            //         // if (val.match(phoneno)) {\n            //         if (value.length >= 13) {\n            //             setErrors(preState => ({\n            //                 ...preState,\n            //                 mobile2Err: ''\n            //             }));\n            //         } else {\n            //             setErrors(preState => ({\n            //                 ...preState,\n            //                 mobile2Err: 'Invalid'\n            //             }));\n            //         }\n            //     } else {\n            //         setErrors(preState => ({\n            //             ...preState,\n            //             mobile2Err: 'Invalid'\n            //         }));\n            //     }\n            //     return;\n\n            default:\n                break;\n        }\n    }\n\n    const saveData = (event) => {\n        const isCheked = event.target.checked;\n        if (isCheked) {\n            setStudentPrimaryData(preState => ({\n                ...preState,\n                permanentAddressLine1: studentPrimaryData.presentAddressLine1,\n                permanentAddressLine2: studentPrimaryData.presentAddressLine2,\n                permanentAddressCountry: studentPrimaryData.presentAddressCountry,\n                permanentAddressState: studentPrimaryData.presentAddressState,\n                permanentAddressCity: studentPrimaryData.presentAddressCity,\n                permanentAddressDistrict: studentPrimaryData.presentAddressDistrict,\n                permanentAddressZipcode: studentPrimaryData.presentAddressZipcode,\n                permanentAddressPhone: studentPrimaryData.presentAddressPhone,\n                permanentAddressemail: studentPrimaryData.presentAddressemail\n            }))\n        } else {\n            setStudentPrimaryData(preState => ({\n                ...preState,\n                permanentAddressLine1: '',\n                permanentAddressLine2: '',\n                permanentAddressCountry: '',\n                permanentAddressState: '',\n                permanentAddressCity: '',\n                permanentAddressDistrict: '',\n                permanentAddressZipcode: '',\n                permanentAddressPhone: '',\n                permanentAddressemail: ''\n            }))\n        }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const { emailErr, mobileErr } = errors;\n        const { firstName, lastName, email, phoneNuber } = studentPrimaryData;\n        if (firstName && lastName && email && phoneNuber && !emailErr && !mobileErr) {\n            studentPrimaryData.phoneNuber = code + phoneNuber;\n            studentPrimaryData.permanentAddressPhone = code + phoneNuber;\n            studentPrimaryData.presentAddressPhone = code + phoneNuber;\n            studentPrimaryData.fathersGuardianFullName = studentPrimaryData.fathersFirstName + \" \" + studentPrimaryData.fathersLastName\n                + \" \" + studentPrimaryData.fathersMiddleName;\n            dispatch(SaveCoprorateData(studentPrimaryData, 1));\n            props.history.push('/register/studentSecondary');\n        } else {\n            toast.error(\"Please enter all input fields\")\n        }\n    }\n\n    return (\n        <StudentPrimaryCmp\n            studentPrimaryData={studentPrimaryData}\n            code={code}\n            countryCodes={countryCodes}\n            errors={errors}\n            history={props.history}\n            saveData={saveData}\n            handlerChange={handlerChange}\n            handleSubmit={handleSubmit}\n        />\n\n    )\n}\n\nexport default StudentRegister;\n"],"sourceRoot":""}