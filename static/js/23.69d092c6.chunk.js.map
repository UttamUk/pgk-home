{"version":3,"sources":["Store/Actions/CorporateActions/CorporateAction.js","Components/Forms/CorporateCmp/RegisterCmp/CorporateSecondaryCmp.js","Pages/Forms/Corporate/Register/CorporateSecondary.js"],"names":["ResetRdrAction","dispatch","type","actionTypes","payload","undefined","APIStatus","val","GetCountryCodeAction","Axios","get","then","res","resp","data","catch","err","JSON","stringify","toast","error","parse","message","SignupAction","model","history","URL","formData","FormData","key","append","post","localStorage","removeItem","setItem","success","push","response","errors","StudentSignupAction","VerifyOtpAction","MobileVerified","emailVerified","ResendOtpAction","GetCategoryListAction","SaveCoprorateData","step","CreatePaymentAction","token","getItem","header","headers","sessionStorage","orderID","ValidatePaymentAction","messages","forEach","referenceObject","CorporateSecondaryCmp","selectedName","attachment","path","categoryList","corporateSecondary","handleChangeImg","handlerChange","handleSubmit","corporateCategory","corporateIndustry","corporateTypes","universityCategory","imgPath","onSubmit","className","name","onChange","value","corporateType","autoFocus","required","disabled","React","Children","toArray","map","item","codeDescription","title","placeholder","accept","id","htmlFor","src","alt","defaultValue","companyProfile","rows","onClick","CorporateSecondary","props","initialState","yearOfEstablishment","useState","setCorporateSecondary","profileErr","setErrors","setPath","storeData","useSelector","state","CorporateReducer","corporatePrimaryState","useDispatch","useEffect","Object","keys","keyName","prevState","event","preventDefault","target","files","preState","length","i","reader","FileReader","onload","ev","result","split","bind","readAsDataURL","date","parseInt"],"mappings":"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","file":"static/js/23.69d092c6.chunk.js","sourcesContent":["\nimport Axios from '../../../utils/axios';\nimport { toast } from 'react-toastify';\nimport * as actionTypes from './actionTypes';\n\n\n\n// RESET ALL REDUCERES\nexport const ResetRdrAction = () => {\n    return (dispatch) => {\n        dispatch({\n            type: actionTypes.RESET,\n            payload: undefined\n        })\n    }\n}\n\nexport const APISuccess = () => {\n    return (dispatch) => {\n        dispatch({\n            type: actionTypes.SUCCESS,\n            payload: true\n        })\n    }\n}\nexport const APIStatus = (val) => {\n    return (dispatch) => {\n        dispatch({ type: actionTypes.APISTATUS, payload: val });\n    }\n}\n\nexport const APIError = () => {\n    return (dispatch) => {\n        dispatch({\n            type: actionTypes.ERROR,\n            payload: true\n        })\n    }\n}\n\n\nexport const GetCountryCodeAction = () => {\n    return (dispatch) => {\n        const URL = \"http://restcountries.eu/rest/v2/all?fields=name;flag;callingCodes;\";\n        Axios.get(URL)\n            .then((res) => {\n                let resp = res.data;\n                dispatch({ type: actionTypes.COUNTRYCODES, payload: resp });\n            })\n            .catch((err) => {\n                const val = JSON.stringify(err);\n                toast.error(JSON.parse(val).message);\n            })\n    }\n}\n\n// REGISTER (CORPORATE & UNIVERSITY)\nexport const SignupAction = (model, history, type) => {\n    return (dispatch) => {\n        // const URL = \"/o/signUp/Corporate\";\n        let URL;\n        if (type === 'Corporate') {\n            URL = \"/o/signUp/Corporate\";\n        } else if (type === 'University') {\n            URL = \"/o/signUp/University\";\n        }\n        let formData = new FormData();\n        for (const key in model) {\n            formData.append(key, model[key]);\n        }\n        dispatch(APIStatus(true));\n        dispatch({ type: actionTypes.CORPORATE, payload: model });\n        Axios.post(URL, formData)\n            .then((res) => {\n                let resp = res.data;\n                localStorage.removeItem('imgpath');\n                localStorage.setItem('regStatus', JSON.stringify(resp));\n                localStorage.setItem('steps', 3);\n                dispatch({ type: actionTypes.STEPS, payload: 3 });\n                dispatch(APIStatus(false));\n                toast.success(resp.message);\n                history.push('/register/authentication');\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\n// REGISTER (STUDENT)\nexport const StudentSignupAction = (model, history, type) => {\n    return (dispatch) => {\n        const URL = \"/o/signUp/Student\";\n        let formData = new FormData();\n        for (const key in model) {\n            formData.append(key, model[key]);\n        }\n        dispatch(APIStatus(true));\n        dispatch({ type: actionTypes.CORPORATE, payload: model });\n        Axios.post(URL, formData)\n            .then((res) => {\n                let resp = res.data;\n                localStorage.removeItem('imgpath');\n                localStorage.setItem('regStatus', JSON.stringify(resp));\n                localStorage.setItem('steps', 3);\n                dispatch({ type: actionTypes.STEPS, payload: 3 });\n                dispatch(APIStatus(false));\n                toast.success(resp.message);\n                history.push('/register/studentAuthentication');\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\n// LOGIN\nexport const LoginUserAction = (model, history) => {\n    return (dispatch) => {\n        const URL = \"/o/login\";\n        let formData = new FormData();\n        formData.append('stakeholder', model.stakeholder);\n        formData.append('userID', model.userID);\n        formData.append('password', model.password);\n        dispatch(APIStatus(true));\n        Axios.post(URL, formData)\n            .then((res) => {\n                let resp = res.data;\n                localStorage.setItem('token', resp.token);\n                dispatch(APIStatus(false));\n                toast.success(\"Login successful\");\n                if (resp.redirectURL === '/dashboard') {\n                    history.push('/dashboard');\n                } else {\n                    history.push('/register/payment');\n                }\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\n// VERIFY OTP\nexport const VerifyOtpAction = (model, type, history) => {\n    return (dispatch) => {\n        // const URL = \"/verifyMobile\";\n        const URL = \"/o/verifyOTP\";\n        // if (type === 1) {\n        //     URL = \"/o/verifyMobile\"\n        // } else {\n        //     URL = \"/o/verifyEmail\"\n        // }\n        let formData = new FormData();\n        for (const key in model) {\n            formData.append(key, model[key]);\n        }\n        dispatch(APIStatus(true));\n        Axios.post(URL, formData)\n            .then((res) => {\n                let resp = res.data;\n                dispatch(APIStatus(false));\n                if (resp?.MobileVerified && resp?.emailVerified) {\n                    toast.success('OTP verification successful');\n                    history.push('/register/completed');\n                } else {\n                    toast.error('OTP verification failed');\n                }\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\n// RESEND OTP\nexport const ResendOtpAction = (model) => {\n    return (dispatch) => {\n        const URL = \"/o/resendOtp\";\n        let formData = new FormData();\n        for (const key in model) {\n            formData.append(key, model[key]);\n        }\n        dispatch(APIStatus(true));\n        Axios.post(URL, formData)\n            .then((res) => {\n                let resp = res.data;\n                toast.success(resp.message);\n                dispatch(APIStatus(false));\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\nexport const GetCategoryListAction = (type) => {\n    return (dispatch) => {\n        // const URL = \"/u/lut/?lutList=corporateType&lutList=corporateCategory&lutList=corporateIndustry\";\n        let URL;\n        if (type === 'Corporate') {\n            URL = \"/u/lut/?lutList=corporateType&lutList=corporateCategory&lutList=corporateIndustry\"\n        } else if (type === 'University') {\n            URL = \"/u/lut/?lutList=universityCategory\"\n        }\n        Axios.get(URL)\n            .then((res) => {\n                let resp = res.data;\n                dispatch({ type: actionTypes.CATEGOTYLIST, payload: resp });\n            })\n            .catch((err) => {\n                const val = JSON.stringify(err);\n                toast.error(JSON.parse(val).message);\n            })\n    }\n}\n\nexport const SaveCoprorateData = (data, step) => {\n    return (dispatch) => {\n        localStorage.setItem('steps', step);\n        dispatch({ type: actionTypes.CORPORATE, payload: data });\n        dispatch({ type: actionTypes.STEPS, payload: step });\n    }\n}\n\n\n// CREATE PAYMENT\nexport const CreatePaymentAction = (model) => {\n    return (dispatch) => {\n        const URL = \"/pg/createPayment\";\n        let formData = new FormData();\n        for (const key in model) {\n            formData.append(key, model[key]);\n        }\n        // formData.append('payType', val);\n        // formData.append('payType', 'REG_FEE');\n        dispatch(APIStatus(true));\n        const token = localStorage.getItem('token');\n        const header = {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                // 'Content-Type': 'application/json'\n            }\n        }\n        Axios.post(URL, formData, header)\n            .then((res) => {\n                let resp = res.data;\n                sessionStorage.setItem('orderID', resp.orderID);\n                dispatch({ type: actionTypes.PAYMENTORDER, payload: resp });\n                dispatch(APIStatus(false));\n                // toast.success(resp.message);\n                // history.push('/register/completed');\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}\n\n// VALIDATE PAYMENT\nexport const ValidatePaymentAction = (model) => {\n    return (dispatch) => {\n        const URL = \"/pg/verifyPayment\";\n        let formData = new FormData();\n        formData.append('orderID', model);\n        const token = localStorage.getItem('token');\n        const header = {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                // 'Content-Type': 'application/json'\n            }\n        }\n        dispatch(APIStatus(true));\n        Axios.post(URL, formData, header)\n            .then((res) => {\n                let resp = res.data;\n                resp?.messages?.forEach(key => {\n                    toast.success(key);\n                });\n                dispatch(APIStatus(false));\n                dispatch({ type: actionTypes.REFERENCEOBJ, payload: JSON.parse(resp?.referenceObject) });\n                // history.push('/register/completed');\n            })\n            .catch((err) => {\n                if (err.response) {\n                    toast.error(err.response.data.errors[0].message);\n                } else {\n                    toast.error(\"Something Wrong!\", err.message);\n                }\n                dispatch(APIStatus(false));\n            })\n    }\n}","import React from 'react';\n\nconst CorporateSecondaryCmp = ({ history, selectedName, attachment, path, categoryList, corporateSecondary, handleChangeImg, handlerChange, handleSubmit }) => {\n    const { corporateCategory, corporateIndustry, corporateTypes, universityCategory } = categoryList;\n    const imgPath = \"data:image/png;base64,\" + path;\n    // const imgPath = \"data:image/png;base64,\" + (path ? path : localStorage.getItem('imgpath'));\n\n    return (\n        <form onSubmit={handleSubmit} className=\"login-form reg-form\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-10\">\n                    {selectedName === 'Corporate'\n                        ? <>\n                            <div className=\"row\">\n                                <div className=\"col-md-6 pr-1\">\n                                    <div className=\"login-grp\">\n                                        <select\n                                            name=\"corporateType\"\n                                            onChange={handlerChange}\n                                            value={corporateSecondary.corporateType ? corporateSecondary.corporateType : 'DEFAULT'}\n                                            className=\"login-inp\"\n                                            autoFocus required={true}>\n                                            <option value={'DEFAULT'} disabled>Corporate Type</option>\n                                            {React.Children.toArray(\n                                                corporateTypes && corporateTypes.map((item) => <option value={item.codeDescription}>{item.codeDescription}</option>)\n                                            )}\n                                        </select>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-6 pl-1\">\n                                    <div className=\"login-grp\">\n                                        <select\n                                            name=\"corporateCategory\"\n                                            onChange={handlerChange}\n                                            value={corporateSecondary.corporateCategory ? corporateSecondary.corporateCategory : 'DEFAULT'}\n                                            // defaultValue={'DEFAULT'}\n                                            className=\"login-inp\"\n                                            required={true}>\n                                            <option value={'DEFAULT'} disabled>Corporate Category</option>\n                                            {React.Children.toArray(\n                                                corporateCategory && corporateCategory.map((item) => <option value={item.codeDescription}>{item.codeDescription}</option>)\n                                            )}\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-md-6 pr-1\">\n                                    <div className=\"login-grp\">\n                                        <select\n                                            name=\"corporateIndustry\"\n                                            onChange={handlerChange}\n                                            value={corporateSecondary.corporateIndustry ? corporateSecondary.corporateIndustry : 'DEFAULT'}\n                                            // defaultValue={'DEFAULT'}\n                                            className=\"login-inp\"\n                                            required={false}>\n                                            <option value={'DEFAULT'} disabled>{selectedName} Industry</option>\n                                            {React.Children.toArray(\n                                                corporateIndustry && corporateIndustry.map((item) => <option value={item.codeDescription}>{item.codeDescription}</option>)\n                                            )}\n                                        </select>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-6 pl-1\">\n                                    <div className=\"login-grp\">\n                                        <input\n                                            type=\"date\"\n                                            name=\"yearOfEstablishment\"\n                                            onChange={handlerChange}\n                                            className=\"login-inp\"\n                                            title=\"Year of Establishment\"\n                                            placeholder=\"Year of Establishment\"\n                                            required={true} />\n                                    </div>\n                                </div>\n                            </div>\n                        </>\n                        : (null)}\n                    {selectedName === 'University'\n                        ? <>\n                            <div className=\"row\">\n                                <div className=\"col-md-6 pr-1\">\n                                    <div className=\"login-grp\">\n                                        <select\n                                            name=\"corporateIndustry\"\n                                            onChange={handlerChange}\n                                            value={corporateSecondary.corporateIndustry ? corporateSecondary.corporateIndustry : 'DEFAULT'}\n                                            // defaultValue={'DEFAULT'}\n                                            className=\"login-inp\"\n                                            required={false}>\n                                            <option value={'DEFAULT'} disabled>University Sector</option>\n                                            {/* <option value=\"Corporate\">Corporate</option>\n                                            <option value=\"University\">University</option>\n                                            <option value=\"Student\">Student</option> */}\n                                            {React.Children.toArray(\n                                                universityCategory && universityCategory.map((item) => <option value={item.codeDescription}>{item.codeDescription}</option>)\n                                            )}\n                                        </select>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-6 pl-1\">\n                                    <div className=\"login-grp\">\n                                        <input\n                                            type=\"date\"\n                                            name=\"yearOfEstablishment\"\n                                            onChange={handlerChange}\n                                            className=\"login-inp\"\n                                            title=\"Year of Establishment\"\n                                            placeholder=\"Year of Establishment\"\n                                            required={true} />\n                                    </div>\n                                </div>\n                            </div>\n                        </>\n                        : (null)}\n                    <div className=\"reg-attach\">\n                        {attachment ? <span><i className=\"fas fa-check-circle\"></i></span> : (null)}\n                        <input\n                            type=\"file\"\n                            onChange={handleChangeImg}\n                            accept=\"image/*\"\n                            className=\"reg-inp\"\n                            name=\"attachment\"\n                            id=\"attachment\"\n                            required={false} />\n                        <label htmlFor=\"attachment\" className=\"reg-label\">Attach</label>\n                    </div>\n                    {imgPath ?\n                        <div className=\"text-center\">\n                            <img src={imgPath} alt=\"please select image\" className=\"img-thumbnail mb-3 w-50\" />\n                        </div> : (null)}\n                    <div className=\"login-grp\">\n                        <textarea\n                            name=\"companyProfile\"\n                            onChange={handlerChange}\n                            defaultValue={corporateSecondary.companyProfile}\n                            rows={6}\n                            className=\"login-inp login-txtarea\"\n                            placeholder=\"Company Profile (in Brief)\"\n                            required={false}\n                        ></textarea>\n                    </div>\n                    <div className=\"d-flex justify-content-between mt-4\">\n                        <button type=\"button\" className=\"reg-btn\" onClick={() => { history.push('/register') }}>Previous</button>\n                        <button type=\"submit\" className=\"reg-btn\">Next</button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default CorporateSecondaryCmp;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport CorporateSecondaryCmp from '../../../../Components/Forms/CorporateCmp/RegisterCmp/CorporateSecondaryCmp';\nimport { GetCategoryListAction, SaveCoprorateData } from '../../../../Store/Actions/CorporateActions/CorporateAction';\n\nconst CorporateSecondary = (props) => {\n    const initialState = {\n        corporateType: '',\n        corporateCategory: '',\n        corporateIndustry: '',\n        companyProfile: '',\n        attachment: '',\n        yearOfEstablishment: '',\n    };\n    const [corporateSecondary, setCorporateSecondary] = useState(initialState);\n    const [errors, setErrors] = useState({ profileErr: '' });\n    const [path, setPath] = useState('');\n\n    const storeData = useSelector(state => state.CorporateReducer.corporatePrimaryState);\n    const categoryList = useSelector(state => state.CorporateReducer.categoryList);\n\n    const selectedName = localStorage.getItem('type');\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(GetCategoryListAction(selectedName));\n        // if (selectedName === 'Corporate') {\n        // }\n        if (storeData) {\n            Object.keys(initialState).map(keyName => {\n                for (const key in storeData) {\n                    if (keyName === key) {\n                        setCorporateSecondary(prevState => ({\n                            ...prevState,\n                            [key]: storeData[key]\n                        }))\n                    }\n                }\n            })\n        }\n\n    }, []);\n\n    const handleChangeImg = (event) => {\n        event.preventDefault();\n        if (event.target.files) {\n            setCorporateSecondary(preState => ({\n                ...preState,\n                attachment: event.target.files[0]\n            }))\n            // if (event.target.files[0].type === \"application/pdf\")\n            const val = event.target.files.length;\n            for (let i = 0; i < val; i++) {\n                let reader = new FileReader();\n                reader.onload = function (ev) {\n                    setPath(ev.target.result.split(',')[1]);\n                    // localStorage.setItem('imgpath', ev.target.result.split(',')[1]);\n                    // setPath(preState => ({\n                    //     ...preState,\n                    //     path: ev.target.result.split(',')[1]\n                    // }))\n                }.bind(this);\n                reader.readAsDataURL(event.target.files[i]);\n            }\n        }\n    }\n\n\n    const handlerChange = (event) => {\n        const { name, value } = event.target;\n\n        if (name === \"yearOfEstablishment\") {\n            let date = parseInt(value)\n            setCorporateSecondary(preState => ({\n                ...preState,\n                [name]: date\n            }));\n        } else {\n            setCorporateSecondary(preState => ({\n                ...preState,\n                [name]: value\n            }));\n        }\n\n        switch (name) {\n            case 'companyProfile':\n                if (value) {\n                    setErrors(preState => ({\n                        ...preState,\n                        profileErr: ''\n                    }));\n                } else if (!value) {\n                    setErrors(preState => ({\n                        ...preState,\n                        profileErr: 'profile error'\n                    }));\n                }\n                return;\n\n            default:\n                break;\n        }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const { profileErr } = errors;\n        const { corporateType, corporateCategory, companyProfile, attachment, yearOfEstablishment, corporateIndustry } = corporateSecondary;\n        if (selectedName === 'Corporate') {\n            if (corporateType && corporateCategory && companyProfile && attachment && yearOfEstablishment && !profileErr) {\n                dispatch(SaveCoprorateData(corporateSecondary, 2));\n                props.history.push('/register/contactPersonnel');\n\n            } else {\n                toast.error(\"Please enter required input fields\")\n            }\n        } else if (selectedName === 'University') {\n            if (corporateIndustry && companyProfile && attachment && yearOfEstablishment && !profileErr) {\n                dispatch(SaveCoprorateData(corporateSecondary, 2));\n                props.history.push('/register/contactPersonnel');\n\n            } else {\n                toast.error(\"Please enter required input fields\")\n            }\n        }\n    }\n\n    return (\n        <CorporateSecondaryCmp\n            history={props.history}\n            selectedName={selectedName}\n            path={path}\n            corporateSecondary={corporateSecondary}\n            attachment={corporateSecondary.attachment}\n            categoryList={categoryList}\n            handleChangeImg={handleChangeImg}\n            handlerChange={handlerChange}\n            handleSubmit={handleSubmit}\n        />\n    )\n}\n\nexport default CorporateSecondary;\n"],"sourceRoot":""}